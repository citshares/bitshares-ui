{"map":"{\"version\":3,\"sources\":[\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/BalanceClaimSelector.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Forms/MyAccounts.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/BalanceClaimActive.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/BalanceClaimAssetTotal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/stores/ImportKeysStore.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/ImportKeys.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/chain/GenesisFilter.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/file-loader/dist/cjs.js?name=bts_genesiskeys_bloom_[sha1:hash:hex:7].dat!/home/citshares/work/UI/bitshares-ui/app/assets/bts_genesiskeys_bloom.dat\",\"/home/citshares/work/UI/bitshares-ui/app/actions/BrainkeyActions.js\",\"/home/citshares/work/UI/bitshares-ui/app/stores/BrainkeyStore.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/Dashboard/AccountCard.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/Brainkey.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Wallet/ExistingAccount.jsx\"],\"names\":[\"BalanceClaimSelector_BalanceClaimSelector\",\"react\",\"nextProps\",\"claim_account_name\",\"this\",\"onClaimAccount\",\"checked\",\"_this2\",\"undefined\",\"props\",\"balances\",\"total_by_account_asset\",\"size\",\"react_default\",\"a\",\"createElement\",\"index\",\"className\",\"style\",\"textAlign\",\"react_translate_component_default\",\"content\",\"map\",\"r\",\"name_asset\",\"key\",\"type\",\"get\",\"onChange\",\"onCheckbox\",\"bind\",\"unclaimed\",\"FormattedAsset\",\"color\",\"amount\",\"asset\",\"vesting\",\"hide_asset\",\"total\",\"toArray\",\"delete\",\"set\",\"BalanceClaimActiveActions\",\"setSelectedBalanceClaims\",\"forEach\",\"v\",\"k\",\"Wallet_BalanceClaimSelector\",\"Object\",\"src\",\"listenTo\",\"BalanceClaimActiveStore\",\"getProps\",\"getState\",\"address_to_pubkey\",\"private_keys\",\"PrivateKeyStore\",\"keys\",\"groupCountMap\",\"immutable_default\",\"Map\",\"asMutable\",\"groupBy\",\"names\",\"pubkey\",\"owner\",\"private_key_object\",\"import_account_names\",\"join\",\"batch_number\",\"Math\",\"ceil\",\"group\",\"distinct\",\"Set\",\"add\",\"groupCount\",\"List\",\"balance\",\"asset_id\",\"l\",\"reduce\",\"public_key_string\",\"vested_balance\",\"Number\",\"sortBy\",\"MyAccounts_MyAccounts\",\"account_names\",\"accounts\",\"filter\",\"account\",\"AccountStore\",\"isMyAccount\",\"sort\",\"AccountSelect\",\"onAccountSelect\",\"center\",\"account_name\",\"propTypes\",\"ChainTypes\",\"ChainAccountsList\",\"isRequired\",\"prop_types_default\",\"func\",\"Forms_MyAccounts\",\"BindToChainState\",\"BalanceClaimActive_BalanceClaimActive\",\"keySeq\",\"setPubkeys\",\"existing_keys\",\"equals\",\"account_refs\",\"loading\",\"LoadingIndicator\",\"import_ready\",\"selected_balances\",\"claim_balance_label\",\"overflowY\",\"onClaimAccountChange\",\"classnames_default\",\"disabled\",\"onClick\",\"onClaimBalance\",\"onBack\",\"e\",\"preventDefault\",\"window\",\"history\",\"back\",\"claimAccountChange\",\"WalletActions\",\"importBalance\",\"catch\",\"error\",\"console\",\"message\",\"data\",\"main\",\"counterpart_default\",\"translate\",\"error_msg\",\"AccountRefsStore\",\"getAccountRefs\",\"__webpack_exports__\",\"BalanceClaimAssetTotal_BalanceClaimAssetTotals\",\"total_by_asset\",\"BalanceClaimAssetTotal\",\"ImportKeysStore\",\"ImportKeysStore_classCallCheck\",\"_this\",\"ImportKeysStore_possibleConstructorReturn\",\"__proto__\",\"getPrototypeOf\",\"call\",\"state\",\"_getInitialState\",\"_export\",\"BaseStore\",\"importing\",\"setState\",\"stores_ImportKeysStore\",\"alt_instance\",\"createStore\",\"__webpack_require__\",\"ImportKeys_KeyCount\",\"_ref\",\"key_count\",\"ImportKeys_ImportKeys\",\"ImportKeys\",\"ImportKeys_classCallCheck\",\"ImportKeys_possibleConstructorReturn\",\"_renderBalanceClaims\",\"keys_to_account\",\"no_file\",\"account_keys\",\"reset_file_name\",\"arguments\",\"length\",\"Date\",\"now\",\"reset_password\",\"password_checksum\",\"import_file_message\",\"import_password_message\",\"imported_keys_public\",\"key_text_message\",\"genesis_filtering\",\"genesis_filter_status\",\"genesis_filter_finished\",\"importSuccess\",\"keep_file_name\",\"updateOnChange\",\"event\",\"value\",\"refs\",\"wifInput\",\"addByPattern\",\"account_keycount\",\"found\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_step\",\"_iterator\",\"Symbol\",\"iterator\",\"next\",\"done\",\"err\",\"return\",\"evt\",\"_this3\",\"reset\",\"file\",\"target\",\"files\",\"reader\",\"FileReader\",\"onload\",\"contents\",\"result\",\"json_contents\",\"JSON\",\"parse\",\"_parseImportKeyUpload\",\"name\",\"update_state\",\"_passwordCheck\",\"_parseWalletJson\",\"ee\",\"readAsText\",\"file_name\",\"_this4\",\"unfiltered_account_keys\",\"Array\",\"isArray\",\"genesis_filter\",\"GenesisFilter\",\"isAvailable\",\"genesis_filter_initalizing\",\"init\",\"filter_status\",\"status\",\"success\",\"initalizing\",\"push\",\"encrypted_brainkey\",\"address_to_enckeys\",\"account_addresses\",\"savePubkeyAccount\",\"bitsharesjs_ws_es\",\"address_prefix\",\"substring\",\"address\",\"es\",\"fromPublicKeyString\",\"toAddressString\",\"addresses\",\"Error\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_step2\",\"_iterator2\",\"element\",\"account_address\",\"encrypted_private_key\",\"enckeys\",\"checksum\",\"owner_key\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_step3\",\"_iterator3\",\"active_key_history\",\"encrypted_private_keys\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_step4\",\"_iterator4\",\"_iteratorNormalCompletion5\",\"_didIteratorError5\",\"_iteratorError5\",\"_step5\",\"_iterator5\",\"enckey\",\"_this5\",\"pwNode\",\"password\",\"sha512\",\"toString\",\"_decryptPrivateKeys\",\"_this6\",\"password_aes\",\"fromSeed\",\"format_error1_once\",\"_iteratorNormalCompletion6\",\"_didIteratorError6\",\"_iteratorError6\",\"_step6\",\"_iterator6\",\"trim\",\"same_prefix_regex\",\"RegExp\",\"i\",\"encrypted_private\",\"public_keys\",\"private_plainhex\",\"decryptHex\",\"test\",\"fromHex\",\"toPublicKey\",\"toPublicKeyString\",\"dup\",\"_iteratorNormalCompletion7\",\"_didIteratorError7\",\"_iteratorError7\",\"_step7\",\"_iterator7\",\"log\",\"stack\",\"_this7\",\"dups\",\"has\",\"_iteratorNormalCompletion8\",\"_didIteratorError8\",\"_iteratorError8\",\"_step8\",\"_iterator8\",\"_keys_to_account$priv\",\"WalletUnlockActions\",\"unlock\",\"then\",\"setTimeout\",\"saveImport\",\"_this8\",\"private_key_objs\",\"_iteratorNormalCompletion9\",\"_didIteratorError9\",\"_iteratorError9\",\"_step9\",\"_iterator9\",\"_keys_to_account$priv2\",\"WalletDb\",\"importKeysWorker\",\"import_count\",\"count\",\"_this9\",\"invalid_count\",\"_iteratorNormalCompletion10\",\"_didIteratorError10\",\"_iteratorError10\",\"_step10\",\"_iterator10\",\"match\",\"wif\",\"private_key\",\"fromWif\",\"toBuffer\",\"BalanceClaimActive\",\"paddingTop\",\"onCancel\",\"_this10\",\"privateKey\",\"getImportAccountKeyCount\",\"getWallet\",\"WalletCreate\",\"importKeys\",\"hideTitle\",\"filtering\",\"account_rows\",\"_iteratorNormalCompletion11\",\"_didIteratorError11\",\"_iteratorError11\",\"_step11\",\"_iterator11\",\"round\",\"password_placeholder\",\"cancelButton\",\"tabIndex\",\"padding\",\"onSubmit\",\"onWif\",\"component\",\"ref\",\"id\",\"accept\",\"border\",\"marginBottom\",\"upload\",\"placeholder\",\"_saveImport\",\"defaultProps\",\"bts_genesiskeys_bloom_url\",\"url\",\"indexOf\",\"bloom_buffer\",\"_classCallCheck\",\"bits_in_filter\",\"xhr\",\"XMLHttpRequest\",\"responseType\",\"Buffer\",\"readAsBinaryString\",\"response\",\"onerror\",\"open\",\"send\",\"pubkey_or_address\",\"hashes\",\"hex\",\"bitsharesjs__WEBPACK_IMPORTED_MODULE_0__\",\"sha256\",\"bit_address\",\"parseInt\",\"slice\",\"byte_address\",\"mask\",\"running_count_progress\",\"removed_count\",\"currentKey\",\"inGenesis\",\"addy_found\",\"module\",\"exports\",\"p\",\"BrainkeyActions\",\"brnkey\",\"actions_BrainkeyActions\",\"createActions\",\"BrainkeyStore_BrainkeyStoreFactory\",\"instance\",\"BrainkeyStoreFactory\",\"instances\",\"BrainkeyStore_BrainkeyStoreImpl\",\"subscribed_instance_key\",\"subscribed_instance\",\"chainStoreUpdate\",\"subscribe\",\"unsubscribe\",\"clearCache\",\"BrainkeyStoreImpl\",\"BrainkeyStore_classCallCheck\",\"_possibleConstructorReturn\",\"bindListeners\",\"onSetBrainkey\",\"setBrainkey\",\"account_ids\",\"derived_keys\",\"account_ids_by_key\",\"deriveKeys\",\"derived_key\",\"BrainkeyStore_isPendingFromChain\",\"updateAccountIds\",\"sequence\",\"public_string\",\"derivedKeyStruct\",\"get_brainPrivateKey\",\"new_account_ids\",\"withMutations\",\"new_ids\",\"chain_account_ids\",\"getAccountRefsOfKey\",\"chain_account_id\",\"updatePubkey\",\"AccountCard_AccountCard\",\"Component\",\"abal\",\"x\",\"getObject\",\"BalanceComponent\",\"onCardClick\",\"AccountImage\",\"height\",\"width\",\"ChainAccount\",\"Dashboard_AccountCard\",\"withRouter\",\"connectObject\",\"BrainkeyStore\",\"getInstance\",\"Brainkey_Brainkey\",\"closeInstance\",\"Brainkey_BrainkeyInputAccept\",\"Brainkey_ViewBrainkey\",\"Wallet_Brainkey\",\"short_brnkey\",\"Brainkey_BrainkeyAccounts\",\"rows\",\"toPairs\",\"_Component3\",\"BrainkeyInputAccept\",\"Brainkey_classCallCheck\",\"Brainkey_possibleConstructorReturn\",\"Brainkey_inherits\",\"Brainkey_createClass\",\"children\",\"ready\",\"BrainkeyInput\",\"onBrainkeyChange\",\"onAccept\",\"ExistingAccount_connectObject\",\"WalletManagerStore\",\"wallet\",\"ExistingAccount_ExistingAccount\",\"has_wallet\",\"wallet_names\",\"wallet_name\",\"branding\",\"Switch\",\"Route\",\"exact\",\"path\",\"Backup\",\"ExistingAccount_ExistingAccountOptions\",\"Link\",\"to\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport Immutable from \\\"immutable\\\";\\n\\nimport PrivateKeyStore from \\\"stores/PrivateKeyStore\\\";\\nimport BalanceClaimActiveStore from \\\"stores/BalanceClaimActiveStore\\\";\\nimport BalanceClaimActiveActions from \\\"actions/BalanceClaimActiveActions\\\";\\nimport FormattedAsset from \\\"components/Utility/FormattedAsset\\\";\\nimport Translate from \\\"react-translate-component\\\";\\n\\nclass BalanceClaimSelector extends Component {\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.claim_account_name)\\n            this.onClaimAccount(\\n                nextProps.claim_account_name,\\n                nextProps.checked\\n            );\\n    }\\n\\n    render() {\\n        if (\\n            this.props.balances === undefined ||\\n            !this.props.total_by_account_asset.size\\n        )\\n            return <div />;\\n\\n        let index = -1;\\n        return (\\n            <div>\\n                <table className=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>{/* C H E C K B O X */}</th>\\n                            <th style={{textAlign: \\\"center\\\"}}>\\n                                <Translate content=\\\"wallet.unclaimed\\\" />\\n                            </th>\\n                            <th style={{textAlign: \\\"center\\\"}}>\\n                                <Translate content=\\\"wallet.unclaimed_vesting\\\" />\\n                            </th>\\n                            <th style={{textAlign: \\\"center\\\"}}>\\n                                <Translate content=\\\"account.name\\\" />\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        {this.props.total_by_account_asset\\n                            .map((r, name_asset) => (\\n                                <tr key={++index}>\\n                                    <td>\\n                                        <input\\n                                            type=\\\"checkbox\\\"\\n                                            checked={\\n                                                !!this.props.checked.get(index)\\n                                            }\\n                                            onChange={this.onCheckbox.bind(\\n                                                this,\\n                                                index,\\n                                                r.balances\\n                                            )}\\n                                        />\\n                                    </td>\\n                                    <td style={{textAlign: \\\"right\\\"}}>\\n                                        {r.unclaimed ? (\\n                                            <FormattedAsset\\n                                                color=\\\"info\\\"\\n                                                amount={r.unclaimed}\\n                                                asset={name_asset.get(1)}\\n                                            />\\n                                        ) : null}\\n                                    </td>\\n                                    <td style={{textAlign: \\\"right\\\"}}>\\n                                        {r.vesting.unclaimed ? (\\n                                            <div>\\n                                                <FormattedAsset\\n                                                    color=\\\"info\\\"\\n                                                    amount={r.vesting.unclaimed}\\n                                                    hide_asset={true}\\n                                                    asset={name_asset.get(1)}\\n                                                />\\n                                                <span> of </span>\\n                                                <FormattedAsset\\n                                                    color=\\\"info\\\"\\n                                                    amount={r.vesting.total}\\n                                                    asset={name_asset.get(1)}\\n                                                />\\n                                            </div>\\n                                        ) : null}\\n                                    </td>\\n                                    <td> {name_asset.get(0)} </td>\\n                                </tr>\\n                            ))\\n                            .toArray()}\\n                    </tbody>\\n                </table>\\n            </div>\\n        );\\n    }\\n\\n    onCheckbox(index, balances) {\\n        let checked = this.props.checked;\\n        if (checked.get(index)) {\\n            checked = checked.delete(index);\\n        } else {\\n            checked = checked.set(index, balances);\\n        }\\n\\n        BalanceClaimActiveActions.setSelectedBalanceClaims(checked);\\n    }\\n\\n    onClaimAccount(claim_account_name, checked) {\\n        // A U T O  S E L E C T  A C C O U N T S\\n        // only if nothing is selected (play it safe)\\n        if (checked.size) return;\\n        let index = -1;\\n        this.props.total_by_account_asset.forEach((v, k) => {\\n            index++;\\n            let name = k.get(0);\\n            if (name === claim_account_name) {\\n                if (v.unclaimed || v.vesting.unclaimed)\\n                    checked = checked.set(index, v.balances);\\n            }\\n        });\\n        if (checked.size)\\n            BalanceClaimActiveActions.setSelectedBalanceClaims(checked);\\n    }\\n}\\n\\nBalanceClaimSelector = connect(BalanceClaimSelector, {\\n    listenTo() {\\n        return [BalanceClaimActiveStore];\\n    },\\n    getProps() {\\n        let props = BalanceClaimActiveStore.getState();\\n        let {balances, address_to_pubkey} = props;\\n        let private_keys = PrivateKeyStore.getState().keys;\\n        let groupCountMap = Immutable.Map().asMutable();\\n        let groupCount = (group, distinct) => {\\n            let set = groupCountMap.get(group);\\n            if (!set) {\\n                set = Immutable.Set().asMutable();\\n                groupCountMap.set(group, set);\\n            }\\n            set.add(distinct);\\n            return set.size;\\n        };\\n        if (balances)\\n            props.total_by_account_asset = balances\\n                .groupBy(v => {\\n                    // K E Y S\\n                    let names = \\\"\\\";\\n                    let pubkey = address_to_pubkey.get(v.owner);\\n                    let private_key_object = private_keys.get(pubkey);\\n                    // Imported Account Names (just a visual aid, helps to auto select a real account)\\n                    if (\\n                        private_key_object &&\\n                        private_key_object.import_account_names\\n                    )\\n                        names = private_key_object.import_account_names.join(\\n                            \\\", \\\"\\n                        );\\n\\n                    // Signing is very slow, further divide the groups based on the number of signatures required\\n                    let batch_number = Math.ceil(\\n                        groupCount(\\n                            Immutable.List([names, v.balance.asset_id]),\\n                            v.owner\\n                        ) / 60\\n                    );\\n                    let name_asset_key = Immutable.List([\\n                        names,\\n                        v.balance.asset_id,\\n                        batch_number\\n                    ]);\\n                    return name_asset_key;\\n                })\\n                .map(l =>\\n                    l.reduce(\\n                        (r, v) => {\\n                            // V A L U E S\\n                            v.public_key_string = address_to_pubkey.get(\\n                                v.owner\\n                            );\\n                            r.balances = r.balances.add(v);\\n                            if (v.vested_balance != undefined) {\\n                                r.vesting.unclaimed += Number(\\n                                    v.vested_balance.amount\\n                                );\\n                                r.vesting.total += Number(v.balance.amount);\\n                            } else {\\n                                r.unclaimed += Number(v.balance.amount);\\n                            }\\n                            return r;\\n                        },\\n                        {\\n                            unclaimed: 0,\\n                            vesting: {unclaimed: 0, total: 0},\\n                            balances: Immutable.Set()\\n                        }\\n                    )\\n                )\\n                .sortBy(k => k);\\n        return props;\\n    }\\n});\\n\\nexport default BalanceClaimSelector;\\n\",\"import React, {Component} from \\\"react\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport AccountSelect from \\\"components/Forms/AccountSelect\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass MyAccounts extends Component {\\n    static propTypes = {\\n        accounts: ChainTypes.ChainAccountsList.isRequired,\\n        onChange: PropTypes.func.isRequired\\n    };\\n\\n    render() {\\n        var account_names = this.props.accounts\\n            .filter(account => !!account)\\n            .filter(account => AccountStore.isMyAccount(account))\\n            .map(account => account.get(\\\"name\\\"))\\n            .sort();\\n\\n        return (\\n            <span>\\n                <AccountSelect\\n                    onChange={this.onAccountSelect.bind(this)}\\n                    account_names={account_names}\\n                    center={true}\\n                />\\n            </span>\\n        );\\n    }\\n\\n    onAccountSelect(account_name) {\\n        this.props.onChange(account_name);\\n    }\\n}\\n\\nexport default BindToChainState(MyAccounts);\\n\",\"import React, {Component} from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport cname from \\\"classnames\\\";\\nimport counterpart from \\\"counterpart\\\";\\n\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport PrivateKeyStore from \\\"stores/PrivateKeyStore\\\";\\nimport AccountRefsStore from \\\"stores/AccountRefsStore\\\";\\nimport BalanceClaimActiveStore from \\\"stores/BalanceClaimActiveStore\\\";\\nimport BalanceClaimActiveActions from \\\"actions/BalanceClaimActiveActions\\\";\\nimport BalanceClaimSelector from \\\"components/Wallet/BalanceClaimSelector\\\";\\nimport WalletActions from \\\"actions/WalletActions\\\";\\nimport MyAccounts from \\\"components/Forms/MyAccounts\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {Notification} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass BalanceClaimActive extends Component {\\n    componentWillMount() {\\n        let keys = PrivateKeyStore.getState().keys;\\n        let keySeq = keys.keySeq();\\n        BalanceClaimActiveActions.setPubkeys(keySeq);\\n        this.existing_keys = keySeq;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        let keys = PrivateKeyStore.getState().keys;\\n        let keySeq = keys.keySeq();\\n        if (!keySeq.equals(this.existing_keys)) {\\n            this.existing_keys = keySeq;\\n            BalanceClaimActiveActions.setPubkeys(keySeq);\\n        }\\n    }\\n\\n    render() {\\n        if (!this.props.account_refs.size) {\\n            return (\\n                <div>\\n                    <h5>\\n                        <Translate content=\\\"wallet.no_balance\\\" />\\n                    </h5>\\n                </div>\\n            );\\n        }\\n\\n        if (this.props.loading) {\\n            return (\\n                <div>\\n                    <br />\\n                    <h5>\\n                        <Translate content=\\\"wallet.loading_balances\\\" />\\n                        &hellip;\\n                    </h5>\\n                    <br />\\n                    <LoadingIndicator type=\\\"three-bounce\\\" />\\n                </div>\\n            );\\n        }\\n\\n        if (!this.props.balances || !this.props.balances.size) {\\n            return (\\n                <div>\\n                    <br />\\n                    <h5>\\n                        <Translate content=\\\"wallet.no_balance\\\" />\\n                    </h5>\\n                </div>\\n            );\\n        }\\n\\n        let import_ready =\\n            this.props.selected_balances.size && this.props.claim_account_name;\\n        let claim_balance_label = import_ready\\n            ? ` (${this.props.claim_account_name})`\\n            : null;\\n\\n        return (\\n            <div>\\n                <div className=\\\"content-block center-content\\\">\\n                    <h3 className=\\\"no-border-bottom\\\">\\n                        <Translate content=\\\"wallet.claim_balances\\\" />\\n                    </h3>\\n                </div>\\n                <div className=\\\"grid-block vertical\\\">\\n                    <div\\n                        className=\\\"grid-content\\\"\\n                        style={{overflowY: \\\"hidden !important\\\"}}\\n                    >\\n                        <div className=\\\"full-width-content center-content\\\">\\n                            <MyAccounts\\n                                key={this.props.balances}\\n                                accounts={Immutable.List(\\n                                    this.props.account_refs\\n                                )}\\n                                onChange={this.onClaimAccountChange.bind(this)}\\n                            />\\n                        </div>\\n                        <br />\\n                    </div>\\n                    <br />\\n                    <BalanceClaimSelector />\\n                </div>\\n                <br />\\n                <br />\\n                <div\\n                    className={cname(\\\"button success\\\", {\\n                        disabled: !import_ready\\n                    })}\\n                    onClick={this.onClaimBalance.bind(this)}\\n                >\\n                    <Translate content=\\\"wallet.claim_balance\\\" />\\n                    {claim_balance_label}\\n                </div>\\n                <div className=\\\"button cancel\\\" onClick={this.onBack.bind(this)}>\\n                    <Translate content=\\\"wallet.cancel\\\" />\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    onBack(e) {\\n        e.preventDefault();\\n        window.history.back();\\n    }\\n\\n    onClaimAccountChange(claim_account_name) {\\n        BalanceClaimActiveActions.claimAccountChange(claim_account_name);\\n    }\\n\\n    onClaimBalance() {\\n        WalletActions.importBalance(\\n            this.props.claim_account_name,\\n            this.props.selected_balances,\\n            true //broadcast\\n        ).catch(error => {\\n            console.error(\\\"claimBalance\\\", error);\\n            let message = error;\\n            try {\\n                message = error.data.message;\\n            } catch (e) {}\\n            Notification.error({\\n                message: counterpart.translate(\\n                    \\\"notifications.balance_claim_error\\\",\\n                    {\\n                        error_msg: message\\n                    }\\n                )\\n            });\\n\\n            throw error;\\n        });\\n    }\\n}\\n\\nBalanceClaimActive = connect(\\n    BalanceClaimActive,\\n    {\\n        listenTo() {\\n            return [BalanceClaimActiveStore, AccountRefsStore, PrivateKeyStore];\\n        },\\n        getProps() {\\n            let props = BalanceClaimActiveStore.getState();\\n            props.account_refs = AccountRefsStore.getAccountRefs();\\n            return props;\\n        }\\n    }\\n);\\n\\nexport default BalanceClaimActive;\\n\",\"import React, {Component} from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport BalanceClaimActiveStore from \\\"stores/BalanceClaimActiveStore\\\";\\nimport FormattedAsset from \\\"components/Utility/FormattedAsset\\\";\\nimport Translate from \\\"react-translate-component\\\";\\n\\nclass BalanceClaimAssetTotals extends Component {\\n    render() {\\n        if (this.props.balances === undefined)\\n            return (\\n                <div>\\n                    <Translate content=\\\"wallet.loading_balances\\\" />&hellip;\\n                </div>\\n            );\\n\\n        var total_by_asset = this.props.balances\\n            .groupBy(v => v.balance.asset_id)\\n            .map(l => l.reduce((r, v) => r + Number(v.balance.amount), 0));\\n\\n        if (!total_by_asset.size) return <div>None</div>;\\n\\n        return (\\n            <div>\\n                {total_by_asset\\n                    .map((total, asset_id) => (\\n                        <div key={asset_id}>\\n                            <FormattedAsset\\n                                color=\\\"info\\\"\\n                                amount={total}\\n                                asset={asset_id}\\n                            />\\n                        </div>\\n                    ))\\n                    .toArray()}\\n            </div>\\n        );\\n    }\\n}\\n\\nBalanceClaimAssetTotals = connect(BalanceClaimAssetTotals, {\\n    listenTo() {\\n        return [BalanceClaimActiveStore];\\n    },\\n    getProps() {\\n        return BalanceClaimActiveStore.getState();\\n    }\\n});\\n\\nexport default BalanceClaimAssetTotals;\\n\",\"import alt from \\\"alt-instance\\\";\\nimport BaseStore from \\\"stores/BaseStore\\\";\\n\\nclass ImportKeysStore extends BaseStore {\\n    constructor() {\\n        super();\\n        this.state = this._getInitialState();\\n        this._export(\\\"importing\\\");\\n    }\\n\\n    _getInitialState() {\\n        return {importing: false};\\n    }\\n\\n    importing(importing) {\\n        this.setState({importing});\\n    }\\n}\\n\\nexport var ImportKeysStoreWrapped = alt.createStore(\\n    ImportKeysStore,\\n    \\\"ImportKeysStore\\\"\\n);\\nexport default ImportKeysStoreWrapped;\\n\",\"import React, {Component} from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport cname from \\\"classnames\\\";\\nimport {PrivateKey, Aes, PublicKey, hash} from \\\"bitsharesjs\\\";\\nimport {ChainConfig} from \\\"bitsharesjs-ws\\\";\\nimport PrivateKeyStore from \\\"stores/PrivateKeyStore\\\";\\nimport WalletUnlockActions from \\\"actions/WalletUnlockActions\\\";\\nimport {WalletCreate} from \\\"components/Wallet/WalletCreate\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport counterpart from \\\"counterpart\\\";\\n\\nimport BalanceClaimActive from \\\"../Wallet/BalanceClaimActive\\\";\\nimport BalanceClaimActiveActions from \\\"actions/BalanceClaimActiveActions\\\";\\nimport BalanceClaimAssetTotal from \\\"components/Wallet/BalanceClaimAssetTotal\\\";\\nimport WalletDb from \\\"stores/WalletDb\\\";\\nimport ImportKeysStore from \\\"stores/ImportKeysStore\\\";\\n\\nimport {Notification} from \\\"bitshares-ui-style-guide\\\";\\n\\nimport GenesisFilter from \\\"chain/GenesisFilter\\\";\\n\\nrequire(\\\"./ImportKeys.scss\\\");\\n\\nlet import_keys_assert_checking = false;\\n\\nconst KeyCount = ({key_count}) => {\\n    if (!key_count) return <span />;\\n    return <span>Found {key_count} private keys</span>;\\n};\\n\\nclass ImportKeys extends Component {\\n    constructor() {\\n        super();\\n        this.state = this._getInitialState();\\n\\n        this._renderBalanceClaims = this._renderBalanceClaims.bind(this);\\n    }\\n\\n    static defaultProps = {\\n        privateKey: true\\n    };\\n\\n    _getInitialState(keep_file_name = false) {\\n        return {\\n            keys_to_account: {},\\n            no_file: true,\\n            account_keys: [],\\n            //brainkey: null,\\n            //encrypted_brainkey: null,\\n            reset_file_name: keep_file_name\\n                ? this.state.reset_file_name\\n                : Date.now(),\\n            reset_password: Date.now(),\\n            password_checksum: null,\\n            import_file_message: null,\\n            import_password_message: null,\\n            imported_keys_public: {},\\n            key_text_message: null,\\n            genesis_filtering: false,\\n            genesis_filter_status: [],\\n            genesis_filter_finished: undefined,\\n            importSuccess: false\\n        };\\n    }\\n\\n    reset(e, keep_file_name) {\\n        if (e) e.preventDefault();\\n        let state = this._getInitialState(keep_file_name);\\n        this.setState(state, () => this.updateOnChange());\\n    }\\n\\n    onWif(event) {\\n        event.preventDefault();\\n        let value = this.refs.wifInput.value;\\n        this.addByPattern(value);\\n    }\\n\\n    onCancel(e) {\\n        if (e) e.preventDefault();\\n        this.setState(this._getInitialState());\\n    }\\n\\n    updateOnChange() {\\n        BalanceClaimActiveActions.setPubkeys(\\n            Object.keys(this.state.imported_keys_public)\\n        );\\n    }\\n\\n    getImportAccountKeyCount(keys_to_account) {\\n        let account_keycount = {};\\n        let found = false;\\n        for (let key in keys_to_account)\\n            for (let account_name of keys_to_account[key].account_names) {\\n                account_keycount[account_name] =\\n                    (account_keycount[account_name] || 0) + 1;\\n                found = true;\\n            }\\n        return found ? account_keycount : null;\\n    }\\n\\n    upload(evt) {\\n        this.reset(null, true);\\n        let file = evt.target.files[0];\\n        let reader = new FileReader();\\n        reader.onload = evt => {\\n            let contents = evt.target.result;\\n            try {\\n                let json_contents;\\n                try {\\n                    json_contents = JSON.parse(contents);\\n                    // This is the only chance to encounter a large file,\\n                    // try this format first.\\n                    this._parseImportKeyUpload(\\n                        json_contents,\\n                        file.name,\\n                        update_state => {\\n                            // console.log(\\\"update_state\\\", update_state)\\n                            this.setState(update_state, () => {\\n                                if (update_state.genesis_filter_finished) {\\n                                    // try empty password, also display \\\"Enter import file password\\\"\\n                                    this._passwordCheck();\\n                                }\\n                            });\\n                        }\\n                    );\\n                } catch (e) {\\n                    //DEBUG console.log(\\\"... _parseImportKeyUpload\\\",e)\\n                    try {\\n                        if (!json_contents)\\n                            file.name + \\\" is an unrecognized format\\\";\\n                        this._parseWalletJson(json_contents);\\n                    } catch (ee) {\\n                        if (!this.addByPattern(contents)) throw ee;\\n                    }\\n                    // try empty password, also display \\\"Enter import file password\\\"\\n                    this._passwordCheck();\\n                }\\n            } catch (message) {\\n                console.error(\\\"... ImportKeys upload error\\\", message);\\n                this.setState({import_file_message: message});\\n            }\\n        };\\n        reader.readAsText(file);\\n    }\\n\\n    /** CTS 1.0 client wallet_export_keys format. */\\n    _parseImportKeyUpload(json_contents, file_name, update_state) {\\n        let password_checksum, unfiltered_account_keys;\\n        try {\\n            password_checksum = json_contents.password_checksum;\\n            if (!password_checksum)\\n                throw file_name + \\\" is an unrecognized format\\\";\\n\\n            if (!Array.isArray(json_contents.account_keys))\\n                throw file_name + \\\" is an unrecognized format\\\";\\n\\n            unfiltered_account_keys = json_contents.account_keys;\\n        } catch (e) {\\n            throw e.message || e;\\n        }\\n\\n        // CTS 1.0 wallets may have a lot of generated but unused keys or spent TITAN addresses making\\n        // wallets so large it is was not possible to use the JavaScript wallets with them.\\n\\n        let genesis_filter = new GenesisFilter();\\n        if (!genesis_filter.isAvailable()) {\\n            update_state({\\n                password_checksum,\\n                account_keys: unfiltered_account_keys,\\n                genesis_filter_finished: true,\\n                genesis_filtering: false\\n            });\\n            return;\\n        }\\n        this.setState(\\n            {genesis_filter_initalizing: true},\\n            () =>\\n                // setTimeout(()=>\\n                genesis_filter.init(() => {\\n                    let filter_status = this.state.genesis_filter_status;\\n\\n                    // FF < version 41 does not support worker threads internals (like blob urls)\\n                    // let GenesisFilterWorker = require(\\\"worker-loader!workers/GenesisFilterWorker\\\")\\n                    // let worker = new GenesisFilterWorker\\n                    // worker.postMessage({\\n                    //     account_keys: unfiltered_account_keys,\\n                    //     bloom_filter: genesis_filter.bloom_filter\\n                    // })\\n                    // worker.onmessage = event => { try {\\n                    //     let { status, account_keys } = event.data\\n                    //     // ...\\n                    // } catch( e ) { console.error('GenesisFilterWorker', e) }}\\n\\n                    let account_keys = unfiltered_account_keys;\\n                    genesis_filter.filter(account_keys, status => {\\n                        //console.log(\\\"import filter\\\", status)\\n                        if (status.error === \\\"missing_public_keys\\\") {\\n                            console.error(\\n                                \\\"un-released format, just for testing\\\"\\n                            );\\n                            update_state({\\n                                password_checksum,\\n                                account_keys: unfiltered_account_keys,\\n                                genesis_filter_finished: true,\\n                                genesis_filtering: false\\n                            });\\n                            return;\\n                        }\\n                        if (status.success) {\\n                            // let { account_keys } = event.data // if using worker thread\\n                            update_state({\\n                                password_checksum,\\n                                account_keys,\\n                                genesis_filter_finished: true,\\n                                genesis_filtering: false\\n                            });\\n                            return;\\n                        }\\n                        if (status.initalizing !== undefined) {\\n                            update_state({\\n                                genesis_filter_initalizing: status.initalizing,\\n                                genesis_filtering: true\\n                            });\\n                            return;\\n                        }\\n                        if (status.importing === undefined) {\\n                            // programmer error\\n                            console.error(\\\"unknown status\\\", status);\\n                            return;\\n                        }\\n                        if (!filter_status.length)\\n                            // first account\\n                            filter_status.push(status);\\n                        else {\\n                            let last_account_name =\\n                                filter_status[filter_status.length - 1]\\n                                    .account_name;\\n                            if (last_account_name === status.account_name)\\n                                // update same account\\n                                filter_status[\\n                                    filter_status.length - 1\\n                                ] = status;\\n                            // new account\\n                            else filter_status.push(status);\\n                        }\\n                        update_state({genesis_filter_status: filter_status});\\n                    });\\n                })\\n            //, 100)\\n        );\\n    }\\n\\n    /**\\n    CTS 1.0 hosted wallet backup (wallet.bitshares.org) is supported.\\n\\n    CTS 1.0 native wallets should use wallet_export_keys instead of a wallet backup.\\n\\n    Note,  Native wallet backups will be rejected.  The logic below does not\\n    capture assigned account names (for unregisted accounts) and does not capture\\n    signing keys.  The hosted wallet has only registered accounts and no signing\\n    keys.\\n\\n    */\\n    _parseWalletJson(json_contents) {\\n        let password_checksum;\\n        let encrypted_brainkey;\\n        let address_to_enckeys = {};\\n        let account_addresses = {};\\n\\n        let savePubkeyAccount = function(pubkey, account_name) {\\n            //replace CTS with CTS\\n            pubkey = ChainConfig.address_prefix + pubkey.substring(3);\\n            let address = PublicKey.fromPublicKeyString(\\n                pubkey\\n            ).toAddressString();\\n            let addresses = account_addresses[account_name] || [];\\n            address = \\\"CTS\\\" + address.substring(3);\\n            //DEBUG console.log(\\\"... address\\\",address,account_name)\\n            addresses.push(address);\\n            account_addresses[account_name] = addresses;\\n        };\\n\\n        try {\\n            if (!Array.isArray(json_contents)) {\\n                //DEBUG console.log('... json_contents',json_contents)\\n                throw new Error(\\\"Invalid wallet format\\\");\\n            }\\n            for (let element of json_contents) {\\n                if (\\n                    \\\"key_record_type\\\" == element.type &&\\n                    element.data.account_address &&\\n                    element.data.encrypted_private_key\\n                ) {\\n                    let address = element.data.account_address;\\n                    let enckeys = address_to_enckeys[address] || [];\\n                    enckeys.push(element.data.encrypted_private_key);\\n                    //DEBUG console.log(\\\"... address\\\",address,enckeys)\\n                    address_to_enckeys[address] = enckeys;\\n                    continue;\\n                }\\n\\n                if (\\\"account_record_type\\\" == element.type) {\\n                    let account_name = element.data.name;\\n                    savePubkeyAccount(element.data.owner_key, account_name);\\n                    for (let history of element.data.active_key_history) {\\n                        savePubkeyAccount(history[1], account_name);\\n                    }\\n                    continue;\\n                }\\n\\n                if (\\n                    \\\"property_record_type\\\" == element.type &&\\n                    \\\"encrypted_brainkey\\\" == element.data.key\\n                ) {\\n                    encrypted_brainkey = element.data.value;\\n                    continue;\\n                }\\n\\n                if (\\\"master_key_record_type\\\" == element.type) {\\n                    if (!element.data)\\n                        throw file.name + \\\" invalid master_key_record record\\\";\\n\\n                    if (!element.data.checksum)\\n                        throw file.name +\\n                            \\\" is missing master_key_record checksum\\\";\\n\\n                    password_checksum = element.data.checksum;\\n                }\\n            }\\n            if (!encrypted_brainkey)\\n                throw \\\"Please use a CTS 1.0 wallet_export_keys file instead\\\";\\n\\n            if (!password_checksum)\\n                throw file.name + \\\" is missing password_checksum\\\";\\n\\n            if (!enckeys.length)\\n                throw file.name + \\\" does not contain any private keys\\\";\\n        } catch (e) {\\n            throw e.message || e;\\n        }\\n\\n        let account_keys = [];\\n        for (let account_name in account_addresses) {\\n            let encrypted_private_keys = [];\\n            for (let address of account_addresses[account_name]) {\\n                let enckeys = address_to_enckeys[address];\\n                if (!enckeys) continue;\\n                for (let enckey of enckeys) encrypted_private_keys.push(enckey);\\n            }\\n            account_keys.push({\\n                account_name,\\n                encrypted_private_keys\\n            });\\n        }\\n        // We could prompt for this brain key instead on first use.  The user\\n        // may already have a brainkey at this point so with a single brainkey\\n        // wallet we can't use it now.\\n        this.setState({\\n            password_checksum,\\n            account_keys\\n            //encrypted_brainkey\\n        });\\n    }\\n\\n    _passwordCheck(evt) {\\n        if (evt && \\\"preventDefault\\\" in evt) {\\n            evt.preventDefault();\\n        }\\n        let pwNode = this.refs.password;\\n        // if(pwNode) pwNode.focus()\\n        let password = pwNode ? pwNode.value : \\\"\\\";\\n        let checksum = this.state.password_checksum;\\n        let new_checksum = hash.sha512(hash.sha512(password)).toString(\\\"hex\\\");\\n        if (checksum != new_checksum) {\\n            return this.setState({\\n                no_file: false,\\n                import_password_message: password.length\\n                    ? \\\"Incorrect password\\\"\\n                    : null\\n            });\\n        }\\n        this.setState(\\n            {\\n                no_file: false,\\n                reset_password: Date.now(),\\n                import_password_message: counterpart.translate(\\n                    \\\"wallet.import_pass_match\\\"\\n                )\\n            },\\n            () => this._decryptPrivateKeys(password)\\n        );\\n        // setTimeout(, 250)\\n    }\\n\\n    _decryptPrivateKeys(password) {\\n        let password_aes = Aes.fromSeed(password);\\n        let format_error1_once = true;\\n        for (let account of this.state.account_keys) {\\n            if (!account.encrypted_private_keys) {\\n                let error = `Account ${\\n                    account.account_name\\n                } missing encrypted_private_keys`;\\n                console.error(error);\\n                if (format_error1_once) {\\n                    Notification.error({\\n                        message: error\\n                    });\\n                    format_error1_once = false;\\n                }\\n                continue;\\n            }\\n            let account_name = account.account_name.trim();\\n            let same_prefix_regex = new RegExp(\\n                \\\"^\\\" + ChainConfig.address_prefix\\n            );\\n            for (let i = 0; i < account.encrypted_private_keys.length; i++) {\\n                let encrypted_private = account.encrypted_private_keys[i];\\n                let public_key_string = account.public_keys\\n                    ? account.public_keys[i]\\n                    : null; // performance gain\\n\\n                try {\\n                    let private_plainhex = password_aes.decryptHex(\\n                        encrypted_private\\n                    );\\n                    if (import_keys_assert_checking && public_key_string) {\\n                        let private_key = PrivateKey.fromHex(private_plainhex);\\n                        let pub = private_key.toPublicKey(); // S L O W\\n                        let addy = pub.toAddressString();\\n                        let pubby = pub.toPublicKeyString();\\n                        let error = \\\"\\\";\\n\\n                        let address_string = account.addresses\\n                            ? account.addresses[i]\\n                            : null; // assert checking\\n\\n                        if (\\n                            address_string &&\\n                            addy.substring(3) != address_string.substring(3)\\n                        )\\n                            error =\\n                                \\\"address imported \\\" +\\n                                address_string +\\n                                \\\" but calculated \\\" +\\n                                addy +\\n                                \\\". \\\";\\n\\n                        if (\\n                            pubby.substring(3) != public_key_string.substring(3)\\n                        )\\n                            error +=\\n                                \\\"public key imported \\\" +\\n                                public_key_string +\\n                                \\\" but calculated \\\" +\\n                                pubby;\\n\\n                        if (error != \\\"\\\")\\n                            console.log(\\\"ERROR Miss-match key\\\", error);\\n                    }\\n\\n                    if (!public_key_string) {\\n                        let private_key = PrivateKey.fromHex(private_plainhex);\\n                        let public_key = private_key.toPublicKey(); // S L O W\\n                        public_key_string = public_key.toPublicKeyString();\\n                    } else {\\n                        if (!same_prefix_regex.test(public_key_string))\\n                            // This was creating a unresponsive chrome browser\\n                            // but after the results were shown.  It was probably\\n                            // caused by garbage collection.\\n                            public_key_string =\\n                                ChainConfig.address_prefix +\\n                                public_key_string.substring(3);\\n                    }\\n                    this.state.imported_keys_public[public_key_string] = true;\\n                    let {account_names} = this.state.keys_to_account[\\n                        private_plainhex\\n                    ] || {account_names: []};\\n                    let dup = false;\\n                    for (let _name of account_names)\\n                        if (_name == account_name) dup = true;\\n                    if (dup) continue;\\n                    account_names.push(account_name);\\n                    this.state.keys_to_account[private_plainhex] = {\\n                        account_names,\\n                        public_key_string\\n                    };\\n                } catch (e) {\\n                    console.log(e, e.stack);\\n                    let message = e.message || e;\\n                    Notification.error({\\n                        message: counterpart.translate(\\n                            \\\"notifications.import_keys_error\\\",\\n                            {\\n                                account_name: account_name,\\n                                error_msg: message\\n                            }\\n                        )\\n                    });\\n                }\\n            }\\n        }\\n        //let enc_brainkey = this.state.encrypted_brainkey\\n        //if(enc_brainkey){\\n        //    this.setState({\\n        //        brainkey: password_aes.decryptHexToText(enc_brainkey)\\n        //    })\\n        //}\\n        this.setState(\\n            {\\n                import_file_message: null,\\n                import_password_message: null,\\n                password_checksum: null\\n            },\\n            () => this.updateOnChange()\\n        );\\n    }\\n\\n    _saveImport(e) {\\n        e.preventDefault();\\n        let keys = PrivateKeyStore.getState().keys;\\n        let dups = {};\\n        for (let public_key_string in this.state.imported_keys_public) {\\n            if (!keys.has(public_key_string)) continue;\\n            delete this.state.imported_keys_public[public_key_string];\\n            dups[public_key_string] = true;\\n        }\\n        if (Object.keys(this.state.imported_keys_public).length === 0) {\\n            Notification.error({\\n                message: counterpart.translate(\\n                    \\\"notifications.import_keys_already_imported\\\"\\n                )\\n            });\\n            return;\\n        }\\n        let keys_to_account = this.state.keys_to_account;\\n        for (let private_plainhex of Object.keys(keys_to_account)) {\\n            let {account_names, public_key_string} = keys_to_account[\\n                private_plainhex\\n            ];\\n            if (dups[public_key_string])\\n                delete keys_to_account[private_plainhex];\\n        }\\n        WalletUnlockActions.unlock()\\n            .then(() => {\\n                ImportKeysStore.importing(true);\\n                // show the loading indicator\\n                setTimeout(() => this.saveImport(), 200);\\n            })\\n            .catch(() => {});\\n    }\\n\\n    saveImport() {\\n        let keys_to_account = this.state.keys_to_account;\\n        let private_key_objs = [];\\n        for (let private_plainhex of Object.keys(keys_to_account)) {\\n            let {account_names, public_key_string} = keys_to_account[\\n                private_plainhex\\n            ];\\n            private_key_objs.push({\\n                private_plainhex,\\n                import_account_names: account_names,\\n                public_key_string\\n            });\\n        }\\n        this.reset();\\n        WalletDb.importKeysWorker(private_key_objs)\\n            .then(result => {\\n                ImportKeysStore.importing(false);\\n                let import_count = private_key_objs.length;\\n\\n                Notification.success({\\n                    message: counterpart.translate(\\n                        \\\"wallet.import_key_success\\\",\\n                        {\\n                            count: import_count\\n                        }\\n                    )\\n                });\\n\\n                this.setState({\\n                    importSuccess: true\\n                });\\n                // this.onCancel() // back to claim balances\\n            })\\n            .catch(error => {\\n                console.log(\\\"error:\\\", error);\\n                ImportKeysStore.importing(false);\\n                let message = error;\\n                try {\\n                    message = error.target.error.message;\\n                } catch (e) {}\\n\\n                Notification.error({\\n                    message: counterpart.translate(\\n                        \\\"notifications.import_keys_error_unknown\\\",\\n                        {\\n                            error_msg: message\\n                        }\\n                    )\\n                });\\n            });\\n    }\\n\\n    addByPattern(contents) {\\n        if (!contents) return false;\\n\\n        let count = 0,\\n            invalid_count = 0;\\n        let wif_regex = /5[HJK][1-9A-Za-z]{49}/g;\\n        for (let wif of contents.match(wif_regex) || []) {\\n            try {\\n                let private_key = PrivateKey.fromWif(wif); //could throw and error\\n                let private_plainhex = private_key.toBuffer().toString(\\\"hex\\\");\\n                let public_key = private_key.toPublicKey(); // S L O W\\n                let public_key_string = public_key.toPublicKeyString();\\n                this.state.imported_keys_public[public_key_string] = true;\\n                this.state.keys_to_account[private_plainhex] = {\\n                    account_names: [],\\n                    public_key_string\\n                };\\n                count++;\\n            } catch (e) {\\n                invalid_count++;\\n            }\\n        }\\n        this.setState(\\n            {\\n                key_text_message:\\n                    \\\"Found \\\" +\\n                    (!count ? \\\"\\\" : count + \\\" valid\\\") +\\n                    (!invalid_count\\n                        ? \\\"\\\"\\n                        : \\\" and \\\" + invalid_count + \\\" invalid\\\") +\\n                    \\\" key\\\" +\\n                    (count > 1 || invalid_count > 1 ? \\\"s\\\" : \\\"\\\") +\\n                    \\\".\\\"\\n            },\\n            () => this.updateOnChange()\\n        );\\n        // removes the message on the next render\\n        this.state.key_text_message = null;\\n        return count;\\n    }\\n\\n    // toggleImportType(type) {\\n    //     if (!type) {\\n    //         return;\\n    //     }\\n    //     console.log(\\\"toggleImportType\\\", type);\\n    //     this.setState({\\n    //         privateKey: type === \\\"privateKey\\\"\\n    //     });\\n    // }\\n\\n    _renderBalanceClaims() {\\n        return (\\n            <div>\\n                <BalanceClaimActive />\\n\\n                <div style={{paddingTop: 15}}>\\n                    <div\\n                        className=\\\"button success\\\"\\n                        onClick={this.onCancel.bind(this)}\\n                    >\\n                        <Translate content=\\\"wallet.done\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        let {privateKey} = this.props;\\n        let {keys_to_account} = this.state;\\n        let key_count = Object.keys(keys_to_account).length;\\n        let account_keycount = this.getImportAccountKeyCount(keys_to_account);\\n\\n        // Create wallet prior to the import keys (keeps layout clean)\\n        if (!WalletDb.getWallet())\\n            return <WalletCreate importKeys={true} hideTitle={true} />;\\n        if (this.props.importing) {\\n            return (\\n                <div>\\n                    <div className=\\\"center-content\\\">\\n                        <LoadingIndicator type=\\\"circle\\\" />\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        let filtering = this.state.genesis_filtering;\\n        let was_filtered =\\n            !!this.state.genesis_filter_status.length &&\\n            this.state.genesis_filter_finished;\\n        let account_rows = null;\\n\\n        if (this.state.genesis_filter_status.length) {\\n            account_rows = [];\\n            for (let status of this.state.genesis_filter_status) {\\n                if (status.count && status.total) {\\n                    account_rows.push(\\n                        <tr key={status.account_name}>\\n                            <td>{status.account_name}</td>\\n                            <td>\\n                                {filtering ? (\\n                                    <span>\\n                                        Filtering{\\\" \\\"}\\n                                        {Math.round(\\n                                            (status.count / status.total) * 100\\n                                        )}{\\\" \\\"}\\n                                        %{\\\" \\\"}\\n                                    </span>\\n                                ) : (\\n                                    <span>{status.count}</span>\\n                                )}\\n                            </td>\\n                        </tr>\\n                    );\\n                }\\n            }\\n        }\\n\\n        let import_ready = key_count !== 0;\\n        let password_placeholder = counterpart.translate(\\n            \\\"wallet.import_password\\\"\\n        );\\n\\n        if (import_ready) password_placeholder = \\\"\\\";\\n\\n        if (!account_rows && account_keycount) {\\n            account_rows = [];\\n            for (let account_name in account_keycount) {\\n                account_rows.push(\\n                    <tr key={account_name}>\\n                        <td>{account_name}</td>\\n                        <td>{account_keycount[account_name]}</td>\\n                    </tr>\\n                );\\n            }\\n        }\\n\\n        let cancelButton = (\\n            <div className=\\\"button success\\\" onClick={this.onCancel.bind(this)}>\\n                <Translate content=\\\"wallet.cancel\\\" />\\n            </div>\\n        );\\n\\n        let tabIndex = 1;\\n\\n        if (this.state.importSuccess) {\\n            return this._renderBalanceClaims();\\n        }\\n\\n        return (\\n            <div>\\n                {/* Key file upload */}\\n                <div style={{padding: \\\"10px 0\\\"}}>\\n                    <span>\\n                        {this.state.key_text_message ? (\\n                            this.state.key_text_message\\n                        ) : (\\n                            <KeyCount key_count={key_count} />\\n                        )}\\n                    </span>\\n                    {!import_ready ? null : (\\n                        <span>\\n                            {\\\" \\\"}\\n                            (\\n                            <a onClick={this.reset.bind(this)}>\\n                                <Translate content=\\\"wallet.reset\\\" />\\n                            </a>\\n                            )\\n                        </span>\\n                    )}\\n                </div>\\n\\n                {account_rows ? (\\n                    <div>\\n                        {!account_rows.length ? (\\n                            counterpart.translate(\\\"wallet.no_accounts\\\")\\n                        ) : (\\n                            <div>\\n                                <table className=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>\\n                                                <Translate content=\\\"explorer.account.title\\\" />\\n                                            </th>\\n                                            <th>\\n                                                <Translate content=\\\"settings.restore_key_count\\\" />\\n                                            </th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>{account_rows}</tbody>\\n                                </table>\\n                                <br />\\n                            </div>\\n                        )}\\n                    </div>\\n                ) : null}\\n                <br />\\n\\n                {!import_ready && !this.state.genesis_filter_initalizing ? (\\n                    <div>\\n                        <div>\\n                            <div>\\n                                {privateKey ? (\\n                                    <form onSubmit={this.onWif.bind(this)}>\\n                                        <Translate\\n                                            component=\\\"label\\\"\\n                                            content=\\\"wallet.paste_private\\\"\\n                                        />\\n                                        <input\\n                                            ref=\\\"wifInput\\\"\\n                                            type=\\\"password\\\"\\n                                            id=\\\"wif\\\"\\n                                            tabIndex={tabIndex++}\\n                                        />\\n\\n                                        <button\\n                                            className=\\\"button\\\"\\n                                            type=\\\"submit\\\"\\n                                        >\\n                                            <Translate content=\\\"wallet.submit\\\" />\\n                                        </button>\\n                                        {cancelButton}\\n                                    </form>\\n                                ) : (\\n                                    <form\\n                                        onSubmit={this._passwordCheck.bind(\\n                                            this\\n                                        )}\\n                                    >\\n                                        <label>\\n                                            <Translate content=\\\"wallet.bts_09_export\\\" />\\n                                            {this.state.no_file ? null : (\\n                                                <span>\\n                                                    &nbsp; (\\n                                                    <a\\n                                                        onClick={this.reset.bind(\\n                                                            this\\n                                                        )}\\n                                                    >\\n                                                        Reset\\n                                                    </a>\\n                                                    )\\n                                                </span>\\n                                            )}\\n                                        </label>\\n                                        <input\\n                                            type=\\\"file\\\"\\n                                            id=\\\"file_input\\\"\\n                                            accept=\\\".json\\\"\\n                                            style={{\\n                                                border: \\\"solid\\\",\\n                                                marginBottom: 15\\n                                            }}\\n                                            key={this.state.reset_file_name}\\n                                            onChange={this.upload.bind(this)}\\n                                        />\\n                                        <div>\\n                                            {this.state.import_file_message}\\n                                        </div>\\n                                        {!this.state.no_file ? (\\n                                            <div>\\n                                                <input\\n                                                    type=\\\"password\\\"\\n                                                    ref=\\\"password\\\"\\n                                                    key={\\n                                                        this.state\\n                                                            .reset_password\\n                                                    }\\n                                                    placeholder={\\n                                                        password_placeholder\\n                                                    }\\n                                                    onChange={() => {\\n                                                        if (\\n                                                            this.state\\n                                                                .import_password_message &&\\n                                                            this.state\\n                                                                .import_password_message\\n                                                                .length\\n                                                        ) {\\n                                                            this.setState({\\n                                                                import_password_message: null\\n                                                            });\\n                                                        }\\n                                                    }}\\n                                                />\\n                                                <p className=\\\"facolor-error\\\">\\n                                                    {\\n                                                        this.state\\n                                                            .import_password_message\\n                                                    }\\n                                                </p>\\n                                            </div>\\n                                        ) : null}\\n                                        <div className=\\\"button-group\\\">\\n                                            <button\\n                                                className={cname(\\\"button\\\", {\\n                                                    disabled: !!this.state\\n                                                        .no_file\\n                                                })}\\n                                                type=\\\"submit\\\"\\n                                            >\\n                                                <Translate content=\\\"wallet.submit\\\" />\\n                                            </button>\\n                                            {cancelButton}\\n                                        </div>\\n                                    </form>\\n                                )}\\n                            </div>\\n                            <br />\\n\\n                            <br />\\n                        </div>\\n                    </div>\\n                ) : null}\\n\\n                {this.state.genesis_filter_initalizing ? (\\n                    <div>\\n                        <div className=\\\"center-content\\\">\\n                            <LoadingIndicator type=\\\"circle\\\" />\\n                        </div>\\n                    </div>\\n                ) : null}\\n\\n                {import_ready ? (\\n                    <div>\\n                        <div>\\n                            <div className=\\\"button-group\\\">\\n                                <div\\n                                    className={cname(\\\"button success\\\", {\\n                                        disabled: !import_ready\\n                                    })}\\n                                    onClick={this._saveImport.bind(this)}\\n                                >\\n                                    <Translate content=\\\"wallet.import_keys\\\" />\\n                                </div>\\n                                <div\\n                                    className=\\\"button secondary\\\"\\n                                    onClick={this.reset.bind(this)}\\n                                >\\n                                    <Translate content=\\\"wallet.cancel\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <h4>\\n                            <Translate content=\\\"wallet.unclaimed\\\" />\\n                        </h4>\\n                        <Translate component=\\\"p\\\" content=\\\"wallet.claim_later\\\" />\\n                        <div className=\\\"grid-block\\\">\\n                            <div className=\\\"grid-content no-overflow\\\">\\n                                <Translate\\n                                    component=\\\"label\\\"\\n                                    content=\\\"wallet.totals\\\"\\n                                />\\n                                <BalanceClaimAssetTotal />\\n                            </div>\\n                        </div>\\n                        <br />\\n                    </div>\\n                ) : null}\\n            </div>\\n        );\\n    }\\n}\\n\\nImportKeys = connect(\\n    ImportKeys,\\n    {\\n        listenTo() {\\n            return [ImportKeysStore];\\n        },\\n        getProps() {\\n            return {\\n                importing: ImportKeysStore.getState().importing\\n            };\\n        }\\n    }\\n);\\n\\nexport default ImportKeys;\\n\",\"import {hash, key} from \\\"bitsharesjs\\\";\\n\\nvar bts_genesiskeys_bloom_url = undefined;\\ntry {\\n    var url = require(\\\"file-loader?name=bts_genesiskeys_bloom_[sha1:hash:hex:7].dat!assets/bts_genesiskeys_bloom.dat\\\");\\n    if (url.indexOf(\\\"3cee441\\\") === -1)\\n        throw new Error(\\\"Incorrect hash: bts_genesiskeys_bloom.dat\\\");\\n    bts_genesiskeys_bloom_url = url;\\n} catch (e) {\\n    // webpack deployment exception (not run time)\\n    console.log(\\n        \\\"WARN: Will be unable to filter CTS 1.0 wallet imports, did not find assets/bts_genesiskeys_bloom.dat\\\",\\n        e\\n    );\\n}\\n\\n/**\\n    This should only be applied to a CTS 1.0 export file taken on the\\n    discontinued chain. Any public key string or address (all 5 formats) carried\\n    over to the CTS 2.0 genesis block will be in this filter.\\n\\n    Their may be some false positives but no false negatives.\\n*/\\nexport default class GenesisFilter {\\n    /** or call this.init */\\n    constructor(bloom_buffer) {\\n        if (!bloom_buffer) return;\\n        this.bloom_buffer = bloom_buffer;\\n        this.bits_in_filter = bloom_buffer.length * 8; // 8388608 (test data)\\n    }\\n\\n    /** Was a bloom file deployed?  This does not try to load it from the server. */\\n    isAvailable() {\\n        return bts_genesiskeys_bloom_url !== undefined;\\n    }\\n\\n    init(done) {\\n        if (this.bloom_buffer) {\\n            done();\\n            return;\\n        }\\n        if (!this.isAvailable())\\n            throw new Error(\\\"Genesis bloom file was not deployed\\\");\\n\\n        var xhr = new XMLHttpRequest();\\n        // firefox 40 did not allow the blob url but ff 41.0.2 did\\n        xhr.responseType = \\\"blob\\\";\\n        xhr.onload = () => {\\n            if (xhr.status === 404) return;\\n            var reader = new FileReader();\\n            reader.onload = evt => {\\n                var contents = new Buffer(evt.target.result, \\\"binary\\\");\\n                if (contents.length !== 1048576)\\n                    throw new Error(\\\"Wrong length\\\");\\n                this.bits_in_filter = contents.length * 8; // 8388608 (test data)\\n                this.bloom_buffer = contents;\\n                done();\\n            };\\n            reader.readAsBinaryString(xhr.response);\\n        };\\n        xhr.onerror = () => {\\n            console.error(\\\"xhr.onerror\\\", e);\\n        };\\n        xhr.open(\\\"GET\\\", bts_genesiskeys_bloom_url);\\n        xhr.send();\\n    }\\n\\n    inGenesis(pubkey_or_address) {\\n        if (!this.bloom_buffer) throw new Error(\\\"Call init() first\\\");\\n        for (var hashes = 0; hashes < 3; hashes++) {\\n            var hex = hash.sha256(hashes + \\\":\\\" + pubkey_or_address);\\n            var bit_address =\\n                parseInt(hex.slice(-3).toString(\\\"hex\\\"), 16) %\\n                this.bits_in_filter; // 3090564\\n            // console.error(\\\"bit_address\\\", bit_address.toString(16))\\n            var byte_address = bit_address >> 3; // 386320\\n            // console.error(\\\"byte_address\\\", byte_address.toString(16))\\n            var mask = 1 << (bit_address & 7); // 16\\n            // console.error(\\\"mask\\\", mask.toString(16))\\n            var byte = this.bloom_buffer[byte_address];\\n            // console.error(\\\"byte\\\", byte.toString(16))\\n            // console.error(\\\"byte & mask\\\", byte & mask, (byte & mask) === 0, '\\\\n')\\n            if ((byte & mask) === 0) return false;\\n        }\\n        return true;\\n    }\\n\\n    filter(account_keys, status) {\\n        if (!this.isAvailable()) {\\n            console.log(\\\"WARN: Missing bloom filter for CTS 0.9.x wallets\\\");\\n            status({error: \\\"missing_bloom\\\"});\\n            return;\\n        }\\n        var initalizing = true;\\n        status({initalizing});\\n        this.init(() => {\\n            try {\\n                initalizing = false;\\n                status({initalizing});\\n                var running_count_progress = 1;\\n                for (var a = 0; a < account_keys.length; a++) {\\n                    var removed_count = 0,\\n                        count = 0;\\n                    var keys = account_keys[a];\\n                    var total = keys.encrypted_private_keys.length;\\n                    status({\\n                        importing: true,\\n                        account_name: keys.account_name,\\n                        count,\\n                        total\\n                    });\\n                    for (\\n                        var k = keys.encrypted_private_keys.length - 1;\\n                        k >= 0;\\n                        k--\\n                    ) {\\n                        count++;\\n                        if (count % running_count_progress === 0) {\\n                            running_count_progress = 47;\\n                            status({\\n                                importing: true,\\n                                account_name: keys.account_name,\\n                                count,\\n                                total\\n                            });\\n                        }\\n                        if (!keys.public_keys) {\\n                            // un-released format, just for testing\\n                            status({error: \\\"missing_public_keys\\\"});\\n                            return;\\n                        }\\n                        var currentKey = keys.public_keys[k];\\n                        if (/^CTS/.test(currentKey))\\n                            currentKey = \\\"CTS\\\" + currentKey.substring(3);\\n                        if (this.inGenesis(currentKey)) continue;\\n                        var addresses = key.addresses(currentKey, \\\"CTS\\\");\\n                        var addy_found = false;\\n                        for (var i = 0; i < addresses.length; i++) {\\n                            if (this.inGenesis(addresses[i])) {\\n                                addy_found = true;\\n                                break;\\n                            }\\n                        }\\n                        if (addy_found) continue;\\n                        delete keys.encrypted_private_keys[k];\\n                        delete keys.public_keys[k];\\n                        removed_count++;\\n                    }\\n                    var encrypted_private_keys = [],\\n                        public_keys = [];\\n                    for (\\n                        var k = keys.encrypted_private_keys.length - 1;\\n                        k >= 0;\\n                        k--\\n                    ) {\\n                        if (!keys.encrypted_private_keys[k]) continue;\\n                        encrypted_private_keys.push(\\n                            keys.encrypted_private_keys[k]\\n                        );\\n                        public_keys.push(keys.public_keys[k]);\\n                    }\\n                    keys.encrypted_private_keys = encrypted_private_keys;\\n                    status({\\n                        importing: false,\\n                        account_name: keys.account_name,\\n                        count: count - removed_count,\\n                        total\\n                    });\\n                    keys.public_keys = public_keys;\\n                }\\n                status({success: true});\\n            } finally {\\n                if (initalizing) {\\n                    initalizing = false;\\n                    status({initalizing});\\n                }\\n            }\\n        });\\n    }\\n}\\n\",\"module.exports = __webpack_public_path__ + \\\"bts_genesiskeys_bloom_3cee441.dat\\\";\",\"import alt from \\\"alt-instance\\\";\\n\\nclass BrainkeyActions {\\n    setBrainkey(brnkey) {\\n        return brnkey;\\n    }\\n}\\n\\nvar BrainkeyActionsWrapped = alt.createActions(BrainkeyActions);\\nexport default BrainkeyActionsWrapped;\\n\",\"import alt from \\\"alt-instance\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport {ChainStore, key} from \\\"bitsharesjs\\\";\\nimport BaseStore from \\\"stores/BaseStore\\\";\\nimport BrainkeyActions from \\\"actions/BrainkeyActions\\\";\\n\\n/** Each instance supports a single brainkey. */\\nexport default class BrainkeyStoreFactory {\\n    static instances = new Map();\\n    /** This may be called multiple times for the same <b>name</b>.  When done,\\n        (componentWillUnmount) make sure to call this.closeInstance()\\n    */\\n    static getInstance(name) {\\n        var instance = BrainkeyStoreFactory.instances.get(name);\\n        if (!instance) {\\n            instance = alt.createStore(BrainkeyStoreImpl, \\\"BrainkeyStore\\\");\\n            BrainkeyStoreFactory.instances.set(name, instance);\\n        }\\n        var subscribed_instance_key = name + \\\" subscribed_instance\\\";\\n        if (!BrainkeyStoreFactory.instances.get(subscribed_instance_key)) {\\n            var subscribed_instance = instance.chainStoreUpdate.bind(instance);\\n            ChainStore.subscribe(subscribed_instance);\\n            BrainkeyStoreFactory.instances.set(\\n                subscribed_instance_key,\\n                subscribed_instance\\n            );\\n        }\\n        return instance;\\n    }\\n    static closeInstance(name) {\\n        var instance = BrainkeyStoreFactory.instances.get(name);\\n        if (!instance) throw new Error(\\\"unknown instance \\\" + name);\\n        var subscribed_instance_key = name + \\\" subscribed_instance\\\";\\n        var subscribed_instance = BrainkeyStoreFactory.instances.get(\\n            subscribed_instance_key\\n        );\\n        BrainkeyStoreFactory.instances.delete(subscribed_instance_key);\\n        ChainStore.unsubscribe(subscribed_instance);\\n        instance.clearCache();\\n    }\\n}\\n\\n/** Derived keys may be unassigned from accounts therefore we must define a\\n    fixed block of derivied keys then monitor the entire block.\\n*/\\nvar DERIVIED_BRAINKEY_POOL_SIZE = 10;\\n\\nclass BrainkeyStoreImpl extends BaseStore {\\n    constructor() {\\n        super();\\n        this.clearCache();\\n        this.bindListeners({\\n            onSetBrainkey: BrainkeyActions.setBrainkey\\n        });\\n        this._export(\\\"inSync\\\", \\\"chainStoreUpdate\\\", \\\"clearCache\\\");\\n    }\\n\\n    // chainStoreUnsubscribe() {\\n    //     try{\\n    //         ChainStore.unsubscribe(this.chainStoreUpdate)\\n    //     }catch(e1) {console.log(\\\"unsub 1 fail\\\");\\n    //         try{\\n    //             ChainStore.unsubscribe(this.chainStoreUpdate.bind(this))\\n    //         }catch(e2) {console.log(\\\"unsub 1 fail\\\")}\\n    //     }\\n    // }\\n\\n    clearCache() {\\n        this.state = {\\n            brnkey: \\\"\\\",\\n            account_ids: Immutable.Set()\\n        };\\n        this.derived_keys = new Array();\\n        // Compared with ChainStore.account_ids_by_key\\n        this.account_ids_by_key = null;\\n    }\\n\\n    /** Saves the brainkey and begins the lookup for derived account referneces */\\n    onSetBrainkey(brnkey) {\\n        this.clearCache();\\n        this.setState({brnkey});\\n        this.deriveKeys(brnkey);\\n        this.chainStoreUpdate();\\n    }\\n\\n    /** @return <b>true</b> when all derivied account references are either\\n        found or known not to exist.\\n    */\\n    inSync() {\\n        this.derived_keys.forEach(derived_key => {\\n            if (isPendingFromChain(derived_key)) return false;\\n        });\\n        return true;\\n    }\\n\\n    chainStoreUpdate() {\\n        if (!this.derived_keys.length) return;\\n        if (this.account_ids_by_key === ChainStore.account_ids_by_key) return;\\n        this.account_ids_by_key = ChainStore.account_ids_by_key;\\n        this.updateAccountIds();\\n    }\\n\\n    deriveKeys(brnkey = this.state.brnkey) {\\n        var sequence = this.derived_keys.length; // next sequence (starting with 0)\\n        var private_key = key.get_brainPrivateKey(brnkey, sequence);\\n        var derived_key = derivedKeyStruct(private_key);\\n        this.derived_keys.push(derived_key);\\n        if (this.derived_keys.length < DERIVIED_BRAINKEY_POOL_SIZE)\\n            this.deriveKeys(brnkey);\\n    }\\n\\n    updateAccountIds() {\\n        var new_account_ids = Immutable.Set().withMutations(new_ids => {\\n            var updatePubkey = public_string => {\\n                var chain_account_ids = ChainStore.getAccountRefsOfKey(\\n                    public_string\\n                );\\n                if (chain_account_ids)\\n                    chain_account_ids.forEach(chain_account_id => {\\n                        new_ids.add(chain_account_id);\\n                    });\\n            };\\n            this.derived_keys.forEach(derived_key =>\\n                updatePubkey(derived_key.public_string)\\n            );\\n        });\\n        if (!new_account_ids.equals(this.state.account_ids)) {\\n            this.state.account_ids = new_account_ids;\\n            this.setState({account_ids: new_account_ids});\\n        }\\n    }\\n}\\n\\nfunction derivedKeyStruct(private_key) {\\n    var public_string = private_key.toPublicKey().toPublicKeyString();\\n    var derived_key = {private_key, public_string};\\n    return derived_key;\\n}\\n\\nvar isPendingFromChain = derived_key =>\\n    ChainStore.getAccountRefsOfKey(derived_key.public_string) === undefined;\\n\",\"import React from \\\"react\\\";\\nimport BalanceComponent from \\\"../Utility/BalanceComponent\\\";\\nimport AccountImage from \\\"../Account/AccountImage\\\";\\nimport ChainTypes from \\\"../Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"../Utility/BindToChainState\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {withRouter} from \\\"react-router-dom\\\";\\n\\n/**\\n *  @brief displays the summary of a given account in a condenced view (for the dashboard)\\n *\\n *  This card has the following properties:\\n *\\n *  { account: ${name_or_id} }\\n */\\n\\nclass AccountCard extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired\\n    };\\n\\n    onCardClick(e) {\\n        e.preventDefault();\\n        let name = this.props.account.get(\\\"name\\\");\\n        this.props.history.push(`/account/${name}`);\\n    }\\n\\n    render() {\\n        let name = null;\\n        let balances = null;\\n        let isMyAccount = false;\\n        if (this.props.account) {\\n            name = this.props.account.get(\\\"name\\\");\\n            let abal = this.props.account.get(\\\"balances\\\");\\n            if (abal) {\\n                balances = abal\\n                    .map(x => {\\n                        let balanceAmount = ChainStore.getObject(x);\\n                        if (!balanceAmount.get(\\\"balance\\\")) {\\n                            return null;\\n                        }\\n                        return (\\n                            <li key={x}>\\n                                <BalanceComponent balance={x} />\\n                            </li>\\n                        );\\n                    })\\n                    .toArray();\\n            }\\n            isMyAccount = AccountStore.isMyAccount(this.props.account);\\n        }\\n\\n        return (\\n            <div\\n                className=\\\"grid-content account-card\\\"\\n                onClick={this.onCardClick.bind(this)}\\n            >\\n                <div className={\\\"card\\\" + (isMyAccount ? \\\" my-account\\\" : \\\"\\\")}>\\n                    <h4 className=\\\"text-center\\\">{name}</h4>\\n                    <div className=\\\"card-content clearfix\\\">\\n                        <div className=\\\"float-left\\\">\\n                            <AccountImage\\n                                account={name}\\n                                size={{height: 64, width: 64}}\\n                            />\\n                        </div>\\n                        <ul className=\\\"balances\\\">{balances}</ul>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\nAccountCard = BindToChainState(AccountCard);\\nexport default withRouter(AccountCard);\\n\",\"import React, {Component} from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport cname from \\\"classnames\\\";\\nimport BrainkeyActions from \\\"actions/BrainkeyActions\\\";\\nimport BrainkeyStoreFactory from \\\"stores/BrainkeyStore\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BrainkeyInput from \\\"components/Wallet/BrainkeyInput\\\";\\nimport {toPairs} from \\\"lodash-es\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport AccountCard from \\\"components/Dashboard/AccountCard\\\";\\n\\nconst connectObject = {\\n    listenTo() {\\n        return [BrainkeyStoreFactory.getInstance(\\\"wmc\\\")];\\n    },\\n    getProps() {\\n        return BrainkeyStoreFactory.getInstance(\\\"wmc\\\").getState();\\n    }\\n};\\n\\nclass Brainkey extends Component {\\n    componentWillUnmount() {\\n        BrainkeyStoreFactory.closeInstance(\\\"wmc\\\");\\n    }\\n    render() {\\n        return (\\n            <span>\\n                <h3>\\n                    <Translate content=\\\"wallet.brainkey\\\" />\\n                </h3>\\n                <BrainkeyInputAccept>\\n                    <ViewBrainkey />\\n                </BrainkeyInputAccept>\\n            </span>\\n        );\\n    }\\n}\\nBrainkey = connect(Brainkey, connectObject);\\nexport default Brainkey;\\n\\nclass ViewBrainkey extends Component {\\n    render() {\\n        let short_brnkey = this.props.brnkey.substring(0, 10);\\n        // console.log(\\\"this.props.account_ids.toArray()\\\", this.props.account_ids.toArray())\\n        return (\\n            <span>\\n                <div>\\n                    <span className=\\\"\\\">{short_brnkey}</span>&hellip;\\n                </div>\\n                <p />\\n                {this.props.account_ids.size ? (\\n                    <BrainkeyAccounts\\n                        accounts={Immutable.List(\\n                            this.props.account_ids.toArray()\\n                        )}\\n                    />\\n                ) : (\\n                    <h5>\\n                        <Translate content=\\\"wallet.no_accounts\\\" />\\n                    </h5>\\n                )}\\n            </span>\\n        );\\n    }\\n}\\nViewBrainkey = connect(ViewBrainkey, connectObject);\\n\\nclass BrainkeyAccounts extends React.Component {\\n    static propTypes = {\\n        accounts: ChainTypes.ChainAccountsList.isRequired\\n    };\\n\\n    render() {\\n        let rows = toPairs(this.props.accounts)\\n            .filter(account => !!account[1])\\n            .map(account => account[1].get(\\\"name\\\"))\\n            .sort()\\n            .map(name => <AccountCard key={name} account={name} />);\\n        return <span>{rows}</span>;\\n    }\\n}\\nBrainkeyAccounts = BindToChainState(BrainkeyAccounts);\\n\\nexport class BrainkeyInputAccept extends Component {\\n    constructor() {\\n        super();\\n        this.state = {brnkey: \\\"\\\", accept: false};\\n    }\\n\\n    render() {\\n        if (this.state.accept) return <span>{this.props.children}</span>;\\n\\n        let ready = this.state.brnkey && this.state.brnkey !== \\\"\\\";\\n        return (\\n            <span className=\\\"grid-container\\\">\\n                <div>\\n                    <BrainkeyInput\\n                        onChange={this.onBrainkeyChange.bind(this)}\\n                    />\\n                </div>\\n                <div\\n                    className={cname(\\\"button success\\\", {disabled: !ready})}\\n                    onClick={this.onAccept.bind(this)}\\n                >\\n                    <Translate content=\\\"wallet.accept\\\" />\\n                </div>\\n            </span>\\n        );\\n    }\\n\\n    onBrainkeyChange(brnkey) {\\n        this.setState({brnkey});\\n    }\\n\\n    onAccept() {\\n        this.setState({accept: true});\\n        BrainkeyActions.setBrainkey(this.state.brnkey);\\n    }\\n}\\n\\n// <div onClick={this.onLookupAccounts.bind(this)} className=\\\"button success\\\">Lookup Accounts</div>\\n// onLookupAccounts() {\\n//\\n// }\\n\",\"import React, {Component} from \\\"react\\\";\\nimport {Link} from \\\"react-router-dom\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport WalletManagerStore from \\\"stores/WalletManagerStore\\\";\\nimport BalanceClaimActive from \\\"./BalanceClaimActive\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {Switch, Route} from \\\"react-router-dom\\\";\\nimport Brainkey from \\\"./Brainkey\\\";\\nimport ImportKeys from \\\"./ImportKeys\\\";\\nimport {BackupRestore} from \\\"./Backup\\\";\\nimport {getWalletName} from \\\"branding\\\";\\n\\nconst connectObject = {\\n    listenTo() {\\n        return [WalletManagerStore];\\n    },\\n    getProps() {\\n        const wallet = WalletManagerStore.getState();\\n        return {wallet};\\n    }\\n};\\n\\nclass ExistingAccount extends Component {\\n    render() {\\n        const has_wallet = this.props.wallet.wallet_names.count() != 0;\\n        return (\\n            <div className=\\\"grid-container\\\">\\n                <div className=\\\"grid-content\\\">\\n                    <div className=\\\"content-block center-content\\\">\\n                        <div className=\\\"page-header\\\">\\n                            <h1>\\n                                <Translate\\n                                    content=\\\"account.welcome\\\"\\n                                    wallet_name={getWalletName()}\\n                                />\\n                            </h1>\\n                            {!has_wallet ? (\\n                                <h3>\\n                                    <Translate content=\\\"wallet.create_wallet_backup\\\" />\\n                                </h3>\\n                            ) : (\\n                                <h3>\\n                                    <Translate content=\\\"wallet.setup_wallet\\\" />\\n                                </h3>\\n                            )}\\n                        </div>\\n                        <div className=\\\"content-block\\\">\\n                            <Switch>\\n                                <Route\\n                                    exact\\n                                    path=\\\"/existing-account\\\"\\n                                    component={BackupRestore}\\n                                />\\n                                <Route\\n                                    exact\\n                                    path=\\\"/existing-account/import-backup\\\"\\n                                    component={ExistingAccountOptions}\\n                                />\\n                                <Route\\n                                    exact\\n                                    path=\\\"/existing-account/import-keys\\\"\\n                                    component={ImportKeys}\\n                                />\\n                                <Route\\n                                    exact\\n                                    path=\\\"/existing-account/brainkey\\\"\\n                                    component={Brainkey}\\n                                />\\n                                <Route\\n                                    exact\\n                                    path=\\\"/existing-account/balance-claim\\\"\\n                                    component={BalanceClaimActive}\\n                                />\\n                            </Switch>\\n                            {this.props.children}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\nExistingAccount = connect(ExistingAccount, connectObject);\\n\\nclass ExistingAccountOptions extends Component {\\n    render() {\\n        const has_wallet = this.props.wallet.wallet_names.count() != 0;\\n        return (\\n            <span>\\n                {!has_wallet ? (\\n                    <div>\\n                        <Link to=\\\"existing-account/import-backup\\\">\\n                            <Translate\\n                                content=\\\"wallet.import_backup\\\"\\n                                wallet_name={getWalletName()}\\n                            />\\n                        </Link>\\n                        <br />\\n                        <br />\\n                        <Link to=\\\"existing-account/import-keys\\\">\\n                            <Translate content=\\\"wallet.import_bts1\\\" />\\n                        </Link>\\n                        <br />\\n                        <br />\\n                        <Link to=\\\"existing-account/import-keys\\\">\\n                            <Translate content=\\\"wallet.create_wallet\\\" />\\n                        </Link>\\n                        <br />\\n                        <hr />\\n                    </div>\\n                ) : null}\\n\\n                {!has_wallet ? null : <BalanceClaimActive />}\\n\\n                {has_wallet ? (\\n                    <span>\\n                        <Link to=\\\"dashboard\\\">\\n                            <div className=\\\"button outline\\\">\\n                                <Translate\\n                                    component=\\\"span\\\"\\n                                    content=\\\"header.dashboard\\\"\\n                                />\\n                            </div>\\n                        </Link>\\n                        <Link to=\\\"wallet\\\">\\n                            <div className=\\\"button outline\\\">\\n                                <Translate content=\\\"settings.wallets\\\" />\\n                            </div>\\n                        </Link>\\n                    </span>\\n                ) : null}\\n            </span>\\n        );\\n    }\\n}\\nExistingAccountOptions = connect(ExistingAccountOptions, connectObject);\\n\\nexport default ExistingAccount;\\nexport {ExistingAccountOptions};\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{2035:function(e,t,n){\"use strict\";var a=n(0),r=n.n(a),o=n(27),i=n(13),c=n.n(i),l=n(5),s=n.n(l),u=n(11),f=n.n(u),p=n(41),m=n(98),y=n(279),h=n(568),_=n(398),d=n(34),b=n(3),v=n.n(b),g=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var k=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a[\"Component\"]),g(t,[{key:\"componentWillReceiveProps\",value:function(e){e.claim_account_name&&this.onClaimAccount(e.claim_account_name,e.checked)}},{key:\"render\",value:function(){var e=this;if(void 0===this.props.balances||!this.props.total_by_account_asset.size)return r.a.createElement(\"div\",null);var t=-1;return r.a.createElement(\"div\",null,r.a.createElement(\"table\",{className:\"table\"},r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",null),r.a.createElement(\"th\",{style:{textAlign:\"center\"}},r.a.createElement(v.a,{content:\"wallet.unclaimed\"})),r.a.createElement(\"th\",{style:{textAlign:\"center\"}},r.a.createElement(v.a,{content:\"wallet.unclaimed_vesting\"})),r.a.createElement(\"th\",{style:{textAlign:\"center\"}},r.a.createElement(v.a,{content:\"account.name\"})))),r.a.createElement(\"tbody\",null,this.props.total_by_account_asset.map(function(n,a){return r.a.createElement(\"tr\",{key:++t},r.a.createElement(\"td\",null,r.a.createElement(\"input\",{type:\"checkbox\",checked:!!e.props.checked.get(t),onChange:e.onCheckbox.bind(e,t,n.balances)})),r.a.createElement(\"td\",{style:{textAlign:\"right\"}},n.unclaimed?r.a.createElement(d.a,{color:\"info\",amount:n.unclaimed,asset:a.get(1)}):null),r.a.createElement(\"td\",{style:{textAlign:\"right\"}},n.vesting.unclaimed?r.a.createElement(\"div\",null,r.a.createElement(d.a,{color:\"info\",amount:n.vesting.unclaimed,hide_asset:!0,asset:a.get(1)}),r.a.createElement(\"span\",null,\" of \"),r.a.createElement(d.a,{color:\"info\",amount:n.vesting.total,asset:a.get(1)})):null),r.a.createElement(\"td\",null,\" \",a.get(0),\" \"))}).toArray())))}},{key:\"onCheckbox\",value:function(e,t){var n=this.props.checked;n=n.get(e)?n.delete(e):n.set(e,t),_.a.setSelectedBalanceClaims(n)}},{key:\"onClaimAccount\",value:function(e,t){if(!t.size){var n=-1;this.props.total_by_account_asset.forEach(function(a,r){n++,r.get(0)===e&&(a.unclaimed||a.vesting.unclaimed)&&(t=t.set(n,a.balances))}),t.size&&_.a.setSelectedBalanceClaims(t)}}}]),t}(),E=k=Object(o.a)(k,{listenTo:function(){return[h.a]},getProps:function(){var e=h.a.getState(),t=e.balances,n=e.address_to_pubkey,a=m.a.getState().keys,r=c.a.Map().asMutable();return t&&(e.total_by_account_asset=t.groupBy(function(e){var t=\"\",o=n.get(e.owner),i=a.get(o);i&&i.import_account_names&&(t=i.import_account_names.join(\", \"));var l=Math.ceil(function(e,t){var n=r.get(e);return n||(n=c.a.Set().asMutable(),r.set(e,n)),n.add(t),n.size}(c.a.List([t,e.balance.asset_id]),e.owner)/60);return c.a.List([t,e.balance.asset_id,l])}).map(function(e){return e.reduce(function(e,t){return t.public_key_string=n.get(t.owner),e.balances=e.balances.add(t),void 0!=t.vested_balance?(e.vesting.unclaimed+=Number(t.vested_balance.amount),e.vesting.total+=Number(t.balance.amount)):e.unclaimed+=Number(t.balance.amount),e},{unclaimed:0,vesting:{unclaimed:0,total:0},balances:c.a.Set()})}).sortBy(function(e){return e})),e}}),w=n(66),O=n(22),C=n(40),S=n(169),j=n(50),x=n(1),P=n.n(x),N=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var A=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a[\"Component\"]),N(t,[{key:\"render\",value:function(){var e=this.props.accounts.filter(function(e){return!!e}).filter(function(e){return O.a.isMyAccount(e)}).map(function(e){return e.get(\"name\")}).sort();return r.a.createElement(\"span\",null,r.a.createElement(S.a,{onChange:this.onAccountSelect.bind(this),account_names:e,center:!0}))}},{key:\"onAccountSelect\",value:function(e){this.props.onChange(e)}}]),t}();A.propTypes={accounts:C.a.ChainAccountsList.isRequired,onChange:P.a.func.isRequired};var T=Object(j.a)(A),B=n(12),I=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var K=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a[\"Component\"]),I(t,[{key:\"componentWillMount\",value:function(){var e=m.a.getState().keys.keySeq();_.a.setPubkeys(e),this.existing_keys=e}},{key:\"componentWillReceiveProps\",value:function(e){var t=m.a.getState().keys.keySeq();t.equals(this.existing_keys)||(this.existing_keys=t,_.a.setPubkeys(t))}},{key:\"render\",value:function(){if(!this.props.account_refs.size)return r.a.createElement(\"div\",null,r.a.createElement(\"h5\",null,r.a.createElement(v.a,{content:\"wallet.no_balance\"})));if(this.props.loading)return r.a.createElement(\"div\",null,r.a.createElement(\"br\",null),r.a.createElement(\"h5\",null,r.a.createElement(v.a,{content:\"wallet.loading_balances\"}),\"…\"),r.a.createElement(\"br\",null),r.a.createElement(p.a,{type:\"three-bounce\"}));if(!this.props.balances||!this.props.balances.size)return r.a.createElement(\"div\",null,r.a.createElement(\"br\",null),r.a.createElement(\"h5\",null,r.a.createElement(v.a,{content:\"wallet.no_balance\"})));var e=this.props.selected_balances.size&&this.props.claim_account_name,t=e?\" (\"+this.props.claim_account_name+\")\":null;return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"content-block center-content\"},r.a.createElement(\"h3\",{className:\"no-border-bottom\"},r.a.createElement(v.a,{content:\"wallet.claim_balances\"}))),r.a.createElement(\"div\",{className:\"grid-block vertical\"},r.a.createElement(\"div\",{className:\"grid-content\",style:{overflowY:\"hidden !important\"}},r.a.createElement(\"div\",{className:\"full-width-content center-content\"},r.a.createElement(T,{key:this.props.balances,accounts:c.a.List(this.props.account_refs),onChange:this.onClaimAccountChange.bind(this)})),r.a.createElement(\"br\",null)),r.a.createElement(\"br\",null),r.a.createElement(E,null)),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null),r.a.createElement(\"div\",{className:s()(\"button success\",{disabled:!e}),onClick:this.onClaimBalance.bind(this)},r.a.createElement(v.a,{content:\"wallet.claim_balance\"}),t),r.a.createElement(\"div\",{className:\"button cancel\",onClick:this.onBack.bind(this)},r.a.createElement(v.a,{content:\"wallet.cancel\"})))}},{key:\"onBack\",value:function(e){e.preventDefault(),window.history.back()}},{key:\"onClaimAccountChange\",value:function(e){_.a.claimAccountChange(e)}},{key:\"onClaimBalance\",value:function(){w.a.importBalance(this.props.claim_account_name,this.props.selected_balances,!0).catch(function(e){console.error(\"claimBalance\",e);var t=e;try{t=e.data.message}catch(e){}throw B.Notification.error({message:f.a.translate(\"notifications.balance_claim_error\",{error_msg:t})}),e})}}]),t}();K=Object(o.a)(K,{listenTo:function(){return[h.a,y.a,m.a]},getProps:function(){var e=h.a.getState();return e.account_refs=y.a.getAccountRefs(),e}});t.a=K},2052:function(e,t,n){\"use strict\";var a=n(0),r=n.n(a),o=n(27),i=n(5),c=n.n(i),l=n(10),s=n(15),u=n(98),f=n(45),p=n(571),m=n(41),y=n(3),h=n.n(y),_=n(11),d=n.n(_),b=n(2035),v=n(398),g=n(568),k=n(34),E=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var w=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a[\"Component\"]),E(t,[{key:\"render\",value:function(){if(void 0===this.props.balances)return r.a.createElement(\"div\",null,r.a.createElement(h.a,{content:\"wallet.loading_balances\"}),\"…\");var e=this.props.balances.groupBy(function(e){return e.balance.asset_id}).map(function(e){return e.reduce(function(e,t){return e+Number(t.balance.amount)},0)});return e.size?r.a.createElement(\"div\",null,e.map(function(e,t){return r.a.createElement(\"div\",{key:t},r.a.createElement(k.a,{color:\"info\",amount:e,asset:t}))}).toArray()):r.a.createElement(\"div\",null,\"None\")}}]),t}(),O=w=Object(o.a)(w,{listenTo:function(){return[g.a]},getProps:function(){return g.a.getState()}}),C=n(19),S=n(26),j=n(93),x=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var P=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state=e._getInitialState(),e._export(\"importing\"),e}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,j[\"a\"]),x(t,[{key:\"_getInitialState\",value:function(){return{importing:!1}}},{key:\"importing\",value:function(e){this.setState({importing:e})}}]),t}(),N=S.a.createStore(P,\"ImportKeysStore\"),A=n(12),T=n(2285),B=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();n(2287);var I=function(e){var t=e.key_count;return t?r.a.createElement(\"span\",null,\"Found \",t,\" private keys\"):r.a.createElement(\"span\",null)},K=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state=e._getInitialState(),e._renderBalanceClaims=e._renderBalanceClaims.bind(e),e}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a[\"Component\"]),B(t,[{key:\"_getInitialState\",value:function(){return{keys_to_account:{},no_file:!0,account_keys:[],reset_file_name:arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.state.reset_file_name:Date.now(),reset_password:Date.now(),password_checksum:null,import_file_message:null,import_password_message:null,imported_keys_public:{},key_text_message:null,genesis_filtering:!1,genesis_filter_status:[],genesis_filter_finished:void 0,importSuccess:!1}}},{key:\"reset\",value:function(e,t){var n=this;e&&e.preventDefault();var a=this._getInitialState(t);this.setState(a,function(){return n.updateOnChange()})}},{key:\"onWif\",value:function(e){e.preventDefault();var t=this.refs.wifInput.value;this.addByPattern(t)}},{key:\"onCancel\",value:function(e){e&&e.preventDefault(),this.setState(this._getInitialState())}},{key:\"updateOnChange\",value:function(){v.a.setPubkeys(Object.keys(this.state.imported_keys_public))}},{key:\"getImportAccountKeyCount\",value:function(e){var t={},n=!1;for(var a in e){var r=!0,o=!1,i=void 0;try{for(var c,l=e[a].account_names[Symbol.iterator]();!(r=(c=l.next()).done);r=!0){var s=c.value;t[s]=(t[s]||0)+1,n=!0}}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}}return n?t:null}},{key:\"upload\",value:function(e){var t=this;this.reset(null,!0);var n=e.target.files[0],a=new FileReader;a.onload=function(e){var a=e.target.result;try{var r=void 0;try{r=JSON.parse(a),t._parseImportKeyUpload(r,n.name,function(e){t.setState(e,function(){e.genesis_filter_finished&&t._passwordCheck()})})}catch(e){try{r||n.name,t._parseWalletJson(r)}catch(e){if(!t.addByPattern(a))throw e}t._passwordCheck()}}catch(e){console.error(\"... ImportKeys upload error\",e),t.setState({import_file_message:e})}},a.readAsText(n)}},{key:\"_parseImportKeyUpload\",value:function(e,t,n){var a=this,r=void 0,o=void 0;try{if(!(r=e.password_checksum))throw t+\" is an unrecognized format\";if(!Array.isArray(e.account_keys))throw t+\" is an unrecognized format\";o=e.account_keys}catch(e){throw e.message||e}var i=new T.a;i.isAvailable()?this.setState({genesis_filter_initalizing:!0},function(){return i.init(function(){var e=a.state.genesis_filter_status,t=o;i.filter(t,function(a){if(\"missing_public_keys\"===a.error)return console.error(\"un-released format, just for testing\"),void n({password_checksum:r,account_keys:o,genesis_filter_finished:!0,genesis_filtering:!1});if(a.success)n({password_checksum:r,account_keys:t,genesis_filter_finished:!0,genesis_filtering:!1});else if(void 0===a.initalizing)if(void 0!==a.importing){if(e.length)e[e.length-1].account_name===a.account_name?e[e.length-1]=a:e.push(a);else e.push(a);n({genesis_filter_status:e})}else console.error(\"unknown status\",a);else n({genesis_filter_initalizing:a.initalizing,genesis_filtering:!0})})})}):n({password_checksum:r,account_keys:o,genesis_filter_finished:!0,genesis_filtering:!1})}},{key:\"_parseWalletJson\",value:function(e){var t=void 0,n=void 0,a={},r={},o=function(e,t){e=s.ChainConfig.address_prefix+e.substring(3);var n=l.PublicKey.fromPublicKeyString(e).toAddressString(),a=r[t]||[];n=\"CTS\"+n.substring(3),a.push(n),r[t]=a};try{if(!Array.isArray(e))throw new Error(\"Invalid wallet format\");var i=!0,c=!1,u=void 0;try{for(var f,p=e[Symbol.iterator]();!(i=(f=p.next()).done);i=!0){var m=f.value;if(\"key_record_type\"==m.type&&m.data.account_address&&m.data.encrypted_private_key){var y=m.data.account_address,h=a[y]||[];h.push(m.data.encrypted_private_key),a[y]=h}else if(\"account_record_type\"!=m.type)if(\"property_record_type\"!=m.type||\"encrypted_brainkey\"!=m.data.key){if(\"master_key_record_type\"==m.type){if(!m.data)throw file.name+\" invalid master_key_record record\";if(!m.data.checksum)throw file.name+\" is missing master_key_record checksum\";t=m.data.checksum}}else n=m.data.value;else{var _=m.data.name;o(m.data.owner_key,_);var d=!0,b=!1,v=void 0;try{for(var g,k=m.data.active_key_history[Symbol.iterator]();!(d=(g=k.next()).done);d=!0){o(g.value[1],_)}}catch(e){b=!0,v=e}finally{try{!d&&k.return&&k.return()}finally{if(b)throw v}}}}}catch(e){c=!0,u=e}finally{try{!i&&p.return&&p.return()}finally{if(c)throw u}}if(!n)throw\"Please use a CTS 1.0 wallet_export_keys file instead\";if(!t)throw file.name+\" is missing password_checksum\";if(!enckeys.length)throw file.name+\" does not contain any private keys\"}catch(e){throw e.message||e}var E=[];for(var w in r){var O=[],C=!0,S=!1,j=void 0;try{for(var x,P=r[w][Symbol.iterator]();!(C=(x=P.next()).done);C=!0){var N=a[x.value];if(N){var A=!0,T=!1,B=void 0;try{for(var I,K=N[Symbol.iterator]();!(A=(I=K.next()).done);A=!0){var R=I.value;O.push(R)}}catch(e){T=!0,B=e}finally{try{!A&&K.return&&K.return()}finally{if(T)throw B}}}}}catch(e){S=!0,j=e}finally{try{!C&&P.return&&P.return()}finally{if(S)throw j}}E.push({account_name:w,encrypted_private_keys:O})}this.setState({password_checksum:t,account_keys:E})}},{key:\"_passwordCheck\",value:function(e){var t=this;e&&\"preventDefault\"in e&&e.preventDefault();var n=this.refs.password,a=n?n.value:\"\";if(this.state.password_checksum!=l.hash.sha512(l.hash.sha512(a)).toString(\"hex\"))return this.setState({no_file:!1,import_password_message:a.length?\"Incorrect password\":null});this.setState({no_file:!1,reset_password:Date.now(),import_password_message:d.a.translate(\"wallet.import_pass_match\")},function(){return t._decryptPrivateKeys(a)})}},{key:\"_decryptPrivateKeys\",value:function(e){var t=this,n=l.Aes.fromSeed(e),a=!0,r=!0,o=!1,i=void 0;try{for(var c,u=this.state.account_keys[Symbol.iterator]();!(r=(c=u.next()).done);r=!0){var f=c.value;if(f.encrypted_private_keys)for(var p=f.account_name.trim(),m=new RegExp(\"^\"+s.ChainConfig.address_prefix),y=0;y<f.encrypted_private_keys.length;y++){var h=f.encrypted_private_keys[y],_=f.public_keys?f.public_keys[y]:null;try{var b=n.decryptHex(h);if(_)m.test(_)||(_=s.ChainConfig.address_prefix+_.substring(3));else _=l.PrivateKey.fromHex(b).toPublicKey().toPublicKeyString();this.state.imported_keys_public[_]=!0;var v=(this.state.keys_to_account[b]||{account_names:[]}).account_names,g=!1,k=!0,E=!1,w=void 0;try{for(var O,C=v[Symbol.iterator]();!(k=(O=C.next()).done);k=!0){O.value==p&&(g=!0)}}catch(e){E=!0,w=e}finally{try{!k&&C.return&&C.return()}finally{if(E)throw w}}if(g)continue;v.push(p),this.state.keys_to_account[b]={account_names:v,public_key_string:_}}catch(e){console.log(e,e.stack);var S=e.message||e;A.Notification.error({message:d.a.translate(\"notifications.import_keys_error\",{account_name:p,error_msg:S})})}}else{var j=\"Account \"+f.account_name+\" missing encrypted_private_keys\";console.error(j),a&&(A.Notification.error({message:j}),a=!1)}}}catch(e){o=!0,i=e}finally{try{!r&&u.return&&u.return()}finally{if(o)throw i}}this.setState({import_file_message:null,import_password_message:null,password_checksum:null},function(){return t.updateOnChange()})}},{key:\"_saveImport\",value:function(e){var t=this;e.preventDefault();var n=u.a.getState().keys,a={};for(var r in this.state.imported_keys_public)n.has(r)&&(delete this.state.imported_keys_public[r],a[r]=!0);if(0!==Object.keys(this.state.imported_keys_public).length){var o=this.state.keys_to_account,i=!0,c=!1,l=void 0;try{for(var s,p=Object.keys(o)[Symbol.iterator]();!(i=(s=p.next()).done);i=!0){var m=s.value,y=o[m];y.account_names;a[y.public_key_string]&&delete o[m]}}catch(e){c=!0,l=e}finally{try{!i&&p.return&&p.return()}finally{if(c)throw l}}f.a.unlock().then(function(){N.importing(!0),setTimeout(function(){return t.saveImport()},200)}).catch(function(){})}else A.Notification.error({message:d.a.translate(\"notifications.import_keys_already_imported\")})}},{key:\"saveImport\",value:function(){var e=this,t=this.state.keys_to_account,n=[],a=!0,r=!1,o=void 0;try{for(var i,c=Object.keys(t)[Symbol.iterator]();!(a=(i=c.next()).done);a=!0){var l=i.value,s=t[l],u=s.account_names,f=s.public_key_string;n.push({private_plainhex:l,import_account_names:u,public_key_string:f})}}catch(e){r=!0,o=e}finally{try{!a&&c.return&&c.return()}finally{if(r)throw o}}this.reset(),C.a.importKeysWorker(n).then(function(t){N.importing(!1);var a=n.length;A.Notification.success({message:d.a.translate(\"wallet.import_key_success\",{count:a})}),e.setState({importSuccess:!0})}).catch(function(e){console.log(\"error:\",e),N.importing(!1);var t=e;try{t=e.target.error.message}catch(e){}A.Notification.error({message:d.a.translate(\"notifications.import_keys_error_unknown\",{error_msg:t})})})}},{key:\"addByPattern\",value:function(e){var t=this;if(!e)return!1;var n=0,a=0,r=!0,o=!1,i=void 0;try{for(var c,s=(e.match(/5[HJK][1-9A-Za-z]{49}/g)||[])[Symbol.iterator]();!(r=(c=s.next()).done);r=!0){var u=c.value;try{var f=l.PrivateKey.fromWif(u),p=f.toBuffer().toString(\"hex\"),m=f.toPublicKey().toPublicKeyString();this.state.imported_keys_public[m]=!0,this.state.keys_to_account[p]={account_names:[],public_key_string:m},n++}catch(e){a++}}}catch(e){o=!0,i=e}finally{try{!r&&s.return&&s.return()}finally{if(o)throw i}}return this.setState({key_text_message:\"Found \"+(n?n+\" valid\":\"\")+(a?\" and \"+a+\" invalid\":\"\")+\" key\"+(n>1||a>1?\"s\":\"\")+\".\"},function(){return t.updateOnChange()}),this.state.key_text_message=null,n}},{key:\"_renderBalanceClaims\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(b.a,null),r.a.createElement(\"div\",{style:{paddingTop:15}},r.a.createElement(\"div\",{className:\"button success\",onClick:this.onCancel.bind(this)},r.a.createElement(h.a,{content:\"wallet.done\"}))))}},{key:\"render\",value:function(){var e=this,t=this.props.privateKey,n=this.state.keys_to_account,a=Object.keys(n).length,o=this.getImportAccountKeyCount(n);if(!C.a.getWallet())return r.a.createElement(p.b,{importKeys:!0,hideTitle:!0});if(this.props.importing)return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"center-content\"},r.a.createElement(m.a,{type:\"circle\"})));var i=this.state.genesis_filtering,l=(!!this.state.genesis_filter_status.length&&this.state.genesis_filter_finished,null);if(this.state.genesis_filter_status.length){l=[];var s=!0,u=!1,f=void 0;try{for(var y,_=this.state.genesis_filter_status[Symbol.iterator]();!(s=(y=_.next()).done);s=!0){var b=y.value;b.count&&b.total&&l.push(r.a.createElement(\"tr\",{key:b.account_name},r.a.createElement(\"td\",null,b.account_name),r.a.createElement(\"td\",null,i?r.a.createElement(\"span\",null,\"Filtering\",\" \",Math.round(b.count/b.total*100),\" \",\"%\",\" \"):r.a.createElement(\"span\",null,b.count))))}}catch(e){u=!0,f=e}finally{try{!s&&_.return&&_.return()}finally{if(u)throw f}}}var v=0!==a,g=d.a.translate(\"wallet.import_password\");if(v&&(g=\"\"),!l&&o)for(var k in l=[],o)l.push(r.a.createElement(\"tr\",{key:k},r.a.createElement(\"td\",null,k),r.a.createElement(\"td\",null,o[k])));var E=r.a.createElement(\"div\",{className:\"button success\",onClick:this.onCancel.bind(this)},r.a.createElement(h.a,{content:\"wallet.cancel\"})),w=1;return this.state.importSuccess?this._renderBalanceClaims():r.a.createElement(\"div\",null,r.a.createElement(\"div\",{style:{padding:\"10px 0\"}},r.a.createElement(\"span\",null,this.state.key_text_message?this.state.key_text_message:r.a.createElement(I,{key_count:a})),v?r.a.createElement(\"span\",null,\" \",\"(\",r.a.createElement(\"a\",{onClick:this.reset.bind(this)},r.a.createElement(h.a,{content:\"wallet.reset\"})),\")\"):null),l?r.a.createElement(\"div\",null,l.length?r.a.createElement(\"div\",null,r.a.createElement(\"table\",{className:\"table\"},r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",null,r.a.createElement(h.a,{content:\"explorer.account.title\"})),r.a.createElement(\"th\",null,r.a.createElement(h.a,{content:\"settings.restore_key_count\"})))),r.a.createElement(\"tbody\",null,l)),r.a.createElement(\"br\",null)):d.a.translate(\"wallet.no_accounts\")):null,r.a.createElement(\"br\",null),v||this.state.genesis_filter_initalizing?null:r.a.createElement(\"div\",null,r.a.createElement(\"div\",null,r.a.createElement(\"div\",null,t?r.a.createElement(\"form\",{onSubmit:this.onWif.bind(this)},r.a.createElement(h.a,{component:\"label\",content:\"wallet.paste_private\"}),r.a.createElement(\"input\",{ref:\"wifInput\",type:\"password\",id:\"wif\",tabIndex:w++}),r.a.createElement(\"button\",{className:\"button\",type:\"submit\"},r.a.createElement(h.a,{content:\"wallet.submit\"})),E):r.a.createElement(\"form\",{onSubmit:this._passwordCheck.bind(this)},r.a.createElement(\"label\",null,r.a.createElement(h.a,{content:\"wallet.bts_09_export\"}),this.state.no_file?null:r.a.createElement(\"span\",null,\"  (\",r.a.createElement(\"a\",{onClick:this.reset.bind(this)},\"Reset\"),\")\")),r.a.createElement(\"input\",{type:\"file\",id:\"file_input\",accept:\".json\",style:{border:\"solid\",marginBottom:15},key:this.state.reset_file_name,onChange:this.upload.bind(this)}),r.a.createElement(\"div\",null,this.state.import_file_message),this.state.no_file?null:r.a.createElement(\"div\",null,r.a.createElement(\"input\",{type:\"password\",ref:\"password\",key:this.state.reset_password,placeholder:g,onChange:function(){e.state.import_password_message&&e.state.import_password_message.length&&e.setState({import_password_message:null})}}),r.a.createElement(\"p\",{className:\"facolor-error\"},this.state.import_password_message)),r.a.createElement(\"div\",{className:\"button-group\"},r.a.createElement(\"button\",{className:c()(\"button\",{disabled:!!this.state.no_file}),type:\"submit\"},r.a.createElement(h.a,{content:\"wallet.submit\"})),E))),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null))),this.state.genesis_filter_initalizing?r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"center-content\"},r.a.createElement(m.a,{type:\"circle\"}))):null,v?r.a.createElement(\"div\",null,r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"button-group\"},r.a.createElement(\"div\",{className:c()(\"button success\",{disabled:!v}),onClick:this._saveImport.bind(this)},r.a.createElement(h.a,{content:\"wallet.import_keys\"})),r.a.createElement(\"div\",{className:\"button secondary\",onClick:this.reset.bind(this)},r.a.createElement(h.a,{content:\"wallet.cancel\"})))),r.a.createElement(\"h4\",null,r.a.createElement(h.a,{content:\"wallet.unclaimed\"})),r.a.createElement(h.a,{component:\"p\",content:\"wallet.claim_later\"}),r.a.createElement(\"div\",{className:\"grid-block\"},r.a.createElement(\"div\",{className:\"grid-content no-overflow\"},r.a.createElement(h.a,{component:\"label\",content:\"wallet.totals\"}),r.a.createElement(O,null))),r.a.createElement(\"br\",null)):null)}}]),t}();K.defaultProps={privateKey:!0},K=Object(o.a)(K,{listenTo:function(){return[N]},getProps:function(){return{importing:N.getState().importing}}});t.a=K},2285:function(t,n,a){\"use strict\";(function(t){var r=a(10),o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=void 0;try{var c=a(2286);if(-1===c.indexOf(\"3cee441\"))throw new Error(\"Incorrect hash: bts_genesiskeys_bloom.dat\");i=c}catch(e){console.log(\"WARN: Will be unable to filter CTS 1.0 wallet imports, did not find assets/bts_genesiskeys_bloom.dat\",e)}var l=function(){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),e&&(this.bloom_buffer=e,this.bits_in_filter=8*e.length)}return o(n,[{key:\"isAvailable\",value:function(){return void 0!==i}},{key:\"init\",value:function(n){var a=this;if(this.bloom_buffer)n();else{if(!this.isAvailable())throw new Error(\"Genesis bloom file was not deployed\");var r=new XMLHttpRequest;r.responseType=\"blob\",r.onload=function(){if(404!==r.status){var e=new FileReader;e.onload=function(e){var r=new t(e.target.result,\"binary\");if(1048576!==r.length)throw new Error(\"Wrong length\");a.bits_in_filter=8*r.length,a.bloom_buffer=r,n()},e.readAsBinaryString(r.response)}},r.onerror=function(){console.error(\"xhr.onerror\",e)},r.open(\"GET\",i),r.send()}}},{key:\"inGenesis\",value:function(e){if(!this.bloom_buffer)throw new Error(\"Call init() first\");for(var t=0;t<3;t++){var n=r.hash.sha256(t+\":\"+e),a=parseInt(n.slice(-3).toString(\"hex\"),16)%this.bits_in_filter,o=a>>3,i=1<<(7&a);if(0==(this.bloom_buffer[o]&i))return!1}return!0}},{key:\"filter\",value:function(e,t){var n=this;if(!this.isAvailable())return console.log(\"WARN: Missing bloom filter for CTS 0.9.x wallets\"),void t({error:\"missing_bloom\"});var a=!0;t({initalizing:a}),this.init(function(){try{t({initalizing:a=!1});for(var o=1,i=0;i<e.length;i++){var c=0,l=0,s=e[i],u=s.encrypted_private_keys.length;t({importing:!0,account_name:s.account_name,count:l,total:u});for(var f=s.encrypted_private_keys.length-1;f>=0;f--){if(++l%o==0&&(o=47,t({importing:!0,account_name:s.account_name,count:l,total:u})),!s.public_keys)return void t({error:\"missing_public_keys\"});var p=s.public_keys[f];if(/^CTS/.test(p)&&(p=\"CTS\"+p.substring(3)),!n.inGenesis(p)){for(var m=r.key.addresses(p,\"CTS\"),y=!1,h=0;h<m.length;h++)if(n.inGenesis(m[h])){y=!0;break}y||(delete s.encrypted_private_keys[f],delete s.public_keys[f],c++)}}var _=[],d=[];for(f=s.encrypted_private_keys.length-1;f>=0;f--)s.encrypted_private_keys[f]&&(_.push(s.encrypted_private_keys[f]),d.push(s.public_keys[f]));s.encrypted_private_keys=_,t({importing:!1,account_name:s.account_name,count:l-c,total:u}),s.public_keys=d}t({success:!0})}finally{a&&t({initalizing:a=!1})}})}}]),n}();n.a=l}).call(this,a(120).Buffer)},2286:function(e,t,n){e.exports=n.p+\"bts_genesiskeys_bloom_3cee441.dat\"},2287:function(e,t,n){},2289:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2290),i=n(27),c=n(81),l=n(2035),s=n(3),u=n.n(s),f=n(2306),p=n(2291),m=n(582),y=n(13),h=n.n(y),_=n(5),d=n.n(_),b=n(26),v=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var g=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}return v(e,[{key:\"setBrainkey\",value:function(e){return e}}]),e}(),k=b.a.createActions(g),E=n(10),w=n(93),O=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function C(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var S=function(){function e(){C(this,e)}return O(e,null,[{key:\"getInstance\",value:function(t){var n=e.instances.get(t);n||(n=b.a.createStore(x,\"BrainkeyStore\"),e.instances.set(t,n));var a=t+\" subscribed_instance\";if(!e.instances.get(a)){var r=n.chainStoreUpdate.bind(n);E.ChainStore.subscribe(r),e.instances.set(a,r)}return n}},{key:\"closeInstance\",value:function(t){var n=e.instances.get(t);if(!n)throw new Error(\"unknown instance \"+t);var a=t+\" subscribed_instance\",r=e.instances.get(a);e.instances.delete(a),E.ChainStore.unsubscribe(r),n.clearCache()}}]),e}();S.instances=new Map;var j=S,x=function(e){function t(){C(this,t);var e=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.clearCache(),e.bindListeners({onSetBrainkey:k.setBrainkey}),e._export(\"inSync\",\"chainStoreUpdate\",\"clearCache\"),e}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,w[\"a\"]),O(t,[{key:\"clearCache\",value:function(){this.state={brnkey:\"\",account_ids:h.a.Set()},this.derived_keys=new Array,this.account_ids_by_key=null}},{key:\"onSetBrainkey\",value:function(e){this.clearCache(),this.setState({brnkey:e}),this.deriveKeys(e),this.chainStoreUpdate()}},{key:\"inSync\",value:function(){return this.derived_keys.forEach(function(e){if(P(e))return!1}),!0}},{key:\"chainStoreUpdate\",value:function(){this.derived_keys.length&&this.account_ids_by_key!==E.ChainStore.account_ids_by_key&&(this.account_ids_by_key=E.ChainStore.account_ids_by_key,this.updateAccountIds())}},{key:\"deriveKeys\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.brnkey,t=this.derived_keys.length,n=function(e){var t=e.toPublicKey().toPublicKeyString();return{private_key:e,public_string:t}}(E.key.get_brainPrivateKey(e,t));this.derived_keys.push(n),this.derived_keys.length<10&&this.deriveKeys(e)}},{key:\"updateAccountIds\",value:function(){var e=this,t=h.a.Set().withMutations(function(t){e.derived_keys.forEach(function(e){return function(e){var n=E.ChainStore.getAccountRefsOfKey(e);n&&n.forEach(function(e){t.add(e)})}(e.public_string)})});t.equals(this.state.account_ids)||(this.state.account_ids=t,this.setState({account_ids:t}))}}]),t}();var P=function(e){return void 0===E.ChainStore.getAccountRefsOfKey(e.public_string)},N=n(50),A=n(40),T=n(771),B=n(348),I=n(353),K=n(22),R=n(2307),z=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var W=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.a.Component),z(t,[{key:\"onCardClick\",value:function(e){e.preventDefault();var t=this.props.account.get(\"name\");this.props.history.push(\"/account/\"+t)}},{key:\"render\",value:function(){var e=null,t=null,n=!1;if(this.props.account){e=this.props.account.get(\"name\");var a=this.props.account.get(\"balances\");a&&(t=a.map(function(e){return E.ChainStore.getObject(e).get(\"balance\")?r.a.createElement(\"li\",{key:e},r.a.createElement(B.a,{balance:e})):null}).toArray()),n=K.a.isMyAccount(this.props.account)}return r.a.createElement(\"div\",{className:\"grid-content account-card\",onClick:this.onCardClick.bind(this)},r.a.createElement(\"div\",{className:\"card\"+(n?\" my-account\":\"\")},r.a.createElement(\"h4\",{className:\"text-center\"},e),r.a.createElement(\"div\",{className:\"card-content clearfix\"},r.a.createElement(\"div\",{className:\"float-left\"},r.a.createElement(I.a,{account:e,size:{height:64,width:64}})),r.a.createElement(\"ul\",{className:\"balances\"},t))))}}]),t}();W.propTypes={account:A.a.ChainAccount.isRequired},W=Object(N.a)(W);var M=Object(R.a)(W),D=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function q(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function L(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function U(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var J={listenTo:function(){return[j.getInstance(\"wmc\")]},getProps:function(){return j.getInstance(\"wmc\").getState()}},F=function(e){function t(){return q(this,t),L(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return U(t,a[\"Component\"]),D(t,[{key:\"componentWillUnmount\",value:function(){j.closeInstance(\"wmc\")}},{key:\"render\",value:function(){return r.a.createElement(\"span\",null,r.a.createElement(\"h3\",null,r.a.createElement(u.a,{content:\"wallet.brainkey\"})),r.a.createElement(Y,null,r.a.createElement(H,null)))}}]),t}(),G=F=Object(i.a)(F,J),H=function(e){function t(){return q(this,t),L(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return U(t,a[\"Component\"]),D(t,[{key:\"render\",value:function(){var e=this.props.brnkey.substring(0,10);return r.a.createElement(\"span\",null,r.a.createElement(\"div\",null,r.a.createElement(\"span\",{className:\"\"},e),\"…\"),r.a.createElement(\"p\",null),this.props.account_ids.size?r.a.createElement(X,{accounts:h.a.List(this.props.account_ids.toArray())}):r.a.createElement(\"h5\",null,r.a.createElement(u.a,{content:\"wallet.no_accounts\"})))}}]),t}();H=Object(i.a)(H,J);var X=function(e){function t(){return q(this,t),L(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return U(t,r.a.Component),D(t,[{key:\"render\",value:function(){var e=Object(m.a)(this.props.accounts).filter(function(e){return!!e[1]}).map(function(e){return e[1].get(\"name\")}).sort().map(function(e){return r.a.createElement(M,{key:e,account:e})});return r.a.createElement(\"span\",null,e)}}]),t}();X.propTypes={accounts:A.a.ChainAccountsList.isRequired},X=Object(N.a)(X);var Y=function(e){function t(){q(this,t);var e=L(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={brnkey:\"\",accept:!1},e}return U(t,a[\"Component\"]),D(t,[{key:\"render\",value:function(){if(this.state.accept)return r.a.createElement(\"span\",null,this.props.children);var e=this.state.brnkey&&\"\"!==this.state.brnkey;return r.a.createElement(\"span\",{className:\"grid-container\"},r.a.createElement(\"div\",null,r.a.createElement(T.a,{onChange:this.onBrainkeyChange.bind(this)})),r.a.createElement(\"div\",{className:d()(\"button success\",{disabled:!e}),onClick:this.onAccept.bind(this)},r.a.createElement(u.a,{content:\"wallet.accept\"})))}},{key:\"onBrainkeyChange\",value:function(e){this.setState({brnkey:e})}},{key:\"onAccept\",value:function(){this.setState({accept:!0}),k.setBrainkey(this.state.brnkey)}}]),t}(),Z=n(2052),Q=n(352),V=n(39);n.d(t,\"ExistingAccountOptions\",function(){return oe});var $=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function ee(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function te(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function ne(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var ae={listenTo:function(){return[c.a]},getProps:function(){return{wallet:c.a.getState()}}},re=function(e){function t(){return ee(this,t),te(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return ne(t,a[\"Component\"]),$(t,[{key:\"render\",value:function(){var e=0!=this.props.wallet.wallet_names.count();return r.a.createElement(\"div\",{className:\"grid-container\"},r.a.createElement(\"div\",{className:\"grid-content\"},r.a.createElement(\"div\",{className:\"content-block center-content\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h1\",null,r.a.createElement(u.a,{content:\"account.welcome\",wallet_name:Object(V.l)()})),e?r.a.createElement(\"h3\",null,r.a.createElement(u.a,{content:\"wallet.setup_wallet\"})):r.a.createElement(\"h3\",null,r.a.createElement(u.a,{content:\"wallet.create_wallet_backup\"}))),r.a.createElement(\"div\",{className:\"content-block\"},r.a.createElement(f.a,null,r.a.createElement(p.a,{exact:!0,path:\"/existing-account\",component:Q.b}),r.a.createElement(p.a,{exact:!0,path:\"/existing-account/import-backup\",component:oe}),r.a.createElement(p.a,{exact:!0,path:\"/existing-account/import-keys\",component:Z.a}),r.a.createElement(p.a,{exact:!0,path:\"/existing-account/brainkey\",component:G}),r.a.createElement(p.a,{exact:!0,path:\"/existing-account/balance-claim\",component:l.a})),this.props.children))))}}]),t}();re=Object(i.a)(re,ae);var oe=function(e){function t(){return ee(this,t),te(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return ne(t,a[\"Component\"]),$(t,[{key:\"render\",value:function(){var e=0!=this.props.wallet.wallet_names.count();return r.a.createElement(\"span\",null,e?null:r.a.createElement(\"div\",null,r.a.createElement(o.a,{to:\"existing-account/import-backup\"},r.a.createElement(u.a,{content:\"wallet.import_backup\",wallet_name:Object(V.l)()})),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null),r.a.createElement(o.a,{to:\"existing-account/import-keys\"},r.a.createElement(u.a,{content:\"wallet.import_bts1\"})),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null),r.a.createElement(o.a,{to:\"existing-account/import-keys\"},r.a.createElement(u.a,{content:\"wallet.create_wallet\"})),r.a.createElement(\"br\",null),r.a.createElement(\"hr\",null)),e?r.a.createElement(l.a,null):null,e?r.a.createElement(\"span\",null,r.a.createElement(o.a,{to:\"dashboard\"},r.a.createElement(\"div\",{className:\"button outline\"},r.a.createElement(u.a,{component:\"span\",content:\"header.dashboard\"}))),r.a.createElement(o.a,{to:\"wallet\"},r.a.createElement(\"div\",{className:\"button outline\"},r.a.createElement(u.a,{content:\"settings.wallets\"})))):null)}}]),t}();oe=Object(i.a)(oe,ae);t.default=re}}]);","extractedComments":[]}