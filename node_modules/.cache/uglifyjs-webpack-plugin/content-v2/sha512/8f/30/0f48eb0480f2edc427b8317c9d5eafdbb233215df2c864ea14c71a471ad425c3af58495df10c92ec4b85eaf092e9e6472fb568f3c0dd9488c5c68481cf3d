{"map":"{\"version\":3,\"sources\":[\"/home/citshares/work/UI/bitshares-ui/app/components/Transfer/Transfer.jsx\"],\"names\":[\"Transfer\",\"props\",\"_classCallCheck\",\"this\",\"_this\",\"_possibleConstructorReturn\",\"__proto__\",\"Object\",\"getPrototypeOf\",\"call\",\"state\",\"getInitialState\",\"query\",\"query_string__WEBPACK_IMPORTED_MODULE_21___default\",\"a\",\"parse\",\"location\",\"search\",\"from\",\"from_name\",\"bitsharesjs__WEBPACK_IMPORTED_MODULE_16__\",\"getAccount\",\"to\",\"to_name\",\"amount\",\"asset\",\"asset_id\",\"getAsset\",\"memo\",\"currentAccount\",\"stores_AccountStore__WEBPACK_IMPORTED_MODULE_8__\",\"getState\",\"onTrxIncluded\",\"bind\",\"_updateFee\",\"lodash_es_debounce__WEBPACK_IMPORTED_MODULE_1__\",\"_checkFeeStatus\",\"_checkBalance\",\"react__WEBPACK_IMPORTED_MODULE_2___default\",\"Component\",\"nestedRef\",\"np\",\"ns\",\"current_types\",\"_getAvailableAssets\",\"asset_types\",\"next_asset_types\",\"length\",\"onAmountChanged\",\"fee_asset_id\",\"setState\",\"feeAsset\",\"_this2\",\"from_account\",\"feeStatus\",\"feeAmount\",\"common_MarketClasses__WEBPACK_IMPORTED_MODULE_20__\",\"_state\",\"balanceID\",\"getIn\",\"get\",\"feeBalanceID\",\"balanceError\",\"balanceObject\",\"getObject\",\"feeBalanceObject\",\"hasBalance\",\"common_trxHelper__WEBPACK_IMPORTED_MODULE_18__\",\"_this3\",\"account\",\"arguments\",\"undefined\",\"assets\",\"keys\",\"toJS\",\"sort\",\"common_utils__WEBPACK_IMPORTED_MODULE_10__\",\"sortID\",\"p\",\"forEach\",\"push\",\"accountID\",\"feeID\",\"options\",\"data\",\"type\",\"content\",\"Promise\",\"all\",\"then\",\"status\",\"idx\",\"are_equal_shallow\",\"catch\",\"err\",\"console\",\"error\",\"_this4\",\"fee_asset_types\",\"_ref\",\"fee\",\"hasPoolBalance\",\"should\",\"propose\",\"propose_account\",\"_this5\",\"to_account\",\"_ref2\",\"_ref3\",\"e\",\"target\",\"value\",\"confirm_store_state\",\"included\",\"broadcasted_transaction\",\"stores_TransactionConfirmStore__WEBPACK_IMPORTED_MODULE_12__\",\"unlisten\",\"reset\",\"closed\",\"preventDefault\",\"_this6\",\"_state2\",\"sendAmount\",\"real\",\"precision\",\"actions_AccountActions__WEBPACK_IMPORTED_MODULE_4__\",\"transfer\",\"getAmount\",\"Buffer\",\"resetForm\",\"listen\",\"msg\",\"message\",\"split\",\"log\",\"ref\",\"balance_id\",\"transferAsset\",\"balance\",\"minus\",\"from_error\",\"account_balances\",\"key\",\"splice\",\"indexOf\",\"filter\",\"id\",\"hasFeePoolBalance\",\"_this7\",\"_state3\",\"from_my_account\",\"isMyAccount\",\"passwordAccount\",\"createElement\",\"counterpart__WEBPACK_IMPORTED_MODULE_11___default\",\"translate\",\"onClick\",\"onPropose\",\"_getAvailableAssets5\",\"current_asset_id\",\"style\",\"borderBottom\",\"cursor\",\"_setTotal\",\"react_translate_component__WEBPACK_IMPORTED_MODULE_5___default\",\"component\",\"_Utility_BalanceComponent__WEBPACK_IMPORTED_MODULE_3__\",\"propose_incomplete\",\"amountValue\",\"parseFloat\",\"String\",\"prototype\",\"replace\",\"isAmountValid\",\"lodash_es_isNaN__WEBPACK_IMPORTED_MODULE_0__\",\"isToAccountValid\",\"isSendNotValid\",\"accountsList\",\"immutable__WEBPACK_IMPORTED_MODULE_15___default\",\"Set\",\"add\",\"tabIndex\",\"className\",\"paddingTop\",\"_Modal_SendModal__WEBPACK_IMPORTED_MODULE_22__\",\"refCallback\",\"send_modal\",\"_Utility_TranslateWithLinks__WEBPACK_IMPORTED_MODULE_13__\",\"string\",\"arg\",\"show\",\"paddingBottom\",\"overflow\",\"onSubmit\",\"noValidate\",\"_Account_AccountSelector__WEBPACK_IMPORTED_MODULE_7__\",\"label\",\"accountName\",\"onChange\",\"fromChanged\",\"onAccountChanged\",\"onFromAccountChanged\",\"size\",\"typeahead\",\"toChanged\",\"onToAccountChanged\",\"_Utility_AmountSelector__WEBPACK_IMPORTED_MODULE_9__\",\"display_balance\",\"data-place\",\"data-tip\",\"marginBottom\",\"rows\",\"onMemoChanged\",\"position\",\"name\",\"setNestedRef\",\"disabled\",\"onFeeChanged\",\"classnames__WEBPACK_IMPORTED_MODULE_19___default\",\"_Forms_AccountSelect__WEBPACK_IMPORTED_MODULE_6__\",\"account_names\",\"getMyAccounts\",\"onProposeAccount\",\"_Account_RecentTransactions__WEBPACK_IMPORTED_MODULE_14__\",\"limit\",\"compactView\",\"fullHeight\",\"__webpack_exports__\",\"alt_react__WEBPACK_IMPORTED_MODULE_17__\",\"listenTo\",\"getProps\",\"contactsList\",\"accountContacts\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport BalanceComponent from \\\"../Utility/BalanceComponent\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport AccountSelect from \\\"../Forms/AccountSelect\\\";\\nimport AccountSelector from \\\"../Account/AccountSelector\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport AmountSelector from \\\"../Utility/AmountSelector\\\";\\nimport utils from \\\"common/utils\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport TransactionConfirmStore from \\\"stores/TransactionConfirmStore\\\";\\nimport TranslateWithLinks from \\\"../Utility/TranslateWithLinks\\\";\\nimport {RecentTransactions} from \\\"../Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport {\\n    checkFeeStatusAsync,\\n    checkBalance,\\n    shouldPayFeeWithAssetAsync\\n} from \\\"common/trxHelper\\\";\\nimport {debounce, isNaN} from \\\"lodash-es\\\";\\nimport classnames from \\\"classnames\\\";\\nimport {Asset} from \\\"common/MarketClasses\\\";\\nimport queryString from \\\"query-string\\\";\\nimport SendModal from \\\"../Modal/SendModal\\\";\\n\\nclass Transfer extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        let state = Transfer.getInitialState();\\n        let query = queryString.parse(props.location.search) || {};\\n\\n        if (query.from) {\\n            state.from_name = query.from;\\n            ChainStore.getAccount(query.from);\\n        }\\n        if (query.to) {\\n            state.to_name = query.to;\\n            ChainStore.getAccount(query.to);\\n        }\\n        if (query.amount) state.amount = query.amount;\\n        if (query.asset) {\\n            state.asset_id = query.asset;\\n            state.asset = ChainStore.getAsset(query.asset);\\n        }\\n        if (query.memo) state.memo = query.memo;\\n        let currentAccount = AccountStore.getState().currentAccount;\\n        if (!state.from_name) state.from_name = currentAccount;\\n\\n        this.state = state;\\n        this.onTrxIncluded = this.onTrxIncluded.bind(this);\\n\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n        this._checkFeeStatus = this._checkFeeStatus.bind(this);\\n        this._checkBalance = this._checkBalance.bind(this);\\n    }\\n\\n    static getInitialState() {\\n        return {\\n            from_name: \\\"\\\",\\n            to_name: \\\"\\\",\\n            from_account: null,\\n            to_account: null,\\n            amount: \\\"\\\",\\n            asset_id: null,\\n            asset: null,\\n            memo: \\\"\\\",\\n            error: null,\\n            propose: false,\\n            propose_account: \\\"\\\",\\n            feeAsset: null,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeAmount: new Asset({amount: 0}),\\n            feeStatus: {}\\n        };\\n    }\\n\\n    componentWillMount() {\\n        this.nestedRef = null;\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    shouldComponentUpdate(np, ns) {\\n        let {asset_types: current_types} = this._getAvailableAssets();\\n        let {asset_types: next_asset_types} = this._getAvailableAssets(ns);\\n\\n        if (next_asset_types.length === 1) {\\n            let asset = ChainStore.getAsset(next_asset_types[0]);\\n            if (current_types.length !== 1) {\\n                this.onAmountChanged({amount: ns.amount, asset});\\n            }\\n\\n            if (next_asset_types[0] !== this.state.fee_asset_id) {\\n                if (asset && this.state.fee_asset_id !== next_asset_types[0]) {\\n                    this.setState({\\n                        feeAsset: asset,\\n                        fee_asset_id: next_asset_types[0]\\n                    });\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.currentAccount !== this.state.from_name &&\\n            np.currentAccount !== this.props.currentAccount\\n        ) {\\n            this.setState(\\n                {\\n                    from_name: np.currentAccount,\\n                    from_account: ChainStore.getAccount(np.currentAccount),\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus(\\n                        ChainStore.getAccount(np.currentAccount)\\n                    );\\n                }\\n            );\\n        }\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, amount, from_account, asset} = this.state;\\n        if (!asset || !from_account) return;\\n        const balanceID = from_account.getIn([\\\"balances\\\", asset.get(\\\"id\\\")]);\\n        const feeBalanceID = from_account.getIn([\\n            \\\"balances\\\",\\n            feeAmount.asset_id\\n        ]);\\n        if (!asset || !from_account) return;\\n        if (!balanceID) return this.setState({balanceError: true});\\n        let balanceObject = ChainStore.getObject(balanceID);\\n        let feeBalanceObject = feeBalanceID\\n            ? ChainStore.getObject(feeBalanceID)\\n            : null;\\n        if (!feeBalanceObject || feeBalanceObject.get(\\\"balance\\\") === 0) {\\n            this.setState({fee_asset_id: \\\"1.3.0\\\"}, this._updateFee);\\n        }\\n        if (!balanceObject || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            amount,\\n            asset,\\n            feeAmount,\\n            balanceObject\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n    }\\n\\n    _checkFeeStatus(account = this.state.from_account) {\\n        if (!account || !account.get(\\\"balances\\\")) return;\\n\\n        const assets = Object.keys(account.get(\\\"balances\\\").toJS()).sort(\\n            utils.sortID\\n        );\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content: this.state.memo\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(this.state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account, asset_id} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content: state.memo\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) =>\\n            shouldPayFeeWithAssetAsync(from_account, fee).then(\\n                should =>\\n                    should\\n                        ? this.setState(\\n                              {fee_asset_id: asset_id},\\n                              this._updateFee\\n                          )\\n                        : this.setState({\\n                              feeAmount: fee,\\n                              fee_asset_id: fee.asset_id,\\n                              hasBalance,\\n                              hasPoolBalance,\\n                              error: !hasBalance || !hasPoolBalance\\n                          })\\n            )\\n        );\\n    }\\n\\n    fromChanged(from_name) {\\n        if (!from_name) this.setState({from_account: null});\\n        this.setState({\\n            from_name,\\n            error: null,\\n            propose: false,\\n            propose_account: \\\"\\\"\\n        });\\n    }\\n\\n    toChanged(to_name) {\\n        this.setState({to_name, error: null});\\n    }\\n\\n    onFromAccountChanged(from_account) {\\n        this.setState({from_account, error: null}, () => {\\n            this._updateFee();\\n            this._checkFeeStatus();\\n        });\\n    }\\n\\n    onToAccountChanged(to_account) {\\n        this.setState({to_account, error: null});\\n    }\\n\\n    onAmountChanged({amount, asset}) {\\n        if (!asset) {\\n            return;\\n        }\\n        this.setState(\\n            {amount, asset, asset_id: asset.get(\\\"id\\\"), error: null},\\n            this._checkBalance\\n        );\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {feeAsset: asset, fee_asset_id: asset.get(\\\"id\\\"), error: null},\\n            this._updateFee\\n        );\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onTrxIncluded(confirm_store_state) {\\n        if (\\n            confirm_store_state.included &&\\n            confirm_store_state.broadcasted_transaction\\n        ) {\\n            // this.setState(Transfer.getInitialState());\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        } else if (confirm_store_state.closed) {\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        }\\n    }\\n\\n    onPropose(propose, e) {\\n        e.preventDefault();\\n        this.setState({propose, propose_account: null});\\n    }\\n\\n    onProposeAccount(propose_account) {\\n        this.setState({propose_account});\\n    }\\n\\n    resetForm() {\\n        this.setState({memo: \\\"\\\", to_name: \\\"\\\", amount: \\\"\\\"});\\n    }\\n\\n    onSubmit(e) {\\n        e.preventDefault();\\n        this.setState({error: null});\\n        const {asset, amount} = this.state;\\n        const sendAmount = new Asset({\\n            real: amount,\\n            asset_id: asset.get(\\\"id\\\"),\\n            precision: asset.get(\\\"precision\\\")\\n        });\\n\\n        AccountActions.transfer(\\n            this.state.from_account.get(\\\"id\\\"),\\n            this.state.to_account.get(\\\"id\\\"),\\n            sendAmount.getAmount(),\\n            asset.get(\\\"id\\\"),\\n            this.state.memo\\n                ? new Buffer(this.state.memo, \\\"utf-8\\\")\\n                : this.state.memo,\\n            this.state.propose ? this.state.propose_account : null,\\n            this.state.feeAsset ? this.state.feeAsset.get(\\\"id\\\") : \\\"1.3.0\\\"\\n        )\\n            .then(() => {\\n                this.resetForm.call(this);\\n                TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n                TransactionConfirmStore.listen(this.onTrxIncluded);\\n            })\\n            .catch(e => {\\n                let msg = e.message\\n                    ? e.message.split(\\\"\\\\n\\\")[1] || e.message\\n                    : null;\\n                console.log(\\\"error: \\\", e, msg);\\n                this.setState({error: msg});\\n            });\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    _setTotal(asset_id, balance_id) {\\n        const {feeAmount} = this.state;\\n        let balanceObject = ChainStore.getObject(balance_id);\\n        let transferAsset = ChainStore.getObject(asset_id);\\n\\n        let balance = new Asset({\\n            amount: balanceObject.get(\\\"balance\\\"),\\n            asset_id: transferAsset.get(\\\"id\\\"),\\n            precision: transferAsset.get(\\\"precision\\\")\\n        });\\n\\n        if (balanceObject) {\\n            if (feeAmount.asset_id === balance.asset_id) {\\n                balance.minus(feeAmount);\\n            }\\n            this.setState(\\n                {amount: balance.getAmount({real: true})},\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {feeStatus} = this.state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        const {from_account, from_error} = state;\\n        let asset_types = [],\\n            fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\") && !from_error)) {\\n            return {asset_types, fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                asset_types.splice(asset_types.indexOf(key), 1);\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {asset_types, fee_asset_types};\\n    }\\n\\n    render() {\\n        let from_error = null;\\n        let {\\n            propose,\\n            from_account,\\n            to_account,\\n            asset,\\n            asset_id,\\n            propose_account,\\n            feeAmount,\\n            amount,\\n            error,\\n            to_name,\\n            from_name,\\n            memo,\\n            feeAsset,\\n            fee_asset_id,\\n            balanceError\\n        } = this.state;\\n        let from_my_account =\\n            AccountStore.isMyAccount(from_account) ||\\n            from_name === this.props.passwordAccount;\\n\\n        if (from_account && !from_my_account && !propose) {\\n            from_error = (\\n                <span>\\n                    {counterpart.translate(\\\"account.errors.not_yours\\\")}\\n                    &nbsp;(\\n                    <a onClick={this.onPropose.bind(this, true)}>\\n                        {counterpart.translate(\\\"propose\\\")}\\n                    </a>\\n                    )\\n                </span>\\n            );\\n        }\\n\\n        let {asset_types, fee_asset_types} = this._getAvailableAssets();\\n        let balance = null;\\n\\n        // Estimate fee\\n        let fee = this.state.feeAmount.getAmount({real: true});\\n        if (from_account && from_account.get(\\\"balances\\\") && !from_error) {\\n            let account_balances = from_account.get(\\\"balances\\\").toJS();\\n            if (asset_types.length === 1)\\n                asset = ChainStore.getAsset(asset_types[0]);\\n            if (asset_types.length > 0) {\\n                let current_asset_id = asset ? asset.get(\\\"id\\\") : asset_types[0];\\n                let feeID = feeAsset ? feeAsset.get(\\\"id\\\") : \\\"1.3.0\\\";\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                        onClick={this._setTotal.bind(\\n                            this,\\n                            current_asset_id,\\n                            account_balances[current_asset_id],\\n                            fee,\\n                            feeID\\n                        )}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        :{\\\" \\\"}\\n                        <BalanceComponent\\n                            balance={account_balances[current_asset_id]}\\n                        />\\n                    </span>\\n                );\\n            } else {\\n                balance = \\\"No funds\\\";\\n            }\\n        }\\n\\n        let propose_incomplete = propose && !propose_account;\\n        const amountValue = parseFloat(\\n            String.prototype.replace.call(amount, /,/g, \\\"\\\")\\n        );\\n        const isAmountValid = amountValue && !isNaN(amountValue);\\n        const isToAccountValid =\\n            to_account && to_account.get(\\\"name\\\") === to_name;\\n        const isSendNotValid =\\n            !from_account ||\\n            !isToAccountValid ||\\n            !isAmountValid ||\\n            !asset ||\\n            from_error ||\\n            propose_incomplete ||\\n            balanceError;\\n        let accountsList = Immutable.Set();\\n        accountsList = accountsList.add(from_account);\\n        let tabIndex = 1;\\n\\n        return (\\n            <div className=\\\"grid-block vertical\\\">\\n                <div\\n                    className=\\\"grid-block shrink vertical medium-horizontal\\\"\\n                    style={{paddingTop: \\\"2rem\\\"}}\\n                >\\n                    <div className=\\\"grid-content small-12 medium-12 large-10 large-offset-1 full-width-content\\\">\\n                        <SendModal\\n                            id=\\\"send_modal_header\\\"\\n                            refCallback={e => {\\n                                if (e) this.send_modal = e;\\n                            }}\\n                            from_name={this.props.currentAccount}\\n                        />\\n                        <TranslateWithLinks\\n                            string=\\\"transfer.phase_out_warning\\\"\\n                            keys={[\\n                                {\\n                                    arg: \\\"modal_link\\\",\\n                                    value: (\\n                                        <a\\n                                            onClick={() => {\\n                                                if (this.send_modal)\\n                                                    this.send_modal.show();\\n                                            }}\\n                                        >\\n                                            <Translate content=\\\"header.payments\\\" />\\n                                        </a>\\n                                    )\\n                                }\\n                            ]}\\n                        />\\n                    </div>\\n                </div>\\n                <div\\n                    className=\\\"grid-block shrink vertical medium-horizontal\\\"\\n                    style={{paddingTop: \\\"1rem\\\"}}\\n                >\\n                    <form\\n                        style={{paddingBottom: 20, overflow: \\\"visible\\\"}}\\n                        className=\\\"grid-content small-12 medium-6 large-5 large-offset-1 full-width-content\\\"\\n                        onSubmit={this.onSubmit.bind(this)}\\n                        noValidate\\n                    >\\n                        <Translate content=\\\"transfer.header\\\" component=\\\"h2\\\" />\\n                        {/*  F R O M  */}\\n                        <div className=\\\"content-block\\\">\\n                            <AccountSelector\\n                                label=\\\"transfer.from\\\"\\n                                ref=\\\"from\\\"\\n                                accountName={from_name}\\n                                onChange={this.fromChanged.bind(this)}\\n                                onAccountChanged={this.onFromAccountChanged.bind(\\n                                    this\\n                                )}\\n                                account={from_account}\\n                                size={60}\\n                                error={from_error}\\n                                typeahead={true}\\n                                tabIndex={tabIndex++}\\n                            />\\n                        </div>\\n                        {/*  T O  */}\\n                        <div className=\\\"content-block\\\">\\n                            <AccountSelector\\n                                label=\\\"transfer.to\\\"\\n                                ref=\\\"to\\\"\\n                                accountName={to_name}\\n                                onChange={this.toChanged.bind(this)}\\n                                onAccountChanged={this.onToAccountChanged.bind(\\n                                    this\\n                                )}\\n                                account={to_account}\\n                                size={60}\\n                                tabIndex={tabIndex++}\\n                                typeahead={true}\\n                            />\\n                        </div>\\n                        {/*  A M O U N T   */}\\n                        <div className=\\\"content-block transfer-input\\\">\\n                            <AmountSelector\\n                                label=\\\"transfer.amount\\\"\\n                                amount={amount}\\n                                onChange={this.onAmountChanged.bind(this)}\\n                                asset={\\n                                    asset_types.length > 0 && asset\\n                                        ? asset.get(\\\"id\\\")\\n                                        : asset_id\\n                                            ? asset_id\\n                                            : asset_types[0]\\n                                }\\n                                assets={asset_types}\\n                                display_balance={balance}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {this.state.balanceError ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                        {/*  M E M O  */}\\n                        <div className=\\\"content-block transfer-input\\\">\\n                            {memo && memo.length ? (\\n                                <label className=\\\"right-label\\\">\\n                                    {memo.length}\\n                                </label>\\n                            ) : null}\\n                            <Translate\\n                                className=\\\"left-label tooltip\\\"\\n                                component=\\\"label\\\"\\n                                content=\\\"transfer.memo\\\"\\n                                data-place=\\\"top\\\"\\n                                data-tip={counterpart.translate(\\n                                    \\\"tooltip.memo_tip\\\"\\n                                )}\\n                            />\\n                            <textarea\\n                                style={{marginBottom: 0}}\\n                                rows=\\\"3\\\"\\n                                value={memo}\\n                                tabIndex={tabIndex++}\\n                                onChange={this.onMemoChanged.bind(this)}\\n                            />\\n                            {/* warning */}\\n                            {this.state.propose ? (\\n                                <div\\n                                    className=\\\"error-area\\\"\\n                                    style={{position: \\\"absolute\\\"}}\\n                                >\\n                                    <Translate\\n                                        content=\\\"transfer.warn_name_unable_read_memo\\\"\\n                                        name={this.state.from_name}\\n                                    />\\n                                </div>\\n                            ) : null}\\n                        </div>\\n\\n                        {/*  F E E   */}\\n                        <div\\n                            className={\\n                                \\\"content-block transfer-input fee-row\\\" +\\n                                (this.state.propose ? \\\" proposal\\\" : \\\"\\\")\\n                            }\\n                        >\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={fee}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={\\n                                    fee_asset_types.length && feeAmount\\n                                        ? feeAmount.asset_id\\n                                        : fee_asset_types.length === 1\\n                                            ? fee_asset_types[0]\\n                                            : fee_asset_id\\n                                                ? fee_asset_id\\n                                                : fee_asset_types[0]\\n                                }\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                                error={\\n                                    this.state.hasPoolBalance === false\\n                                        ? \\\"transfer.errors.insufficient\\\"\\n                                        : null\\n                                }\\n                            />\\n                            {propose ? (\\n                                <button\\n                                    className={classnames(\\n                                        \\\"button float-right no-margin\\\",\\n                                        {disabled: isSendNotValid}\\n                                    )}\\n                                    type=\\\"submit\\\"\\n                                    value=\\\"Submit\\\"\\n                                    tabIndex={tabIndex++}\\n                                >\\n                                    <Translate\\n                                        component=\\\"span\\\"\\n                                        content=\\\"propose\\\"\\n                                    />\\n                                </button>\\n                            ) : (\\n                                <button\\n                                    className={classnames(\\n                                        \\\"button float-right no-margin\\\",\\n                                        {disabled: isSendNotValid}\\n                                    )}\\n                                    type=\\\"submit\\\"\\n                                    value=\\\"Submit\\\"\\n                                    tabIndex={tabIndex++}\\n                                >\\n                                    <Translate\\n                                        component=\\\"span\\\"\\n                                        content=\\\"transfer.send\\\"\\n                                    />\\n                                </button>\\n                            )}\\n                        </div>\\n\\n                        {/* P R O P O S E   F R O M\\n                            Having some proposed transaction logic here (prior to the transaction confirmation)\\n                            allows adjusting of the memo to / from parameters.\\n                        */}\\n                        {propose ? (\\n                            <div className=\\\"full-width-content form-group transfer-input\\\">\\n                                <label className=\\\"left-label\\\">\\n                                    <Translate content=\\\"account.propose_from\\\" />\\n                                </label>\\n                                <AccountSelect\\n                                    account_names={AccountStore.getMyAccounts()}\\n                                    onChange={this.onProposeAccount.bind(this)}\\n                                    tabIndex={tabIndex++}\\n                                />\\n                            </div>\\n                        ) : null}\\n\\n                        {/*  S E N D  B U T T O N  */}\\n                        {error ? (\\n                            <div className=\\\"content-block has-error\\\">\\n                                {error}\\n                            </div>\\n                        ) : null}\\n                        <div>\\n                            {propose ? (\\n                                <span>\\n                                    <button\\n                                        className=\\\" button\\\"\\n                                        onClick={this.onPropose.bind(\\n                                            this,\\n                                            false\\n                                        )}\\n                                        tabIndex={tabIndex++}\\n                                    >\\n                                        <Translate\\n                                            component=\\\"span\\\"\\n                                            content=\\\"cancel\\\"\\n                                        />\\n                                    </button>\\n                                </span>\\n                            ) : null}\\n                        </div>\\n\\n                        {/* TODO: show remaining balance */}\\n                    </form>\\n                    <div className=\\\"grid-content small-12 medium-6 large-4 large-offset-1 right-column\\\">\\n                        <div className=\\\"grid-content no-padding\\\">\\n                            <RecentTransactions\\n                                accountsList={accountsList}\\n                                limit={25}\\n                                compactView={true}\\n                                filter=\\\"transfer\\\"\\n                                fullHeight={true}\\n                            />\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"grid-content medium-6 large-4\\\" />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(\\n    Transfer,\\n    {\\n        listenTo() {\\n            return [AccountStore];\\n        },\\n        getProps() {\\n            return {\\n                currentAccount: AccountStore.getState().currentAccount,\\n                passwordAccount: AccountStore.getState().passwordAccount,\\n                contactsList: AccountStore.getState().accountContacts\\n            };\\n        }\\n    }\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{2292:function(e,t,a){\"use strict\";a.r(t),function(e){var n=a(790),o=a(317),s=a(0),r=a.n(s),c=a(348),i=a(37),l=a(3),u=a.n(l),m=a(169),d=a(259),f=a(22),h=a(316),p=a(16),_=a(11),g=a.n(_),b=a(74),v=a(36),y=a(1998),k=a(13),S=a.n(k),A=a(10),E=a(27),C=a(144),w=a(5),N=a.n(w),I=a(31),O=a(2174),F=a.n(O),x=a(579),j=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var B=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e)),n=a.getInitialState(),s=F.a.parse(e.location.search)||{};s.from&&(n.from_name=s.from,A.ChainStore.getAccount(s.from)),s.to&&(n.to_name=s.to,A.ChainStore.getAccount(s.to)),s.amount&&(n.amount=s.amount),s.asset&&(n.asset_id=s.asset,n.asset=A.ChainStore.getAsset(s.asset)),s.memo&&(n.memo=s.memo);var r=f.a.getState().currentAccount;return n.from_name||(n.from_name=r),t.state=n,t.onTrxIncluded=t.onTrxIncluded.bind(t),t._updateFee=Object(o.a)(t._updateFee.bind(t),250),t._checkFeeStatus=t._checkFeeStatus.bind(t),t._checkBalance=t._checkBalance.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,r.a.Component),j(a,[{key:\"componentWillMount\",value:function(){this.nestedRef=null,this._updateFee(),this._checkFeeStatus()}},{key:\"shouldComponentUpdate\",value:function(e,t){var a=this._getAvailableAssets().asset_types,n=this._getAvailableAssets(t).asset_types;if(1===n.length){var o=A.ChainStore.getAsset(n[0]);1!==a.length&&this.onAmountChanged({amount:t.amount,asset:o}),n[0]!==this.state.fee_asset_id&&o&&this.state.fee_asset_id!==n[0]&&this.setState({feeAsset:o,fee_asset_id:n[0]})}return!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.currentAccount!==this.state.from_name&&e.currentAccount!==this.props.currentAccount&&this.setState({from_name:e.currentAccount,from_account:A.ChainStore.getAccount(e.currentAccount),feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new I.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus(A.ChainStore.getAccount(e.currentAccount))})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.amount,n=e.from_account,o=e.asset;if(o&&n){var s=n.getIn([\"balances\",o.get(\"id\")]),r=n.getIn([\"balances\",t.asset_id]);if(o&&n){if(!s)return this.setState({balanceError:!0});var c=A.ChainStore.getObject(s),i=r?A.ChainStore.getObject(r):null;if(i&&0!==i.get(\"balance\")||this.setState({fee_asset_id:\"1.3.0\"},this._updateFee),c&&t){var l=Object(C.a)(a,o,t,c);null!==l&&this.setState({balanceError:!l})}}}}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.from_account;if(t&&t.get(\"balances\")){var a=Object.keys(t.get(\"balances\").toJS()).sort(p.a.sortID),n={},o=[];a.forEach(function(a){o.push(Object(C.b)({accountID:t.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.state.memo}}))}),Promise.all(o).then(function(t){a.forEach(function(e,a){n[e]=t[a]}),p.a.are_equal_shallow(e.state.feeStatus,n)||e.setState({feeStatus:n}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,o=t.asset_id,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(C.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:t.memo}}).then(function(t){var a=t.fee,s=t.hasBalance,r=t.hasPoolBalance;return Object(C.d)(n,a).then(function(t){return t?e.setState({fee_asset_id:o},e._updateFee):e.setState({feeAmount:a,fee_asset_id:a.asset_id,hasBalance:s,hasPoolBalance:r,error:!s||!r})})})}},{key:\"fromChanged\",value:function(e){e||this.setState({from_account:null}),this.setState({from_name:e,error:null,propose:!1,propose_account:\"\"})}},{key:\"toChanged\",value:function(e){this.setState({to_name:e,error:null})}},{key:\"onFromAccountChanged\",value:function(e){var t=this;this.setState({from_account:e,error:null},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"onToAccountChanged\",value:function(e){this.setState({to_account:e,error:null})}},{key:\"onAmountChanged\",value:function(e){var t=e.amount,a=e.asset;a&&this.setState({amount:t,asset:a,asset_id:a.get(\"id\"),error:null},this._checkBalance)}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({feeAsset:t,fee_asset_id:t.get(\"id\"),error:null},this._updateFee)}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onTrxIncluded\",value:function(e){e.included&&e.broadcasted_transaction?(b.a.unlisten(this.onTrxIncluded),b.a.reset()):e.closed&&(b.a.unlisten(this.onTrxIncluded),b.a.reset())}},{key:\"onPropose\",value:function(e,t){t.preventDefault(),this.setState({propose:e,propose_account:null})}},{key:\"onProposeAccount\",value:function(e){this.setState({propose_account:e})}},{key:\"resetForm\",value:function(){this.setState({memo:\"\",to_name:\"\",amount:\"\"})}},{key:\"onSubmit\",value:function(t){var a=this;t.preventDefault(),this.setState({error:null});var n=this.state,o=n.asset,s=n.amount,r=new I.a({real:s,asset_id:o.get(\"id\"),precision:o.get(\"precision\")});i.a.transfer(this.state.from_account.get(\"id\"),this.state.to_account.get(\"id\"),r.getAmount(),o.get(\"id\"),this.state.memo?new e(this.state.memo,\"utf-8\"):this.state.memo,this.state.propose?this.state.propose_account:null,this.state.feeAsset?this.state.feeAsset.get(\"id\"):\"1.3.0\").then(function(){a.resetForm.call(a),b.a.unlisten(a.onTrxIncluded),b.a.listen(a.onTrxIncluded)}).catch(function(e){var t=e.message?e.message.split(\"\\n\")[1]||e.message:null;console.log(\"error: \",e,t),a.setState({error:t})})}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"_setTotal\",value:function(e,t){var a=this.state.feeAmount,n=A.ChainStore.getObject(t),o=A.ChainStore.getObject(e),s=new I.a({amount:n.get(\"balance\"),asset_id:o.get(\"id\"),precision:o.get(\"precision\")});n&&(a.asset_id===s.asset_id&&s.minus(a),this.setState({amount:s.getAmount({real:!0})},this._checkBalance))}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=this.state.feeStatus;var a=e.from_account,n=e.from_error,o=[],s=[];if(!a||!a.get(\"balances\")||n)return{asset_types:o,fee_asset_types:s};var r=e.from_account.get(\"balances\").toJS();for(var c in o=Object.keys(r).sort(p.a.sortID),s=Object.keys(r).sort(p.a.sortID),r){var i=A.ChainStore.getObject(r[c]);i&&0===i.get(\"balance\")&&(o.splice(o.indexOf(c),1),-1!==s.indexOf(c)&&s.splice(s.indexOf(c),1))}return{asset_types:o,fee_asset_types:s=s.filter(function(e){return function(e){return void 0===t[e]||t[e]&&t[e].hasPoolBalance}(e)&&function(e){return void 0===t[e]||t[e]&&t[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this,t=null,a=this.state,o=a.propose,s=a.from_account,i=a.to_account,l=a.asset,p=a.asset_id,_=a.propose_account,b=a.feeAmount,k=a.amount,E=a.error,C=a.to_name,w=a.from_name,I=a.memo,O=a.feeAsset,F=a.fee_asset_id,j=a.balanceError,B=f.a.isMyAccount(s)||w===this.props.passwordAccount;!s||B||o||(t=r.a.createElement(\"span\",null,g.a.translate(\"account.errors.not_yours\"),\" (\",r.a.createElement(\"a\",{onClick:this.onPropose.bind(this,!0)},g.a.translate(\"propose\")),\")\"));var T=this._getAvailableAssets(),P=T.asset_types,D=T.fee_asset_types,R=null,J=this.state.feeAmount.getAmount({real:!0});if(s&&s.get(\"balances\")&&!t){var M=s.get(\"balances\").toJS();if(1===P.length&&(l=A.ChainStore.getAsset(P[0])),P.length>0){var z=l?l.get(\"id\"):P[0],L=O?O.get(\"id\"):\"1.3.0\";R=r.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"},onClick:this._setTotal.bind(this,z,M[z],J,L)},r.a.createElement(u.a,{component:\"span\",content:\"transfer.available\"}),\":\",\" \",r.a.createElement(c.a,{balance:M[z]}))}else R=\"No funds\"}var V=o&&!_,W=parseFloat(String.prototype.replace.call(k,/,/g,\"\")),q=W&&!Object(n.a)(W),H=i&&i.get(\"name\")===C,U=!s||!H||!q||!l||t||V||j,G=S.a.Set();G=G.add(s);var K=1;return r.a.createElement(\"div\",{className:\"grid-block vertical\"},r.a.createElement(\"div\",{className:\"grid-block shrink vertical medium-horizontal\",style:{paddingTop:\"2rem\"}},r.a.createElement(\"div\",{className:\"grid-content small-12 medium-12 large-10 large-offset-1 full-width-content\"},r.a.createElement(x.a,{id:\"send_modal_header\",refCallback:function(t){t&&(e.send_modal=t)},from_name:this.props.currentAccount}),r.a.createElement(v.a,{string:\"transfer.phase_out_warning\",keys:[{arg:\"modal_link\",value:r.a.createElement(\"a\",{onClick:function(){e.send_modal&&e.send_modal.show()}},r.a.createElement(u.a,{content:\"header.payments\"}))}]}))),r.a.createElement(\"div\",{className:\"grid-block shrink vertical medium-horizontal\",style:{paddingTop:\"1rem\"}},r.a.createElement(\"form\",{style:{paddingBottom:20,overflow:\"visible\"},className:\"grid-content small-12 medium-6 large-5 large-offset-1 full-width-content\",onSubmit:this.onSubmit.bind(this),noValidate:!0},r.a.createElement(u.a,{content:\"transfer.header\",component:\"h2\"}),r.a.createElement(\"div\",{className:\"content-block\"},r.a.createElement(d.a,{label:\"transfer.from\",ref:\"from\",accountName:w,onChange:this.fromChanged.bind(this),onAccountChanged:this.onFromAccountChanged.bind(this),account:s,size:60,error:t,typeahead:!0,tabIndex:K++})),r.a.createElement(\"div\",{className:\"content-block\"},r.a.createElement(d.a,{label:\"transfer.to\",ref:\"to\",accountName:C,onChange:this.toChanged.bind(this),onAccountChanged:this.onToAccountChanged.bind(this),account:i,size:60,tabIndex:K++,typeahead:!0})),r.a.createElement(\"div\",{className:\"content-block transfer-input\"},r.a.createElement(h.a,{label:\"transfer.amount\",amount:k,onChange:this.onAmountChanged.bind(this),asset:P.length>0&&l?l.get(\"id\"):p||P[0],assets:P,display_balance:R,tabIndex:K++}),this.state.balanceError?r.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},r.a.createElement(u.a,{content:\"transfer.errors.insufficient\"})):null),r.a.createElement(\"div\",{className:\"content-block transfer-input\"},I&&I.length?r.a.createElement(\"label\",{className:\"right-label\"},I.length):null,r.a.createElement(u.a,{className:\"left-label tooltip\",component:\"label\",content:\"transfer.memo\",\"data-place\":\"top\",\"data-tip\":g.a.translate(\"tooltip.memo_tip\")}),r.a.createElement(\"textarea\",{style:{marginBottom:0},rows:\"3\",value:I,tabIndex:K++,onChange:this.onMemoChanged.bind(this)}),this.state.propose?r.a.createElement(\"div\",{className:\"error-area\",style:{position:\"absolute\"}},r.a.createElement(u.a,{content:\"transfer.warn_name_unable_read_memo\",name:this.state.from_name})):null),r.a.createElement(\"div\",{className:\"content-block transfer-input fee-row\"+(this.state.propose?\" proposal\":\"\")},r.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:J,onChange:this.onFeeChanged.bind(this),asset:D.length&&b?b.asset_id:1===D.length?D[0]:F||D[0],assets:D,tabIndex:K++,error:!1===this.state.hasPoolBalance?\"transfer.errors.insufficient\":null}),o?r.a.createElement(\"button\",{className:N()(\"button float-right no-margin\",{disabled:U}),type:\"submit\",value:\"Submit\",tabIndex:K++},r.a.createElement(u.a,{component:\"span\",content:\"propose\"})):r.a.createElement(\"button\",{className:N()(\"button float-right no-margin\",{disabled:U}),type:\"submit\",value:\"Submit\",tabIndex:K++},r.a.createElement(u.a,{component:\"span\",content:\"transfer.send\"}))),o?r.a.createElement(\"div\",{className:\"full-width-content form-group transfer-input\"},r.a.createElement(\"label\",{className:\"left-label\"},r.a.createElement(u.a,{content:\"account.propose_from\"})),r.a.createElement(m.a,{account_names:f.a.getMyAccounts(),onChange:this.onProposeAccount.bind(this),tabIndex:K++})):null,E?r.a.createElement(\"div\",{className:\"content-block has-error\"},E):null,r.a.createElement(\"div\",null,o?r.a.createElement(\"span\",null,r.a.createElement(\"button\",{className:\" button\",onClick:this.onPropose.bind(this,!1),tabIndex:K++},r.a.createElement(u.a,{component:\"span\",content:\"cancel\"}))):null)),r.a.createElement(\"div\",{className:\"grid-content small-12 medium-6 large-4 large-offset-1 right-column\"},r.a.createElement(\"div\",{className:\"grid-content no-padding\"},r.a.createElement(y.a,{accountsList:G,limit:25,compactView:!0,filter:\"transfer\",fullHeight:!0}))),r.a.createElement(\"div\",{className:\"grid-content medium-6 large-4\"})))}}],[{key:\"getInitialState\",value:function(){return{from_name:\"\",to_name:\"\",from_account:null,to_account:null,amount:\"\",asset_id:null,asset:null,memo:\"\",error:null,propose:!1,propose_account:\"\",feeAsset:null,fee_asset_id:\"1.3.0\",feeAmount:new I.a({amount:0}),feeStatus:{}}}}]),a}();t.default=Object(E.a)(B,{listenTo:function(){return[f.a]},getProps:function(){return{currentAccount:f.a.getState().currentAccount,passwordAccount:f.a.getState().passwordAccount,contactsList:f.a.getState().accountContacts}}})}.call(this,a(120).Buffer)}}]);","extractedComments":[]}