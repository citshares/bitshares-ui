{"map":"{\"version\":3,\"sources\":[\"/home/citshares/work/UI/bitshares-ui/app/components/Utility/Tabs.jsx\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/src/parser.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/src/utils.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/src/api/nodeApi.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/src/config.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/src/api/getAccountHistory.js\",\"/home/citshares/work/UI/bitshares-ui/node_modules/bitshares-report/es/index.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/Dashboard/DashboardList.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Dashboard/DashboardAccountsOnly.jsx\"],\"names\":[\"Tab\",\"react__WEBPACK_IMPORTED_MODULE_0___default\",\"a\",\"Component\",\"_props\",\"this\",\"props\",\"isActive\",\"index\",\"changeTab\",\"title\",\"className\",\"updatedTab\",\"disabled\",\"subText\",\"c\",\"classnames__WEBPACK_IMPORTED_MODULE_2___default\",\"is-active\",\"indexOf\",\"counterpart__WEBPACK_IMPORTED_MODULE_6___default\",\"translate\",\"collapsed\",\"trim\",\"createElement\",\"value\",\"data-is-link-to\",\"isLinkTo\",\"Fragment\",\"onClick\",\"bind\",\"propTypes\",\"prop_types__WEBPACK_IMPORTED_MODULE_1___default\",\"func\",\"bool\",\"isRequired\",\"number\",\"string\",\"oneOfType\",\"object\",\"defaultProps\",\"Tabs\",\"_classCallCheck\",\"_this2\",\"_possibleConstructorReturn\",\"__proto__\",\"Object\",\"getPrototypeOf\",\"call\",\"state\",\"activeTab\",\"setting\",\"viewSettings\",\"get\",\"defaultActiveTab\",\"width\",\"window\",\"innerWidth\",\"_setDimensions\",\"addEventListener\",\"capture\",\"passive\",\"nextProps\",\"nextSetting\",\"setState\",\"removeEventListener\",\"history\",\"push\",\"actions_SettingsActions__WEBPACK_IMPORTED_MODULE_4__\",\"changeViewSetting\",\"_defineProperty\",\"onChangeTab\",\"_this3\",\"_props2\",\"children\",\"contentClass\",\"tabsClass\",\"style\",\"segmented\",\"collapseTabs\",\"Children\",\"count\",\"activeContent\",\"tabs\",\"map\",\"child\",\"cloneElement\",\"_changeTab\",\"filter\",\"actionButtons\",\"paddingLeft\",\"paddingRight\",\"minWidth\",\"marginTop\",\"marginBottom\",\"onChange\",\"e\",\"ind\",\"parseInt\",\"target\",\"attributes\",\"active\",\"alt_react__WEBPACK_IMPORTED_MODULE_3__\",\"listenTo\",\"stores_SettingsStore__WEBPACK_IMPORTED_MODULE_5__\",\"getProps\",\"getState\",\"react_router_dom__WEBPACK_IMPORTED_MODULE_7__\",\"moment\",\"__webpack_require__\",\"utils\",\"assetMovements\",\"runningBalance\",\"movementTypes\",\"trackMovements\",\"asset\",\"amount\",\"type\",\"timestamp\",\"Date\",\"deposit\",\"withdrawal\",\"addOutputEntry\",\"output\",\"buy\",\"sell\",\"fee\",\"date\",\"opType\",\"comment\",\"tradeGroup\",\"currency\",\"printAmount\",\"module\",\"exports\",\"parseData\",\"recordData\",\"accountId\",\"accountName\",\"out\",\"typeCounts\",\"incrementType\",\"_iterator\",\"keys\",\"_isArray\",\"Array\",\"isArray\",\"_i\",\"Symbol\",\"iterator\",\"_ref\",\"length\",\"next\",\"done\",\"_recordData$trx_id\",\"data\",\"vestingFunds\",\"parseCurrency\",\"owner\",\"total_claimed\",\"funds\",\"to\",\"from\",\"soldFunds\",\"pays\",\"boughtFunds\",\"receives\",\"issuedFunds\",\"asset_to_issue\",\"issuer\",\"issue_to_account\",\"registrar\",\"asset_id\",\"console\",\"log\",\"filterEntries\",\"entries\",\"FILTER_TYPE\",\"FILTER_DATE\",\"entriesKeys\",\"i\",\"trx_id\",\"_entries$trx_id\",\"getTime\",\"groupEntries\",\"previous_fill\",\"recordKeys\",\"_entries$trx_id2\",\"t1\",\"marketId\",\"previous\",\"t0\",\"isSame\",\"ChainStore\",\"getAsset\",\"precisionRatio\",\"p\",\"Error\",\"Math\",\"pow\",\"precisionToRatio\",\"toJS\",\"precision\",\"symbol\",\"toFixed\",\"getIndex\",\"str\",\"pieces\",\"split\",\"config\",\"bts\",\"_require\",\"ChainTypes\",\"FetchChain\",\"operations\",\"ops\",\"blockData\",\"assetData\",\"getBlockTime\",\"block\",\"Promise\",\"resolve\",\"reject\",\"Apis\",\"instance\",\"db_api\",\"exec\",\"then\",\"result\",\"catch\",\"getAssetData\",\"_FetchChain2\",\"undefined\",\"replace\",\"err\",\"connect\",\"apiNode\",\"init_promise\",\"res\",\"init\",\"error\",\"disconnect\",\"close\",\"getUser\",\"name\",\"_FetchChain\",\"account\",\"balances\",\"call_orders\",\"assets\",\"id\",\"resolveAssets\",\"list\",\"promises\",\"forEach\",\"record\",\"op\",\"entry\",\"all\",\"resolveBlockTimes\",\"block_time\",\"block_num\",\"getBlock\",\"useES\",\"esNode\",\"botPaymentAccounts\",\"fetchClient\",\"isBrowser\",\"fetch\",\"getAccountHistory\",\"account_id\",\"stop\",\"limit\",\"start\",\"history_api\",\"getAccountHistoryES\",\"arguments\",\"json\",\"r\",\"account_history\",\"operation_id\",\"JSON\",\"parse\",\"operation_history\",\"operation_result\",\"block_data\",\"_require2\",\"_require3\",\"DashboardList_DashboardList\",\"DashboardList\",\"_this\",\"inverseSort\",\"sortBy\",\"dashboardFilter\",\"react_default\",\"nextState\",\"are_equal_shallow\",\"accounts\",\"isContactsList\",\"showMyAccounts\",\"showIgnored\",\"locked\",\"passwordAccount\",\"starredAccounts\",\"isStarred\",\"preventDefault\",\"AccountActions\",\"removeStarAccount\",\"addStarAccount\",\"tab\",\"SettingsActions\",\"overviewTab\",\"toLowerCase\",\"field\",\"inverse\",\"dashboardSort\",\"dashboardSortInverse\",\"addAccountContact\",\"removeAccountContact\",\"isHiddenAccountsList\",\"_state\",\"balanceList\",\"immutable_default\",\"List\",\"isMyAccount\",\"AccountStore\",\"sort\",\"b\",\"aName\",\"bName\",\"aStarred\",\"has\",\"bStarred\",\"sortText\",\"DashboardList_starSort\",\"collateral\",\"debt\",\"openOrders\",\"clear\",\"isLTM\",\"orderID\",\"key\",\"order\",\"es\",\"getObject\",\"orderAsset\",\"getIn\",\"callID\",\"position\",\"collateralAsset\",\"debtAsset\",\"account_balances\",\"balance\",\"balanceAmount\",\"starClass\",\"_onStar\",\"Icon\",\"_onAddContact\",\"_onRemoveContact\",\"textAlign\",\"_goAccount\",\"TotalBalanceValue\",\"noTip\",\"includedAccounts\",\"_renderList\",\"hiddenAccounts\",\"ignoredAccounts\",\"filterText\",\"counterpart_default\",\"hasLocalWallet\",\"WalletDb\",\"getWallet\",\"compact\",\"paddingTop\",\"placeholder\",\"maxWidth\",\"display\",\"_onFilter\",\"_createAccount\",\"marginLeft\",\"react_translate_component_default\",\"content\",\"onToggleIgnored\",\"float\",\"marginRight\",\"fontSize\",\"_setSort\",\"backgroundColor\",\"colSpan\",\"ChainAccountsList\",\"BindToChainState\",\"DashboardList_AccountsListWrapper\",\"withRouter\",\"Dashboard_DashboardList\",\"src\",\"SettingsStore\",\"WalletUnlockStore\",\"DashboardAccountsOnly_AccountsContainer\",\"AltContainer\",\"stores\",\"MarketsStore\",\"inject\",\"contacts\",\"accountContacts\",\"myActiveAccounts\",\"myHiddenAccounts\",\"accountsReady\",\"accountsLoaded\",\"refsLoaded\",\"currentEntry\",\"DashboardAccountsOnly_Accounts\",\"Accounts\",\"DashboardAccountsOnly_classCallCheck\",\"DashboardAccountsOnly_possibleConstructorReturn\",\"dashboardEntry\",\"add\",\"names\",\"toArray\",\"ignored\",\"accountCount\",\"size\",\"LoadingIndicator\",\"LoginSelector\",\"ref\",\"_onToggleIgnored\",\"RecentTransactions\",\"accountsList\",\"compactView\",\"fullHeight\",\"showFilters\",\"dashboard\",\"__webpack_exports__\",\"_extends\",\"onlyAccounts\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport cnames from \\\"classnames\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport {withRouter} from \\\"react-router-dom\\\";\\n\\n/**\\n *  Renders a tab layout, handling switching and optionally persists the currently open tab using the SettingsStore\\n *\\n *  props:\\n *     setting: unique name to be used to remember the active tab of this tabs layout,\\n *     tabsClass: optional classes for the tabs container div\\n *     contentClass: optional classes for the content container div\\n *\\n *  Usage:\\n *\\n *  <Tabs setting=\\\"mySetting\\\">\\n *      <Tab title=\\\"locale.string.title1\\\">Tab 1 content</Tab>\\n *      <Tab title=\\\"locale.string.title2\\\">Tab 2 content</Tab>\\n *  </Tabs>\\n *\\n */\\n\\nclass Tab extends React.Component {\\n    static propTypes = {\\n        changeTab: PropTypes.func,\\n        isActive: PropTypes.bool.isRequired,\\n        index: PropTypes.number.isRequired,\\n        className: PropTypes.string,\\n        isLinkTo: PropTypes.string,\\n        subText: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\\n    };\\n\\n    static defaultProps = {\\n        isActive: false,\\n        index: 0,\\n        className: \\\"\\\",\\n        isLinkTo: \\\"\\\",\\n        subText: null\\n    };\\n\\n    render() {\\n        let {\\n            isActive,\\n            index,\\n            changeTab,\\n            title,\\n            className,\\n            updatedTab,\\n            disabled,\\n            subText\\n        } = this.props;\\n        let c = cnames({\\\"is-active\\\": isActive}, className);\\n\\n        if (typeof title === \\\"string\\\" && title.indexOf(\\\".\\\") > 0) {\\n            title = counterpart.translate(title);\\n        }\\n\\n        // dont string concetenate subText directly within the rendering, subText can be an object without toString\\n        // implementation, but valid DOM (meaning, don't do subText + \\\"someString\\\"\\n\\n        if (this.props.collapsed) {\\n            // if subText is empty, dont render it, we dont want empty brackets added\\n            if (typeof subText === \\\"string\\\") {\\n                subText = subText.trim();\\n            }\\n            return (\\n                <option\\n                    value={index}\\n                    data-is-link-to={this.props.isLinkTo}\\n                    className=\\\"tab-title\\\"\\n                >\\n                    <React.Fragment>\\n                        {title}\\n                        {updatedTab ? \\\"*\\\" : \\\"\\\"}\\n                        {subText && \\\" (\\\"}\\n                        {subText && subText}\\n                        {subText && \\\")\\\"}\\n                    </React.Fragment>\\n                </option>\\n            );\\n        }\\n        return (\\n            <li\\n                className={c}\\n                onClick={\\n                    !disabled\\n                        ? changeTab.bind(this, index, this.props.isLinkTo)\\n                        : null\\n                }\\n            >\\n                <a>\\n                    <span className=\\\"tab-title\\\">\\n                        {title}\\n                        {updatedTab ? \\\"*\\\" : \\\"\\\"}\\n                    </span>\\n                    {subText && <div className=\\\"tab-subtext\\\">{subText}</div>}\\n                </a>\\n            </li>\\n        );\\n    }\\n}\\n\\nclass Tabs extends React.Component {\\n    static propTypes = {\\n        setting: PropTypes.string,\\n        defaultActiveTab: PropTypes.number,\\n        segmented: PropTypes.bool\\n    };\\n\\n    static defaultProps = {\\n        active: 0,\\n        defaultActiveTab: 0,\\n        segmented: true,\\n        contentClass: \\\"\\\",\\n        style: {}\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            activeTab: props.setting\\n                ? props.viewSettings.get(props.setting, props.defaultActiveTab)\\n                : props.defaultActiveTab,\\n            width: window.innerWidth\\n        };\\n\\n        this._setDimensions = this._setDimensions.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this._setDimensions();\\n        window.addEventListener(\\\"resize\\\", this._setDimensions, {\\n            capture: false,\\n            passive: true\\n        });\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        let nextSetting = nextProps.viewSettings.get(nextProps.setting);\\n        if (nextSetting !== this.props.viewSettings.get(this.props.setting)) {\\n            this.setState({\\n                activeTab: nextSetting\\n            });\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        window.removeEventListener(\\\"resize\\\", this._setDimensions);\\n    }\\n\\n    _setDimensions() {\\n        let width = window.innerWidth;\\n\\n        if (width !== this.state.width) {\\n            this.setState({width});\\n        }\\n    }\\n\\n    _changeTab(value, isLinkTo) {\\n        if (value === this.state.activeTab) return;\\n        // Persist current tab if desired\\n\\n        if (isLinkTo !== \\\"\\\") {\\n            this.props.history.push(isLinkTo);\\n        }\\n\\n        if (this.props.setting) {\\n            SettingsActions.changeViewSetting({\\n                [this.props.setting]: value\\n            });\\n        }\\n        this.setState({activeTab: value});\\n\\n        if (this.props.onChangeTab) this.props.onChangeTab(value);\\n    }\\n\\n    render() {\\n        let {children, contentClass, tabsClass, style, segmented} = this.props;\\n        const collapseTabs =\\n            this.state.width < 900 && React.Children.count(children) > 2;\\n\\n        let activeContent = null;\\n\\n        let tabs = React.Children.map(children, (child, index) => {\\n            if (!child) {\\n                return null;\\n            }\\n            if (collapseTabs && child.props.disabled) return null;\\n            let isActive = index === this.state.activeTab;\\n            if (isActive) {\\n                activeContent = child.props.children;\\n            }\\n\\n            return React.cloneElement(child, {\\n                collapsed: collapseTabs,\\n                isActive,\\n                changeTab: this._changeTab.bind(this),\\n                index: index\\n            });\\n        }).filter(a => a !== null);\\n\\n        if (!activeContent) {\\n            activeContent = tabs[0].props.children;\\n        }\\n\\n        return (\\n            <div\\n                className={cnames(\\n                    !!this.props.actionButtons ? \\\"with-buttons\\\" : \\\"\\\",\\n                    this.props.className\\n                )}\\n            >\\n                <div className=\\\"service-selector\\\">\\n                    <ul\\n                        style={style}\\n                        className={cnames(\\\"button-group no-margin\\\", tabsClass, {\\n                            segmented\\n                        })}\\n                    >\\n                        {collapseTabs ? (\\n                            <li\\n                                style={{\\n                                    paddingLeft: 10,\\n                                    paddingRight: 10,\\n                                    minWidth: \\\"15rem\\\"\\n                                }}\\n                            >\\n                                <select\\n                                    value={this.state.activeTab}\\n                                    style={{marginTop: 10, marginBottom: 10}}\\n                                    className=\\\"bts-select\\\"\\n                                    onChange={e => {\\n                                        let ind = parseInt(e.target.value, 10);\\n                                        this._changeTab(\\n                                            ind,\\n                                            e.target[ind].attributes[\\n                                                \\\"data-is-link-to\\\"\\n                                            ].value\\n                                        );\\n                                    }}\\n                                >\\n                                    {tabs}\\n                                </select>\\n                            </li>\\n                        ) : (\\n                            tabs\\n                        )}\\n                        {this.props.actionButtons ? (\\n                            <li className=\\\"tabs-action-buttons\\\">\\n                                {this.props.actionButtons}\\n                            </li>\\n                        ) : null}\\n                    </ul>\\n                </div>\\n                <div className={cnames(\\\"tab-content\\\", contentClass)}>\\n                    {activeContent}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nTabs = connect(\\n    Tabs,\\n    {\\n        listenTo() {\\n            return [SettingsStore];\\n        },\\n        getProps() {\\n            return {viewSettings: SettingsStore.getState().viewSettings};\\n        }\\n    }\\n);\\n\\nTabs = withRouter(Tabs);\\n\\nexport {Tabs, Tab};\\n\",\"var moment = require(\\\"moment\\\");\\nvar utils = require(\\\"./utils\\\");\\n\\nvar assetMovements = {};\\nvar runningBalance = {};\\nvar movementTypes = {};\\nvar accountBalances = {};\\nvar transfers = {};\\nvar fills = {};\\n\\nfunction getFinalBalance(asset) {\\n    var sum = 0;\\n    if (!assetMovements[asset]) return 0;\\n    assetMovements[asset].forEach(function(movement) {\\n        sum += movement;\\n    });\\n    return sum;\\n}\\n\\nfunction trackMovements(asset, amount, type, timestamp) {\\n    if (!assetMovements[asset]) assetMovements[asset] = [];\\n    if (!runningBalance[asset]) runningBalance[asset] = [];\\n\\n    assetMovements[asset].push(amount);\\n    runningBalance[asset].push([type, amount, new Date(timestamp)]);\\n\\n    if (!movementTypes[asset]) movementTypes[asset] = {};\\n    if (!movementTypes[asset][type])\\n        movementTypes[asset][type] = {deposit: [], withdrawal: []};\\n\\n    movementTypes[asset][type][amount > 0 ? \\\"deposit\\\" : \\\"withdrawal\\\"].push(\\n        amount\\n    );\\n}\\n\\nfunction addOutputEntry(\\n    output,\\n    type,\\n    buy,\\n    sell,\\n    fee,\\n    date,\\n    opType,\\n    comment,\\n    tradeGroup\\n) {\\n    if (!buy) buy = {amount: \\\"\\\", currency: \\\"\\\"};\\n    if (!sell) sell = {amount: \\\"\\\", currency: \\\"\\\"};\\n    if (!fee) fee = {amount: \\\"\\\", currency: \\\"\\\"};\\n\\n    if (buy.amount) trackMovements(buy.currency, buy.amount, opType, date);\\n    if (sell.amount) trackMovements(sell.currency, -sell.amount, opType, date);\\n    if (fee.amount) trackMovements(fee.currency, -fee.amount, opType, date);\\n\\n    output.push([\\n        type,\\n        utils.printAmount(buy),\\n        buy.currency,\\n        utils.printAmount(sell),\\n        sell.currency,\\n        utils.printAmount(fee),\\n        fee.currency,\\n        \\\"BTS-DEX\\\",\\n        tradeGroup || \\\"\\\",\\n        comment || \\\"\\\",\\n        date\\n    ]);\\n\\n    return output;\\n}\\n\\nfunction filterEntries(entries, FILTER_TYPE, FILTER_DATE) {\\n    if (!FILTER_TYPE && !FILTER_DATE) return entries;\\n    var entriesKeys = Object.keys(entries);\\n    for (var i = entriesKeys.length - 1; i >= 0; i--) {\\n        var trx_id = entriesKeys[i];\\n        var _entries$trx_id = entries[trx_id],\\n            timestamp = _entries$trx_id.timestamp,\\n            type = _entries$trx_id.type,\\n            data = _entries$trx_id.data;\\n\\n        if (!!FILTER_TYPE) {\\n            if (type !== FILTER_TYPE) {\\n                delete entries[trx_id];\\n                continue;\\n            }\\n        }\\n\\n        if (!!FILTER_DATE) {\\n            if (new Date(timestamp).getTime() < FILTER_DATE) {\\n                delete entries[trx_id];\\n                continue;\\n            }\\n        }\\n    }\\n    console.log(\\n        \\\"Removed \\\" +\\n            (entriesKeys.length - Object.keys(entries).length) +\\n            \\\" entries by filtering\\\"\\n    );\\n    return entries;\\n}\\n\\nfunction groupEntries(entries) {\\n    var previous_fill = {};\\n    var recordKeys = Object.keys(entries);\\n    for (var i = recordKeys.length - 1; i >= 0; i--) {\\n        var trx_id = recordKeys[i];\\n        var _entries$trx_id2 = entries[trx_id],\\n            timestamp = _entries$trx_id2.timestamp,\\n            type = _entries$trx_id2.type,\\n            data = _entries$trx_id2.data;\\n\\n        switch (type) {\\n            case \\\"fill_order\\\":\\n                var t1 = moment(timestamp);\\n                var marketId =\\n                    data.receives.asset_id + \\\"_\\\" + data.pays.asset_id;\\n                var previous = previous_fill[marketId];\\n                var t0 = !!previous ? moment(previous.timestamp) : null;\\n\\n                if (\\n                    !!previous &&\\n                    t1.isSame(t0, \\\"day\\\") &&\\n                    previous.data.pays.asset_id === data.pays.asset_id &&\\n                    previous.data.receives.asset_id === data.receives.asset_id\\n                ) {\\n                    data.pays.amount =\\n                        parseInt(data.pays.amount, 10) +\\n                        parseInt(previous.data.pays.amount, 10);\\n                    data.receives.amount =\\n                        parseInt(data.receives.amount, 10) +\\n                        parseInt(previous.data.receives.amount, 10);\\n                    data.fee.amount =\\n                        parseInt(data.fee.amount, 10) +\\n                        parseInt(previous.data.fee.amount, 10);\\n                    entries[trx_id].data = data;\\n                    delete entries[previous.trx_id];\\n                }\\n                previous_fill[marketId] = {\\n                    data: data,\\n                    timestamp: timestamp,\\n                    trx_id: trx_id\\n                };\\n                break;\\n\\n            default:\\n                break;\\n        }\\n    }\\n    console.log(\\n        \\\"Removed \\\" +\\n            (recordKeys.length - Object.keys(entries).length) +\\n            \\\" fill_order entries by grouping\\\"\\n    );\\n    return entries;\\n}\\n\\nfunction parseData(recordData, accountId, accountName) {\\n    var out = [];\\n    out.push([\\n        \\\"Type\\\",\\n        \\\"Buy Amount\\\",\\n        \\\"Buy Currency\\\",\\n        \\\"Sell Amount\\\",\\n        \\\"Sell Currency\\\",\\n        \\\"Fee Amount\\\",\\n        \\\"Fee Currency\\\",\\n        \\\"Exchange\\\",\\n        \\\"Trade Group\\\",\\n        \\\"Comment\\\",\\n        \\\"Date\\\"\\n    ]);\\n\\n    var typeCounts = {};\\n\\n    function incrementType(type) {\\n        if (!typeCounts[type]) typeCounts[type] = 0;\\n        typeCounts[type]++;\\n    }\\n\\n    for (\\n        var _iterator = Object.keys(recordData),\\n            _isArray = Array.isArray(_iterator),\\n            _i = 0,\\n            _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();\\n        ;\\n\\n    ) {\\n        var _ref;\\n\\n        if (_isArray) {\\n            if (_i >= _iterator.length) break;\\n            _ref = _iterator[_i++];\\n        } else {\\n            _i = _iterator.next();\\n            if (_i.done) break;\\n            _ref = _i.value;\\n        }\\n\\n        var trx_id = _ref;\\n        var _recordData$trx_id = recordData[trx_id],\\n            timestamp = _recordData$trx_id.timestamp,\\n            type = _recordData$trx_id.type,\\n            data = _recordData$trx_id.data;\\n\\n        var fee = null;\\n\\n        switch (type) {\\n            case \\\"vesting_balance_withdraw\\\":\\n                var vestingFunds = utils.parseCurrency(data.amount);\\n                fee = utils.parseCurrency(data.fee);\\n\\n                out = addOutputEntry(\\n                    out,\\n                    data.owner === \\\"1.2.30665\\\" && vestingFunds.amount > 10000\\n                        ? \\\"Income\\\"\\n                        : \\\"Deposit\\\",\\n                    vestingFunds,\\n                    null,\\n                    fee, // dev.bitsharesblocks\\n                    timestamp,\\n                    type,\\n                    accountName + \\\" : Vesting balance withdraw\\\"\\n                );\\n                incrementType(type);\\n                break;\\n\\n            case \\\"balance_claim\\\":\\n                var balanceClaimFunds = utils.parseCurrency(data.total_claimed);\\n\\n                out = addOutputEntry(\\n                    out,\\n                    \\\"Deposit\\\",\\n                    balanceClaimFunds,\\n                    null,\\n                    null,\\n                    timestamp,\\n                    type,\\n                    accountName + \\\" : Balance claim\\\"\\n                );\\n\\n                incrementType(type);\\n                break;\\n\\n            case \\\"transfer\\\":\\n                var funds = utils.parseCurrency(data.amount);\\n                fee = utils.parseCurrency(data.fee);\\n                if (data.to == accountId) {\\n                    // Funds coming in to the account\\n                    out = addOutputEntry(\\n                        out,\\n                        data.to === \\\"1.2.391938\\\" && data.from === \\\"1.2.381086\\\"\\n                            ? \\\"Income\\\"\\n                            : \\\"Deposit\\\",\\n                        funds,\\n                        null,\\n                        null, // pay.svk and bitshares-ui\\n                        timestamp,\\n                        type,\\n                        accountName + \\\" : From \\\" + data.from\\n                    );\\n                } else {\\n                    out = addOutputEntry(\\n                        out,\\n                        \\\"Withdrawal\\\",\\n                        null,\\n                        funds,\\n                        fee,\\n                        timestamp,\\n                        type,\\n                        accountName + \\\": To \\\" + data.to\\n                    );\\n                }\\n                incrementType(type);\\n                break;\\n\\n            case \\\"fill_order\\\":\\n                var soldFunds = utils.parseCurrency(data.pays);\\n                var boughtFunds = utils.parseCurrency(data.receives);\\n                fee = utils.parseCurrency(data.fee);\\n                if (fee.currency !== \\\"BTS\\\") {\\n                    if (boughtFunds.currency === fee.currency) {\\n                        boughtFunds.amount -= fee.amount;\\n                        fee.amount = 0;\\n                    } else if (soldFunds.currency === fee.currency) {\\n                        soldFunds.amount -= fee.amount;\\n                        fee.amount = 0;\\n                    }\\n                }\\n\\n                out = addOutputEntry(\\n                    out,\\n                    \\\"Trade\\\",\\n                    boughtFunds,\\n                    soldFunds,\\n                    fee,\\n                    timestamp,\\n                    type\\n                );\\n\\n                incrementType(type);\\n                break;\\n\\n            case \\\"asset_issue\\\": {\\n                var issuedFunds = utils.parseCurrency(data.asset_to_issue);\\n                fee =\\n                    data.issuer === accountId\\n                        ? utils.parseCurrency(data.fee)\\n                        : null;\\n                if (data.issue_to_account === accountId) {\\n                    out = addOutputEntry(\\n                        out,\\n                        \\\"Deposit\\\",\\n                        issuedFunds,\\n                        null,\\n                        fee,\\n                        timestamp,\\n                        type,\\n                        accountName + \\\" : Issued to account\\\"\\n                    );\\n                }\\n                incrementType(type);\\n                break;\\n            }\\n\\n            case \\\"account_update\\\":\\n            case \\\"proposal_create\\\":\\n            case \\\"proposal_update\\\":\\n            case \\\"account_whitelist\\\":\\n            case \\\"worker_create\\\":\\n            case \\\"limit_order_create\\\":\\n            case \\\"limit_order_cancel\\\":\\n            case \\\"call_order_update\\\":\\n                fee = utils.parseCurrency(data.fee);\\n                if (fee.amount > 0) {\\n                    out = addOutputEntry(\\n                        out,\\n                        \\\"Withdrawal\\\",\\n                        null,\\n                        fee,\\n                        null,\\n                        timestamp,\\n                        type,\\n                        type + \\\" fee\\\"\\n                    );\\n                    incrementType(type);\\n                }\\n                break;\\n\\n            case \\\"account_create\\\":\\n                if (data.registrar === accountId) {\\n                    fee = utils.parseCurrency(data.fee);\\n                    out = addOutputEntry(\\n                        out,\\n                        \\\"Withdrawal\\\",\\n                        null,\\n                        fee,\\n                        null,\\n                        timestamp,\\n                        type,\\n                        type + \\\" fee\\\"\\n                    );\\n                    incrementType(type);\\n                }\\n                break;\\n\\n            case \\\"asset_fund_fee_pool\\\": {\\n                fee = utils.parseCurrency(data.fee);\\n                var fundFunds = utils.parseCurrency({\\n                    amount: data.amount,\\n                    asset_id: \\\"1.3.0\\\"\\n                });\\n\\n                out = addOutputEntry(\\n                    out,\\n                    \\\"Withdrawal\\\",\\n                    null,\\n                    fundFunds,\\n                    fee,\\n                    timestamp,\\n                    type,\\n                    \\\"\\\" + type\\n                );\\n\\n                incrementType(type);\\n                break;\\n            }\\n\\n            default: {\\n                console.log(\\\"Unhandled type:\\\", type, data);\\n            }\\n        }\\n    }\\n    return out;\\n}\\n\\nmodule.exports = {\\n    parseData: parseData,\\n    filterEntries: filterEntries,\\n    groupEntries: groupEntries\\n};\\n\",\"var _require = require(\\\"bitsharesjs\\\"),\\n    ChainStore = _require.ChainStore;\\n\\nfunction precisionToRatio(p) {\\n    if (typeof p !== \\\"number\\\") throw new Error(\\\"Input must be a number\\\");\\n    return Math.pow(10, p);\\n}\\n\\nfunction parseCurrency(amount) {\\n    var asset = ChainStore.getAsset(amount.asset_id);\\n    if (asset) asset = asset.toJS();\\n    else {\\n        asset = {precision: 5};\\n    }\\n    var precisionRatio = precisionToRatio(asset.precision);\\n\\n    var fullAmount = amount.amount / precisionRatio;\\n    return {\\n        amount: fullAmount,\\n        currency: asset.symbol,\\n        asset_id: amount.asset_id\\n    };\\n}\\n\\nfunction printAmount(amount) {\\n    if (!amount.amount || !amount.currency) return \\\"\\\";\\n    var asset = ChainStore.getAsset(amount.asset_id);\\n    if (asset) asset = asset.toJS();\\n    else {\\n        asset = {precision: 5};\\n    }\\n\\n    return amount.amount.toFixed(asset.precision);\\n}\\n\\nfunction getIndex(str) {\\n    var pieces = str.split(\\\".\\\");\\n    return parseInt(pieces[2], 10);\\n}\\n\\nmodule.exports = {\\n    parseCurrency: parseCurrency,\\n    printAmount: printAmount,\\n    getIndex: getIndex\\n};\\n\",\"var config = require(\\\"../config\\\");\\nvar bts = require(\\\"bitsharesjs-ws\\\");\\n\\nvar _require = require(\\\"bitsharesjs\\\"),\\n    ChainTypes = _require.ChainTypes,\\n    ChainStore = _require.ChainStore,\\n    FetchChain = _require.FetchChain;\\n\\nvar operations = ChainTypes.operations;\\n\\nvar ops = Object.keys(operations);\\n\\nvar blockData = {};\\nvar assetData = {};\\n\\nfunction connect() {\\n    return new Promise(function(resolve) {\\n        bts.Apis.instance(config.apiNode, true)\\n            .init_promise.then(function(res) {\\n                ChainStore.init(false).then(function() {\\n                    resolve(res);\\n                });\\n            })\\n            .catch(function(err) {\\n                console.error(\\\"Error connection to node:\\\", err);\\n            });\\n    });\\n}\\n\\nfunction disconnect() {\\n    bts.Apis.instance().close();\\n}\\n\\nfunction getUser(name) {\\n    return new Promise(function(resolve, reject) {\\n        var _FetchChain;\\n\\n        FetchChain(\\n            \\\"getAccount\\\",\\n            name,\\n            undefined,\\n            ((_FetchChain = {}), (_FetchChain[name] = false), _FetchChain)\\n        )\\n            .then(function(result) {\\n                var account = result.toJS();\\n                if (!account.balances) account.balances = {};\\n                if (!account.call_orders) account.call_orders = [];\\n                var assets = Object.keys(account.balances);\\n\\n                // account.call_orders.forEach(c => {\\n                //     let balanceIndex = account.balances.findIndex(b => {\\n                //         return b.asset_type === c.call_price.base.asset_id;\\n                //     });\\n                //     if(balanceIndex !== -1) {\\n                //         let newBalance = parseInt(account.balances[balanceIndex].balance, 10) +\\n                //         parseInt(c.collateral, 10);\\n                //         account.balances[balanceIndex].balance = newBalance;\\n                //     } else {\\n                //         assets.push(c.call_price.base.asset_id);\\n                //         account.balances.push({\\n                //             balance: c.collateral,\\n                //             asset_type: c.call_price.base.asset_id\\n                //         });\\n                //     }\\n                // });\\n\\n                resolve({\\n                    accountId: account.id,\\n                    assets: assets,\\n                    balances: account.balances\\n                });\\n            })\\n            .catch(reject);\\n    });\\n}\\n\\nfunction getBlockTime(block) {\\n    return new Promise(function(resolve, reject) {\\n        if (blockData[block]) return resolve(blockData[block]);\\n\\n        bts.Apis.instance()\\n            .db_api()\\n            .exec(\\\"get_block\\\", [block])\\n            .then(function(result) {\\n                blockData[block] = new Date(result.timestamp + \\\"Z\\\");\\n                resolve(blockData[block]);\\n            })\\n            .catch(reject);\\n    });\\n}\\n\\nfunction getAssetData(asset) {\\n    return new Promise(function(resolve, reject) {\\n        var _FetchChain2;\\n\\n        if (assetData[asset]) return resolve(assetData[asset]);\\n\\n        FetchChain(\\n            \\\"getObject\\\",\\n            asset,\\n            undefined,\\n            ((_FetchChain2 = {}), (_FetchChain2[asset] = false), _FetchChain2)\\n        )\\n            .then(function(result) {\\n                var a = result.toJS();\\n                assetData[asset] = {\\n                    symbol: a.symbol.replace(\\n                        /OPEN\\\\.|BRIDGE\\\\.|RUDEX\\\\.|GDEX\\\\.|BLOCK\\\\./,\\n                        \\\"\\\"\\n                    ),\\n                    precision: a.precision\\n                };\\n                resolve(assetData[asset]);\\n            })\\n            .catch(function(err) {\\n                reject();\\n            });\\n    });\\n}\\n\\nfunction resolveBlockTimes(operations) {\\n    return new Promise(function(resolve, reject) {\\n        var promises = operations.map(function(op) {\\n            if (op.block_time)\\n                blockData[op.block_num] = new Date(op.block_time);\\n            return getBlockTime(op.block_num);\\n        });\\n        Promise.all(promises)\\n            .then(resolve)\\n            .catch(reject);\\n    });\\n}\\n\\nfunction resolveAssets(operations, list) {\\n    return new Promise(function(resolve, reject) {\\n        var promises = [];\\n        var assets = {};\\n        if (operations) {\\n            operations.forEach(function(record) {\\n                var type = ops[record.op[0]];\\n                switch (type) {\\n                    case \\\"transfer\\\": {\\n                        // console.log(\\\"transfer record.op:\\\", record.op);\\n                        assets[record.op[1].amount.asset_id] = true;\\n                        assets[record.op[1].fee.asset_id] = true;\\n                        break;\\n                    }\\n                    case \\\"fill_order\\\": {\\n                        assets[record.op[1].pays.asset_id] = true;\\n                        assets[record.op[1].receives.asset_id] = true;\\n                        assets[record.op[1].fee.asset_id] = true;\\n                        break;\\n                    }\\n                    case \\\"asset_issue\\\": {\\n                        assets[record.op[1].asset_to_issue.asset_id] = true;\\n                        assets[record.op[1].fee.asset_id] = true;\\n                        break;\\n                    }\\n                    default: {\\n                        break;\\n                    }\\n                }\\n            });\\n        }\\n\\n        if (list) {\\n            list.forEach(function(entry) {\\n                assets[entry] = true;\\n            });\\n        }\\n\\n        Object.keys(assets).forEach(function(asset_id) {\\n            if (!assetData[asset_id] && !!asset_id) {\\n                promises.push(getAssetData(asset_id));\\n            }\\n        });\\n        Promise.all(promises)\\n            .then(resolve)\\n            .catch(reject);\\n    });\\n}\\n\\nfunction getAsset(id) {\\n    return assetData[id];\\n}\\n\\nfunction getBlock(block_num) {\\n    return blockData[block_num];\\n}\\n\\nmodule.exports = {\\n    connect: connect,\\n    disconnect: disconnect,\\n    getUser: getUser,\\n    getBlockTime: getBlockTime,\\n    getAssetData: getAssetData,\\n    resolveAssets: resolveAssets,\\n    resolveBlockTimes: resolveBlockTimes,\\n    getAsset: getAsset,\\n    getBlock: getBlock\\n};\\n\",\"module.exports = {\\n    apiNode: \\\"wss://eu.nodes.bitshares.ws\\\", // wss://eu.nodes.bitshares.ws is an alternative\\n    useES: true, // use elastic search\\n    esNode: \\\"https://eswrapper.bitshares.eu\\\",\\n    botPaymentAccounts: []\\n};\\n\",\"var bts = require(\\\"bitsharesjs-ws\\\");\\nvar fetchClient = void 0;\\n\\nmodule.exports = function(isBrowser) {\\n    if (isBrowser) fetchClient = fetch;\\n    else {\\n        fetchClient = require(\\\"node-fetch\\\");\\n    }\\n\\n    function getAccountHistoryES(account_id, limit, start) {\\n        var esNode =\\n            arguments.length > 3 && arguments[3] !== undefined\\n                ? arguments[3]\\n                : \\\"https://eswrapper.bitshares.eu\\\";\\n\\n        console.log(\\n            \\\"query\\\",\\n            esNode +\\n                \\\"/get_account_history?account_id=\\\" +\\n                account_id +\\n                \\\"&from_=\\\" +\\n                start +\\n                \\\"&size=\\\" +\\n                limit +\\n                \\\"&sort_by=block_data.block_time&type=data&agg_field=operation_type\\\"\\n        );\\n        return new Promise(function(resolve, reject) {\\n            fetchClient(\\n                esNode +\\n                    \\\"/get_account_history?account_id=\\\" +\\n                    account_id +\\n                    \\\"&from_=\\\" +\\n                    start +\\n                    \\\"&size=\\\" +\\n                    limit +\\n                    \\\"&sort_by=block_data.block_time&type=data&agg_field=operation_type\\\"\\n            )\\n                .then(function(res) {\\n                    return res.json();\\n                })\\n                .then(function(result) {\\n                    var ops = result.map(function(r) {\\n                        return {\\n                            id: r.account_history.operation_id,\\n                            op: JSON.parse(r.operation_history.op),\\n                            result: JSON.parse(\\n                                r.operation_history.operation_result\\n                            ),\\n                            block_num: r.block_data.block_num,\\n                            block_time: r.block_data.block_time + \\\"Z\\\"\\n                        };\\n                    });\\n                    resolve(ops);\\n                })\\n                .catch(function() {\\n                    resolve([]);\\n                });\\n        });\\n    }\\n\\n    function getAccountHistory(account_id, stop, limit, start) {\\n        return new Promise(function(resolve, reject) {\\n            bts.Apis.instance()\\n                .history_api()\\n                .exec(\\\"get_account_history\\\", [account_id, stop, limit, start])\\n                .then(function(operations) {\\n                    resolve(operations);\\n                })\\n                .catch(reject);\\n        });\\n    }\\n\\n    return {\\n        getAccountHistory: getAccountHistory,\\n        getAccountHistoryES: getAccountHistoryES\\n    };\\n};\\n\",\"var _require = require(\\\"./src/parser\\\"),\\n    groupEntries = _require.groupEntries,\\n    parseData = _require.parseData;\\n\\nvar _require2 = require(\\\"./src/api/nodeApi\\\"),\\n    resolveBlockTimes = _require2.resolveBlockTimes,\\n    resolveAssets = _require2.resolveAssets;\\n\\nvar _require3 = require(\\\"./src/api/getAccountHistory\\\")(true),\\n    getAccountHistoryES = _require3.getAccountHistoryES,\\n    getAccountHistory = _require3.getAccountHistory;\\n\\nmodule.exports = {\\n    groupEntries: groupEntries,\\n    parseData: parseData,\\n    getAccountHistoryES: getAccountHistoryES,\\n    getAccountHistory: getAccountHistory,\\n    resolveBlockTimes: resolveBlockTimes,\\n    resolveAssets: resolveAssets\\n};\\n\",\"import React from \\\"react\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport utils from \\\"common/utils\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport WalletUnlockStore from \\\"stores/WalletUnlockStore\\\";\\nimport ChainTypes from \\\"../Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"../Utility/BindToChainState\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport Icon from \\\"../Icon/Icon\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport TotalBalanceValue from \\\"../Utility/TotalBalanceValue\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport WalletDb from \\\"stores/WalletDb\\\";\\nimport {withRouter} from \\\"react-router-dom\\\";\\n\\nconst starSort = function(a, b, inverse, starredAccounts) {\\n    let aName = a.get(\\\"name\\\");\\n    let bName = b.get(\\\"name\\\");\\n    let aStarred = starredAccounts.has(aName);\\n    let bStarred = starredAccounts.has(bName);\\n\\n    if (aStarred && !bStarred) {\\n        return inverse ? -1 : 1;\\n    } else if (bStarred && !aStarred) {\\n        return inverse ? 1 : -1;\\n    } else {\\n        if (aName > bName) {\\n            return inverse ? 1 : -1;\\n        } else if (aName < bName) {\\n            return inverse ? -1 : 1;\\n        } else {\\n            return utils.sortText(aName, bName, !inverse);\\n        }\\n    }\\n};\\n\\nclass DashboardList extends React.Component {\\n    static propTypes = {\\n        accounts: ChainTypes.ChainAccountsList.isRequired,\\n        ignoredAccounts: ChainTypes.ChainAccountsList\\n    };\\n\\n    static defaultProps = {\\n        width: 2000,\\n        compact: false\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            inverseSort: props.viewSettings.get(\\\"dashboardSortInverse\\\", true),\\n            sortBy: props.viewSettings.get(\\\"dashboardSort\\\", \\\"star\\\"),\\n            dashboardFilter: props.viewSettings.get(\\\"dashboardFilter\\\", \\\"\\\")\\n        };\\n    }\\n\\n    shouldComponentUpdate(nextProps, nextState) {\\n        return (\\n            !utils.are_equal_shallow(nextProps.accounts, this.props.accounts) ||\\n            nextProps.isContactsList !== this.props.isContactsList ||\\n            nextProps.showMyAccounts !== this.props.showMyAccounts ||\\n            nextProps.width !== this.props.width ||\\n            nextProps.showIgnored !== this.props.showIgnored ||\\n            nextProps.locked !== this.props.locked ||\\n            nextProps.passwordAccount !== this.props.passwordAccount ||\\n            !utils.are_equal_shallow(\\n                nextProps.starredAccounts,\\n                this.props.starredAccounts\\n            ) ||\\n            !utils.are_equal_shallow(nextState, this.state)\\n        );\\n    }\\n\\n    _onStar(account, isStarred, e) {\\n        e.preventDefault();\\n        if (!isStarred) {\\n            AccountActions.addStarAccount(account);\\n        } else {\\n            AccountActions.removeStarAccount(account);\\n        }\\n    }\\n\\n    _goAccount(name, tab) {\\n        this.props.history.push(`/account/${name}`);\\n        SettingsActions.changeViewSetting({\\n            overviewTab: tab\\n        });\\n    }\\n\\n    _createAccount() {\\n        this.props.history.push(\\\"/create-account/wallet\\\");\\n    }\\n\\n    _onFilter(e) {\\n        this.setState({dashboardFilter: e.target.value.toLowerCase()});\\n\\n        SettingsActions.changeViewSetting({\\n            dashboardFilter: e.target.value.toLowerCase()\\n        });\\n    }\\n\\n    _setSort(field) {\\n        let inverse =\\n            field === this.state.sortBy\\n                ? !this.state.inverseSort\\n                : this.state.inverseSort;\\n        this.setState({\\n            sortBy: field,\\n            inverseSort: inverse\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            dashboardSort: field,\\n            dashboardSortInverse: inverse\\n        });\\n    }\\n\\n    _onAddContact(account) {\\n        AccountActions.addAccountContact(account);\\n    }\\n\\n    _onRemoveContact(account) {\\n        AccountActions.removeAccountContact(account);\\n    }\\n\\n    _renderList(accounts, isHiddenAccountsList) {\\n        const {\\n            width,\\n            starredAccounts,\\n            isContactsList,\\n            passwordAccount\\n        } = this.props;\\n        const {dashboardFilter, sortBy, inverseSort} = this.state;\\n        let balanceList = Immutable.List();\\n\\n        return accounts\\n            .filter(account => {\\n                if (!account) return false;\\n                let accountName = account.get(\\\"name\\\");\\n                let isMyAccount =\\n                    AccountStore.isMyAccount(account) ||\\n                    accountName === passwordAccount;\\n                /*\\n                Display all accounts from contacts list\\n                Display only my Accounts for Accounts page\\n                */\\n                return isContactsList\\n                    ? true\\n                    : isMyAccount === this.props.showMyAccounts;\\n            })\\n            .filter(a => {\\n                if (!a) return false;\\n                return (\\n                    a\\n                        .get(\\\"name\\\")\\n                        .toLowerCase()\\n                        .indexOf(dashboardFilter) !== -1\\n                );\\n            })\\n            .sort((a, b) => {\\n                switch (sortBy) {\\n                    case \\\"star\\\":\\n                        return starSort(a, b, inverseSort, starredAccounts);\\n                        break;\\n\\n                    case \\\"name\\\":\\n                        return utils.sortText(\\n                            a.get(\\\"name\\\"),\\n                            b.get(\\\"name\\\"),\\n                            inverseSort\\n                        );\\n                        break;\\n\\n                    default:\\n                        break;\\n                }\\n            })\\n            .map(account => {\\n                if (account) {\\n                    let collateral = {},\\n                        debt = {},\\n                        openOrders = {};\\n                    balanceList = balanceList.clear();\\n\\n                    let accountName = account.get(\\\"name\\\");\\n                    let isLTM =\\n                        account.get(\\\"lifetime_referrer_name\\\") === accountName;\\n\\n                    if (account.get(\\\"orders\\\")) {\\n                        account.get(\\\"orders\\\").forEach((orderID, key) => {\\n                            let order = ChainStore.getObject(orderID);\\n                            if (order) {\\n                                let orderAsset = order.getIn([\\n                                    \\\"sell_price\\\",\\n                                    \\\"base\\\",\\n                                    \\\"asset_id\\\"\\n                                ]);\\n                                if (!openOrders[orderAsset]) {\\n                                    openOrders[orderAsset] = parseInt(\\n                                        order.get(\\\"for_sale\\\"),\\n                                        10\\n                                    );\\n                                } else {\\n                                    openOrders[orderAsset] += parseInt(\\n                                        order.get(\\\"for_sale\\\"),\\n                                        10\\n                                    );\\n                                }\\n                            }\\n                        });\\n                    }\\n\\n                    // console.log(\\\"openOrders:\\\", openOrders);\\n\\n                    if (account.get(\\\"call_orders\\\")) {\\n                        account.get(\\\"call_orders\\\").forEach((callID, key) => {\\n                            let position = ChainStore.getObject(callID);\\n                            if (position) {\\n                                let collateralAsset = position.getIn([\\n                                    \\\"call_price\\\",\\n                                    \\\"base\\\",\\n                                    \\\"asset_id\\\"\\n                                ]);\\n                                if (!collateral[collateralAsset]) {\\n                                    collateral[collateralAsset] = parseInt(\\n                                        position.get(\\\"collateral\\\"),\\n                                        10\\n                                    );\\n                                } else {\\n                                    collateral[collateralAsset] += parseInt(\\n                                        position.get(\\\"collateral\\\"),\\n                                        10\\n                                    );\\n                                }\\n                                let debtAsset = position.getIn([\\n                                    \\\"call_price\\\",\\n                                    \\\"quote\\\",\\n                                    \\\"asset_id\\\"\\n                                ]);\\n                                if (!debt[debtAsset]) {\\n                                    debt[debtAsset] = parseInt(\\n                                        position.get(\\\"debt\\\"),\\n                                        10\\n                                    );\\n                                } else {\\n                                    debt[debtAsset] += parseInt(\\n                                        position.get(\\\"debt\\\"),\\n                                        10\\n                                    );\\n                                }\\n                            }\\n                        });\\n                    }\\n\\n                    let account_balances = account.get(\\\"balances\\\");\\n                    if (account.get(\\\"balances\\\")) {\\n                        account_balances.forEach(balance => {\\n                            let balanceAmount = ChainStore.getObject(balance);\\n                            if (\\n                                !balanceAmount ||\\n                                !balanceAmount.get(\\\"balance\\\")\\n                            ) {\\n                                return null;\\n                            }\\n                            balanceList = balanceList.push(balance);\\n                        });\\n                    }\\n\\n                    let isMyAccount =\\n                        AccountStore.isMyAccount(account) ||\\n                        accountName === passwordAccount;\\n\\n                    let isStarred = starredAccounts.has(accountName);\\n                    let starClass = isStarred ? \\\"gold-star\\\" : \\\"grey-star\\\";\\n\\n                    return (\\n                        <tr key={accountName}>\\n                            <td\\n                                className=\\\"clickable\\\"\\n                                onClick={this._onStar.bind(\\n                                    this,\\n                                    accountName,\\n                                    isStarred\\n                                )}\\n                            >\\n                                <Icon\\n                                    className={starClass}\\n                                    name=\\\"fi-star\\\"\\n                                    title=\\\"icons.fi_star.account\\\"\\n                                />\\n                            </td>\\n                            {isContactsList\\n                                ? (isHiddenAccountsList && (\\n                                      <td\\n                                          onClick={this._onAddContact.bind(\\n                                              this,\\n                                              accountName\\n                                          )}\\n                                      >\\n                                          <Icon\\n                                              name=\\\"plus-circle\\\"\\n                                              title=\\\"icons.plus_circle.add_contact\\\"\\n                                          />\\n                                      </td>\\n                                  )) || (\\n                                      <td\\n                                          onClick={this._onRemoveContact.bind(\\n                                              this,\\n                                              accountName\\n                                          )}\\n                                      >\\n                                          <Icon\\n                                              name=\\\"minus-circle\\\"\\n                                              title=\\\"icons.minus_circle.remove_contact\\\"\\n                                          />\\n                                      </td>\\n                                  )\\n                                : null}\\n                            <td style={{textAlign: \\\"left\\\"}}>\\n                                {account.get(\\\"id\\\")}\\n                            </td>\\n                            <td\\n                                style={{textAlign: \\\"left\\\", paddingLeft: 10}}\\n                                onClick={this._goAccount.bind(\\n                                    this,\\n                                    accountName,\\n                                    0\\n                                )}\\n                                className={\\n                                    \\\"clickable\\\" +\\n                                    (isMyAccount ? \\\" my-account\\\" : \\\"\\\")\\n                                }\\n                            >\\n                                <span className={isLTM ? \\\"lifetime\\\" : \\\"\\\"}>\\n                                    {accountName}\\n                                </span>\\n                            </td>\\n                            <td\\n                                className=\\\"clickable\\\"\\n                                onClick={this._goAccount.bind(\\n                                    this,\\n                                    accountName,\\n                                    1\\n                                )}\\n                                style={{textAlign: \\\"right\\\"}}\\n                            >\\n                                <TotalBalanceValue\\n                                    noTip\\n                                    balances={[]}\\n                                    openOrders={openOrders}\\n                                />\\n                            </td>\\n                            {width >= 750 ? (\\n                                <td\\n                                    className=\\\"clickable\\\"\\n                                    onClick={this._goAccount.bind(\\n                                        this,\\n                                        accountName,\\n                                        2\\n                                    )}\\n                                    style={{textAlign: \\\"right\\\"}}\\n                                >\\n                                    <TotalBalanceValue\\n                                        noTip\\n                                        balances={[]}\\n                                        collateral={collateral}\\n                                    />\\n                                </td>\\n                            ) : null}\\n                            {width >= 1200 ? (\\n                                <td\\n                                    className=\\\"clickable\\\"\\n                                    onClick={this._goAccount.bind(\\n                                        this,\\n                                        accountName,\\n                                        2\\n                                    )}\\n                                    style={{textAlign: \\\"right\\\"}}\\n                                >\\n                                    <TotalBalanceValue\\n                                        noTip\\n                                        balances={[]}\\n                                        debt={debt}\\n                                    />\\n                                </td>\\n                            ) : null}\\n                            <td\\n                                className=\\\"clickable\\\"\\n                                onClick={this._goAccount.bind(\\n                                    this,\\n                                    accountName,\\n                                    0\\n                                )}\\n                                style={{textAlign: \\\"right\\\"}}\\n                            >\\n                                <TotalBalanceValue\\n                                    noTip\\n                                    balances={balanceList}\\n                                    collateral={collateral}\\n                                    debt={debt}\\n                                    openOrders={openOrders}\\n                                />\\n                            </td>\\n                        </tr>\\n                    );\\n                }\\n            });\\n    }\\n\\n    render() {\\n        let {width, showIgnored, isContactsList} = this.props;\\n        const {dashboardFilter} = this.state;\\n\\n        let includedAccounts = this._renderList(this.props.accounts);\\n\\n        let hiddenAccounts = this._renderList(this.props.ignoredAccounts, true);\\n\\n        let filterText = !isContactsList\\n            ? counterpart.translate(\\\"explorer.accounts.filter\\\")\\n            : counterpart.translate(\\\"explorer.accounts.filter_contacts\\\");\\n        filterText += \\\"...\\\";\\n\\n        let hasLocalWallet = !!WalletDb.getWallet();\\n\\n        return (\\n            <div style={this.props.style}>\\n                {!this.props.compact ? (\\n                    <section style={{paddingTop: \\\"1rem\\\", paddingLeft: \\\"2rem\\\"}}>\\n                        <input\\n                            placeholder={filterText}\\n                            style={{maxWidth: \\\"20rem\\\", display: \\\"inline-block\\\"}}\\n                            type=\\\"text\\\"\\n                            value={dashboardFilter}\\n                            onChange={this._onFilter.bind(this)}\\n                        />\\n                        {hasLocalWallet && !isContactsList ? (\\n                            <div\\n                                onClick={this._createAccount.bind(this)}\\n                                style={{\\n                                    display: \\\"inline-block\\\",\\n                                    marginLeft: 5,\\n                                    marginBottom: \\\"1rem\\\"\\n                                }}\\n                                className=\\\"button small\\\"\\n                            >\\n                                <Translate content=\\\"header.create_account\\\" />\\n                            </div>\\n                        ) : null}\\n                        {hiddenAccounts && hiddenAccounts.length ? (\\n                            <div\\n                                onClick={this.props.onToggleIgnored}\\n                                style={{\\n                                    display: \\\"inline-block\\\",\\n                                    float: \\\"right\\\",\\n                                    marginRight: \\\"20px\\\"\\n                                }}\\n                                className=\\\"button small\\\"\\n                            >\\n                                <Translate\\n                                    content={`account.${\\n                                        this.props.showIgnored\\n                                            ? \\\"hide_ignored\\\"\\n                                            : \\\"show_ignored\\\"\\n                                    }`}\\n                                />\\n                            </div>\\n                        ) : null}\\n                    </section>\\n                ) : null}\\n                <table\\n                    className=\\\"table table-hover dashboard-table\\\"\\n                    style={{fontSize: \\\"0.85rem\\\"}}\\n                >\\n                    {!this.props.compact ? (\\n                        <thead>\\n                            <tr>\\n                                <th\\n                                    onClick={this._setSort.bind(this, \\\"star\\\")}\\n                                    className=\\\"clickable\\\"\\n                                >\\n                                    <Icon\\n                                        className=\\\"grey-star\\\"\\n                                        name=\\\"fi-star\\\"\\n                                        title=\\\"icons.fi_star.sort_accounts\\\"\\n                                    />\\n                                </th>\\n                                {isContactsList ? (\\n                                    <th>\\n                                        <Icon\\n                                            name=\\\"user\\\"\\n                                            title=\\\"icons.user.account\\\"\\n                                        />\\n                                    </th>\\n                                ) : null}\\n                                <th style={{textAlign: \\\"left\\\"}}>ID</th>\\n                                <th\\n                                    style={{textAlign: \\\"left\\\", paddingLeft: 10}}\\n                                    onClick={this._setSort.bind(this, \\\"name\\\")}\\n                                    className=\\\"clickable\\\"\\n                                >\\n                                    <Translate content=\\\"header.account\\\" />\\n                                </th>\\n                                <th style={{textAlign: \\\"right\\\"}}>\\n                                    <Translate content=\\\"account.open_orders\\\" />\\n                                </th>\\n                                {width >= 750 ? (\\n                                    <th style={{textAlign: \\\"right\\\"}}>\\n                                        <Translate content=\\\"account.as_collateral\\\" />\\n                                    </th>\\n                                ) : null}\\n                                {width >= 1200 ? (\\n                                    <th style={{textAlign: \\\"right\\\"}}>\\n                                        <Translate content=\\\"transaction.borrow_amount\\\" />\\n                                    </th>\\n                                ) : null}\\n                                <th\\n                                    style={{\\n                                        textAlign: \\\"right\\\",\\n                                        marginRight: 20\\n                                    }}\\n                                >\\n                                    <Translate content=\\\"account.total_value\\\" />\\n                                </th>\\n                            </tr>\\n                        </thead>\\n                    ) : null}\\n                    <tbody>\\n                        {includedAccounts}\\n                        {showIgnored && hiddenAccounts.length ? (\\n                            <tr\\n                                className=\\\"dashboard-table--hiddenAccounts\\\"\\n                                style={{backgroundColor: \\\"transparent\\\"}}\\n                                key=\\\"hidden\\\"\\n                            >\\n                                <td colSpan=\\\"8\\\">\\n                                    {counterpart.translate(\\n                                        \\\"account.hidden_accounts_row\\\"\\n                                    )}\\n                                    :\\n                                </td>\\n                            </tr>\\n                        ) : null}\\n                        {showIgnored && hiddenAccounts}\\n                    </tbody>\\n                </table>\\n            </div>\\n        );\\n    }\\n}\\nDashboardList = BindToChainState(DashboardList);\\n\\nclass AccountsListWrapper extends React.Component {\\n    render() {\\n        return <DashboardList {...this.props} />;\\n    }\\n}\\nAccountsListWrapper = withRouter(AccountsListWrapper);\\n\\nexport default connect(\\n    AccountsListWrapper,\\n    {\\n        listenTo() {\\n            return [SettingsStore, WalletUnlockStore, AccountStore];\\n        },\\n        getProps() {\\n            return {\\n                locked: WalletUnlockStore.getState().locked,\\n                starredAccounts: AccountStore.getState().starredAccounts,\\n                viewSettings: SettingsStore.getState().viewSettings\\n            };\\n        }\\n    }\\n);\\n\",\"import React from \\\"react\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport DashboardList from \\\"./DashboardList\\\";\\nimport {RecentTransactions} from \\\"../Account/RecentTransactions\\\";\\nimport LoadingIndicator from \\\"../LoadingIndicator\\\";\\nimport LoginSelector from \\\"../LoginSelector\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport MarketsStore from \\\"stores/MarketsStore\\\";\\nimport {Tabs, Tab} from \\\"../Utility/Tabs\\\";\\nimport AltContainer from \\\"alt-container\\\";\\n\\nclass AccountsContainer extends React.Component {\\n    render() {\\n        return (\\n            <AltContainer\\n                stores={[AccountStore, SettingsStore, MarketsStore]}\\n                inject={{\\n                    contacts: () => {\\n                        return AccountStore.getState().accountContacts;\\n                    },\\n                    myActiveAccounts: () => {\\n                        return AccountStore.getState().myActiveAccounts;\\n                    },\\n                    myHiddenAccounts: () => {\\n                        return AccountStore.getState().myHiddenAccounts;\\n                    },\\n                    accountsReady: () => {\\n                        return (\\n                            AccountStore.getState().accountsLoaded &&\\n                            AccountStore.getState().refsLoaded\\n                        );\\n                    },\\n                    passwordAccount: () => {\\n                        return AccountStore.getState().passwordAccount;\\n                    },\\n                    currentEntry: SettingsStore.getState().viewSettings.get(\\n                        \\\"dashboardEntry\\\",\\n                        \\\"accounts\\\"\\n                    )\\n                }}\\n            >\\n                <Accounts {...this.props} />\\n            </AltContainer>\\n        );\\n    }\\n}\\n\\nclass Accounts extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        this.state = {\\n            width: null,\\n            showIgnored: false,\\n            currentEntry: props.currentEntry\\n        };\\n\\n        this._setDimensions = this._setDimensions.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this._setDimensions();\\n\\n        window.addEventListener(\\\"resize\\\", this._setDimensions, {\\n            capture: false,\\n            passive: true\\n        });\\n    }\\n\\n    shouldComponentUpdate(nextProps, nextState) {\\n        return (\\n            nextProps.myActiveAccounts !== this.props.myActiveAccounts ||\\n            nextProps.contacts !== this.props.contacts ||\\n            nextProps.ignoredAccounts !== this.props.ignoredAccounts ||\\n            nextProps.passwordAccount !== this.props.passwordAccount ||\\n            nextState.width !== this.state.width ||\\n            nextProps.accountsReady !== this.props.accountsReady ||\\n            nextState.showIgnored !== this.state.showIgnored ||\\n            nextState.currentEntry !== this.state.currentEntry\\n        );\\n    }\\n\\n    componentWillUnmount() {\\n        window.removeEventListener(\\\"resize\\\", this._setDimensions);\\n    }\\n\\n    _setDimensions() {\\n        let width = window.innerWidth;\\n\\n        if (width !== this.state.width) {\\n            this.setState({width});\\n        }\\n    }\\n\\n    _onToggleIgnored() {\\n        this.setState({\\n            showIgnored: !this.state.showIgnored\\n        });\\n    }\\n\\n    _onSwitchType(type) {\\n        this.setState({\\n            currentEntry: type\\n        });\\n        SettingsActions.changeViewSetting({\\n            dashboardEntry: type\\n        });\\n    }\\n\\n    render() {\\n        let {\\n            myActiveAccounts,\\n            myHiddenAccounts,\\n            accountsReady,\\n            passwordAccount\\n        } = this.props;\\n        let {width, showIgnored} = this.state;\\n\\n        if (passwordAccount && !myActiveAccounts.has(passwordAccount)) {\\n            myActiveAccounts = myActiveAccounts.add(passwordAccount);\\n        }\\n        let names = myActiveAccounts.toArray().sort();\\n        if (passwordAccount && names.indexOf(passwordAccount) === -1)\\n            names.push(passwordAccount);\\n        let ignored = myHiddenAccounts.toArray().sort();\\n\\n        let accountCount =\\n            myActiveAccounts.size +\\n            myHiddenAccounts.size +\\n            (passwordAccount ? 1 : 0);\\n\\n        if (!accountsReady) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        if (!accountCount) {\\n            return <LoginSelector />;\\n        }\\n\\n        const contacts = this.props.contacts.toArray();\\n        return (\\n            <div ref=\\\"wrapper\\\" className=\\\"grid-block page-layout vertical\\\">\\n                <div\\n                    ref=\\\"container\\\"\\n                    className=\\\"tabs-container generic-bordered-box\\\"\\n                >\\n                    <Tabs\\n                        setting=\\\"accountTab\\\"\\n                        className=\\\"account-tabs\\\"\\n                        defaultActiveTab={1}\\n                        segmented={false}\\n                        tabsClass=\\\"account-overview no-padding bordered-header content-block\\\"\\n                    >\\n                        <Tab title=\\\"account.accounts\\\">\\n                            <div className=\\\"generic-bordered-box\\\">\\n                                <div className=\\\"box-content\\\">\\n                                    <DashboardList\\n                                        accounts={Immutable.List(names)}\\n                                        ignoredAccounts={Immutable.List(\\n                                            ignored\\n                                        )}\\n                                        width={width}\\n                                        onToggleIgnored={this._onToggleIgnored.bind(\\n                                            this\\n                                        )}\\n                                        showIgnored={showIgnored}\\n                                        showMyAccounts={true}\\n                                    />\\n                                </div>\\n                            </div>\\n                        </Tab>\\n                        <Tab title=\\\"account.contacts\\\">\\n                            <div className=\\\"generic-bordered-box\\\">\\n                                <div className=\\\"box-content\\\">\\n                                    <DashboardList\\n                                        accounts={contacts}\\n                                        passwordAccount={passwordAccount}\\n                                        ignoredAccounts={Immutable.List(\\n                                            ignored\\n                                        )}\\n                                        width={width}\\n                                        onToggleIgnored={this._onToggleIgnored.bind(\\n                                            this\\n                                        )}\\n                                        showIgnored={showIgnored}\\n                                        isContactsList={true}\\n                                    />\\n                                </div>\\n                            </div>\\n                        </Tab>\\n                        <Tab title=\\\"account.recent\\\">\\n                            <RecentTransactions\\n                                accountsList={myActiveAccounts}\\n                                limit={10}\\n                                compactView={false}\\n                                fullHeight={true}\\n                                showFilters={true}\\n                                dashboard\\n                            />\\n                        </Tab>\\n                    </Tabs>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nconst DashboardAccountsOnly = props => {\\n    return <AccountsContainer {...props} onlyAccounts />;\\n};\\n\\nexport default DashboardAccountsOnly;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{2007:function(e,t,n){\"use strict\";n.d(t,\"b\",function(){return _}),n.d(t,\"a\",function(){return v});var a=n(0),r=n.n(a),o=n(1),s=n.n(o),i=n(3),c=n.n(i),l=n(31),u=n(25),p=n(27),d=n(6),h=n.n(d),m=n(2322),f=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function g(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function b(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function y(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var v=function(e){function t(){return g(this,t),b(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return y(t,r.a.Component),f(t,[{key:\"render\",value:function(){var e=this.props,t=e.isActive,n=e.index,a=e.changeTab,o=e.title,s=e.className,i=e.updatedTab,l=e.disabled,u=e.subText,p=c()({\"is-active\":t},s);return\"string\"==typeof o&&o.indexOf(\".\")>0&&(o=h.a.translate(o)),this.props.collapsed?(\"string\"==typeof u&&(u=u.trim()),r.a.createElement(\"option\",{value:n,\"data-is-link-to\":this.props.isLinkTo,className:\"tab-title\"},r.a.createElement(r.a.Fragment,null,o,i?\"*\":\"\",u&&\" (\",u&&u,u&&\")\"))):r.a.createElement(\"li\",{className:p,onClick:l?null:a.bind(this,n,this.props.isLinkTo)},r.a.createElement(\"a\",null,r.a.createElement(\"span\",{className:\"tab-title\"},o,i?\"*\":\"\"),u&&r.a.createElement(\"div\",{className:\"tab-subtext\"},u)))}}]),t}();v.propTypes={changeTab:s.a.func,isActive:s.a.bool.isRequired,index:s.a.number.isRequired,className:s.a.string,isLinkTo:s.a.string,subText:s.a.oneOfType([s.a.object,s.a.string])},v.defaultProps={isActive:!1,index:0,className:\"\",isLinkTo:\"\",subText:null};var _=function(e){function t(e){g(this,t);var n=b(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.state={activeTab:e.setting?e.viewSettings.get(e.setting,e.defaultActiveTab):e.defaultActiveTab,width:window.innerWidth},n._setDimensions=n._setDimensions.bind(n),n}return y(t,r.a.Component),f(t,[{key:\"componentDidMount\",value:function(){this._setDimensions(),window.addEventListener(\"resize\",this._setDimensions,{capture:!1,passive:!0})}},{key:\"componentWillReceiveProps\",value:function(e){var t=e.viewSettings.get(e.setting);t!==this.props.viewSettings.get(this.props.setting)&&this.setState({activeTab:t})}},{key:\"componentWillUnmount\",value:function(){window.removeEventListener(\"resize\",this._setDimensions)}},{key:\"_setDimensions\",value:function(){var e=window.innerWidth;e!==this.state.width&&this.setState({width:e})}},{key:\"_changeTab\",value:function(e,t){e!==this.state.activeTab&&(\"\"!==t&&this.props.history.push(t),this.props.setting&&u.a.changeViewSetting(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},this.props.setting,e)),this.setState({activeTab:e}),this.props.onChangeTab&&this.props.onChangeTab(e))}},{key:\"render\",value:function(){var e=this,t=this.props,n=t.children,a=t.contentClass,o=t.tabsClass,s=t.style,i=t.segmented,l=this.state.width<900&&r.a.Children.count(n)>2,u=null,p=r.a.Children.map(n,function(t,n){if(!t)return null;if(l&&t.props.disabled)return null;var a=n===e.state.activeTab;return a&&(u=t.props.children),r.a.cloneElement(t,{collapsed:l,isActive:a,changeTab:e._changeTab.bind(e),index:n})}).filter(function(e){return null!==e});return u||(u=p[0].props.children),r.a.createElement(\"div\",{className:c()(this.props.actionButtons?\"with-buttons\":\"\",this.props.className)},r.a.createElement(\"div\",{className:\"service-selector\"},r.a.createElement(\"ul\",{style:s,className:c()(\"button-group no-margin\",o,{segmented:i})},l?r.a.createElement(\"li\",{style:{paddingLeft:10,paddingRight:10,minWidth:\"15rem\"}},r.a.createElement(\"select\",{value:this.state.activeTab,style:{marginTop:10,marginBottom:10},className:\"bts-select\",onChange:function(t){var n=parseInt(t.target.value,10);e._changeTab(n,t.target[n].attributes[\"data-is-link-to\"].value)}},p)):p,this.props.actionButtons?r.a.createElement(\"li\",{className:\"tabs-action-buttons\"},this.props.actionButtons):null)),r.a.createElement(\"div\",{className:c()(\"tab-content\",a)},u))}}]),t}();_.propTypes={setting:s.a.string,defaultActiveTab:s.a.number,segmented:s.a.bool},_.defaultProps={active:0,defaultActiveTab:0,segmented:!0,contentClass:\"\",style:{}},_=Object(l.a)(_,{listenTo:function(){return[p.a]},getProps:function(){return{viewSettings:p.a.getState().viewSettings}}}),_=Object(m.a)(_)},2025:function(e,t,n){var a=n(28),r=n(2026),o={},s={},i={};function c(e,t,n,a){o[e]||(o[e]=[]),s[e]||(s[e]=[]),o[e].push(t),s[e].push([n,t,new Date(a)]),i[e]||(i[e]={}),i[e][n]||(i[e][n]={deposit:[],withdrawal:[]}),i[e][n][t>0?\"deposit\":\"withdrawal\"].push(t)}function l(e,t,n,a,o,s,i,l,u){return n||(n={amount:\"\",currency:\"\"}),a||(a={amount:\"\",currency:\"\"}),o||(o={amount:\"\",currency:\"\"}),n.amount&&c(n.currency,n.amount,i,s),a.amount&&c(a.currency,-a.amount,i,s),o.amount&&c(o.currency,-o.amount,i,s),e.push([t,r.printAmount(n),n.currency,r.printAmount(a),a.currency,r.printAmount(o),o.currency,\"BTS-DEX\",u||\"\",l||\"\",s]),e}e.exports={parseData:function(e,t,n){var a=[];a.push([\"Type\",\"Buy Amount\",\"Buy Currency\",\"Sell Amount\",\"Sell Currency\",\"Fee Amount\",\"Fee Currency\",\"Exchange\",\"Trade Group\",\"Comment\",\"Date\"]);var o={};function s(e){o[e]||(o[e]=0),o[e]++}var i=Object.keys(e),c=Array.isArray(i),u=0;for(i=c?i:i[Symbol.iterator]();;){var p;if(c){if(u>=i.length)break;p=i[u++]}else{if((u=i.next()).done)break;p=u.value}var d=e[p],h=d.timestamp,m=d.type,f=d.data,g=null;switch(m){case\"vesting_balance_withdraw\":var b=r.parseCurrency(f.amount);g=r.parseCurrency(f.fee),a=l(a,\"1.2.30665\"===f.owner&&b.amount>1e4?\"Income\":\"Deposit\",b,null,g,h,m,n+\" : Vesting balance withdraw\"),s(m);break;case\"balance_claim\":a=l(a,\"Deposit\",r.parseCurrency(f.total_claimed),null,null,h,m,n+\" : Balance claim\"),s(m);break;case\"transfer\":var y=r.parseCurrency(f.amount);g=r.parseCurrency(f.fee),a=f.to==t?l(a,\"1.2.391938\"===f.to&&\"1.2.381086\"===f.from?\"Income\":\"Deposit\",y,null,null,h,m,n+\" : From \"+f.from):l(a,\"Withdrawal\",null,y,g,h,m,n+\": To \"+f.to),s(m);break;case\"fill_order\":var v=r.parseCurrency(f.pays),_=r.parseCurrency(f.receives);\"BTS\"!==(g=r.parseCurrency(f.fee)).currency&&(_.currency===g.currency?(_.amount-=g.amount,g.amount=0):v.currency===g.currency&&(v.amount-=g.amount,g.amount=0)),a=l(a,\"Trade\",_,v,g,h,m),s(m);break;case\"asset_issue\":var w=r.parseCurrency(f.asset_to_issue);g=f.issuer===t?r.parseCurrency(f.fee):null,f.issue_to_account===t&&(a=l(a,\"Deposit\",w,null,g,h,m,n+\" : Issued to account\")),s(m);break;case\"account_update\":case\"proposal_create\":case\"proposal_update\":case\"account_whitelist\":case\"worker_create\":case\"limit_order_create\":case\"limit_order_cancel\":case\"call_order_update\":(g=r.parseCurrency(f.fee)).amount>0&&(a=l(a,\"Withdrawal\",null,g,null,h,m,m+\" fee\"),s(m));break;case\"account_create\":f.registrar===t&&(a=l(a,\"Withdrawal\",null,g=r.parseCurrency(f.fee),null,h,m,m+\" fee\"),s(m));break;case\"asset_fund_fee_pool\":g=r.parseCurrency(f.fee),a=l(a,\"Withdrawal\",null,r.parseCurrency({amount:f.amount,asset_id:\"1.3.0\"}),g,h,m,\"\"+m),s(m);break;default:console.log(\"Unhandled type:\",m,f)}}return a},filterEntries:function(e,t,n){if(!t&&!n)return e;for(var a=Object.keys(e),r=a.length-1;r>=0;r--){var o=a[r],s=e[o],i=s.timestamp,c=s.type;s.data,t&&c!==t?delete e[o]:n&&new Date(i).getTime()<n&&delete e[o]}return console.log(\"Removed \"+(a.length-Object.keys(e).length)+\" entries by filtering\"),e},groupEntries:function(e){for(var t={},n=Object.keys(e),r=n.length-1;r>=0;r--){var o=n[r],s=e[o],i=s.timestamp,c=s.type,l=s.data;switch(c){case\"fill_order\":var u=a(i),p=l.receives.asset_id+\"_\"+l.pays.asset_id,d=t[p],h=d?a(d.timestamp):null;d&&u.isSame(h,\"day\")&&d.data.pays.asset_id===l.pays.asset_id&&d.data.receives.asset_id===l.receives.asset_id&&(l.pays.amount=parseInt(l.pays.amount,10)+parseInt(d.data.pays.amount,10),l.receives.amount=parseInt(l.receives.amount,10)+parseInt(d.data.receives.amount,10),l.fee.amount=parseInt(l.fee.amount,10)+parseInt(d.data.fee.amount,10),e[o].data=l,delete e[d.trx_id]),t[p]={data:l,timestamp:i,trx_id:o}}}return console.log(\"Removed \"+(n.length-Object.keys(e).length)+\" fill_order entries by grouping\"),e}}},2026:function(e,t,n){var a=n(5).ChainStore;e.exports={parseCurrency:function(e){var t=a.getAsset(e.asset_id),n=function(e){if(\"number\"!=typeof e)throw new Error(\"Input must be a number\");return Math.pow(10,e)}((t=t?t.toJS():{precision:5}).precision);return{amount:e.amount/n,currency:t.symbol,asset_id:e.asset_id}},printAmount:function(e){if(!e.amount||!e.currency)return\"\";var t=a.getAsset(e.asset_id);return t=t?t.toJS():{precision:5},e.amount.toFixed(t.precision)},getIndex:function(e){var t=e.split(\".\");return parseInt(t[2],10)}}},2027:function(e,t,n){var a=n(2028),r=n(14),o=n(5),s=o.ChainTypes,i=o.ChainStore,c=o.FetchChain,l=s.operations,u=Object.keys(l),p={},d={};function h(e){return new Promise(function(t,n){if(p[e])return t(p[e]);r.Apis.instance().db_api().exec(\"get_block\",[e]).then(function(n){p[e]=new Date(n.timestamp+\"Z\"),t(p[e])}).catch(n)})}function m(e){return new Promise(function(t,n){var a;if(d[e])return t(d[e]);c(\"getObject\",e,void 0,(a={},a[e]=!1,a)).then(function(n){var a=n.toJS();d[e]={symbol:a.symbol.replace(/OPEN\\.|BRIDGE\\.|RUDEX\\.|GDEX\\.|BLOCK\\./,\"\"),precision:a.precision},t(d[e])}).catch(function(e){n()})})}e.exports={connect:function(){return new Promise(function(e){r.Apis.instance(a.apiNode,!0).init_promise.then(function(t){i.init(!1).then(function(){e(t)})}).catch(function(e){console.error(\"Error connection to node:\",e)})})},disconnect:function(){r.Apis.instance().close()},getUser:function(e){return new Promise(function(t,n){var a;c(\"getAccount\",e,void 0,(a={},a[e]=!1,a)).then(function(e){var n=e.toJS();n.balances||(n.balances={}),n.call_orders||(n.call_orders=[]);var a=Object.keys(n.balances);t({accountId:n.id,assets:a,balances:n.balances})}).catch(n)})},getBlockTime:h,getAssetData:m,resolveAssets:function(e,t){return new Promise(function(n,a){var r=[],o={};e&&e.forEach(function(e){switch(u[e.op[0]]){case\"transfer\":o[e.op[1].amount.asset_id]=!0,o[e.op[1].fee.asset_id]=!0;break;case\"fill_order\":o[e.op[1].pays.asset_id]=!0,o[e.op[1].receives.asset_id]=!0,o[e.op[1].fee.asset_id]=!0;break;case\"asset_issue\":o[e.op[1].asset_to_issue.asset_id]=!0,o[e.op[1].fee.asset_id]=!0}}),t&&t.forEach(function(e){o[e]=!0}),Object.keys(o).forEach(function(e){!d[e]&&e&&r.push(m(e))}),Promise.all(r).then(n).catch(a)})},resolveBlockTimes:function(e){return new Promise(function(t,n){var a=e.map(function(e){return e.block_time&&(p[e.block_num]=new Date(e.block_time)),h(e.block_num)});Promise.all(a).then(t).catch(n)})},getAsset:function(e){return d[e]},getBlock:function(e){return p[e]}}},2028:function(e,t){e.exports={apiNode:\"wss://eu.nodes.bitshares.ws\",useES:!0,esNode:\"https://eswrapper.bitshares.eu\",botPaymentAccounts:[]}},2029:function(e,t,n){var a=n(14),r=void 0;e.exports=function(e){return r=e?fetch:n(2030),{getAccountHistory:function(e,t,n,r){return new Promise(function(o,s){a.Apis.instance().history_api().exec(\"get_account_history\",[e,t,n,r]).then(function(e){o(e)}).catch(s)})},getAccountHistoryES:function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"https://eswrapper.bitshares.eu\";return console.log(\"query\",a+\"/get_account_history?account_id=\"+e+\"&from_=\"+n+\"&size=\"+t+\"&sort_by=block_data.block_time&type=data&agg_field=operation_type\"),new Promise(function(o,s){r(a+\"/get_account_history?account_id=\"+e+\"&from_=\"+n+\"&size=\"+t+\"&sort_by=block_data.block_time&type=data&agg_field=operation_type\").then(function(e){return e.json()}).then(function(e){var t=e.map(function(e){return{id:e.account_history.operation_id,op:JSON.parse(e.operation_history.op),result:JSON.parse(e.operation_history.operation_result),block_num:e.block_data.block_num,block_time:e.block_data.block_time+\"Z\"}});o(t)}).catch(function(){o([])})})}}}},2030:function(e,t){},2036:function(e,t,n){var a=n(2025),r=a.groupEntries,o=a.parseData,s=n(2027),i=s.resolveBlockTimes,c=s.resolveAssets,l=n(2029)(!0),u=l.getAccountHistoryES,p=l.getAccountHistory;e.exports={groupEntries:r,parseData:o,getAccountHistoryES:u,getAccountHistory:p,resolveBlockTimes:i,resolveAssets:c}},2321:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(11),s=n.n(o),i=n(15),c=n(2),l=n.n(c),u=n(31),p=n(27),d=n(105),h=n(42),m=n(49),f=n(25),g=n(39),b=n(22),y=n(5),v=n(574),_=n(24),w=n(6),E=n.n(w),k=n(20),A=n(2322),C=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function S(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function T(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function O(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var x=function(e){function t(e){S(this,t);var n=T(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.state={inverseSort:e.viewSettings.get(\"dashboardSortInverse\",!0),sortBy:e.viewSettings.get(\"dashboardSort\",\"star\"),dashboardFilter:e.viewSettings.get(\"dashboardFilter\",\"\")},n}return O(t,r.a.Component),C(t,[{key:\"shouldComponentUpdate\",value:function(e,t){return!i.a.are_equal_shallow(e.accounts,this.props.accounts)||e.isContactsList!==this.props.isContactsList||e.showMyAccounts!==this.props.showMyAccounts||e.width!==this.props.width||e.showIgnored!==this.props.showIgnored||e.locked!==this.props.locked||e.passwordAccount!==this.props.passwordAccount||!i.a.are_equal_shallow(e.starredAccounts,this.props.starredAccounts)||!i.a.are_equal_shallow(t,this.state)}},{key:\"_onStar\",value:function(e,t,n){n.preventDefault(),t?g.a.removeStarAccount(e):g.a.addStarAccount(e)}},{key:\"_goAccount\",value:function(e,t){this.props.history.push(\"/account/\"+e),f.a.changeViewSetting({overviewTab:t})}},{key:\"_createAccount\",value:function(){this.props.history.push(\"/create-account/wallet\")}},{key:\"_onFilter\",value:function(e){this.setState({dashboardFilter:e.target.value.toLowerCase()}),f.a.changeViewSetting({dashboardFilter:e.target.value.toLowerCase()})}},{key:\"_setSort\",value:function(e){var t=e===this.state.sortBy?!this.state.inverseSort:this.state.inverseSort;this.setState({sortBy:e,inverseSort:t}),f.a.changeViewSetting({dashboardSort:e,dashboardSortInverse:t})}},{key:\"_onAddContact\",value:function(e){g.a.addAccountContact(e)}},{key:\"_onRemoveContact\",value:function(e){g.a.removeAccountContact(e)}},{key:\"_renderList\",value:function(e,t){var n=this,a=this.props,o=a.width,c=a.starredAccounts,l=a.isContactsList,u=a.passwordAccount,p=this.state,d=p.dashboardFilter,h=p.sortBy,m=p.inverseSort,f=s.a.List();return e.filter(function(e){if(!e)return!1;var t=e.get(\"name\"),a=_.a.isMyAccount(e)||t===u;return!!l||a===n.props.showMyAccounts}).filter(function(e){return!!e&&-1!==e.get(\"name\").toLowerCase().indexOf(d)}).sort(function(e,t){switch(h){case\"star\":return function(e,t,n,a){var r=e.get(\"name\"),o=t.get(\"name\"),s=a.has(r),c=a.has(o);return s&&!c?n?-1:1:c&&!s?n?1:-1:r>o?n?1:-1:r<o?n?-1:1:i.a.sortText(r,o,!n)}(e,t,m,c);case\"name\":return i.a.sortText(e.get(\"name\"),t.get(\"name\"),m)}}).map(function(e){if(e){var a={},s={},i={};f=f.clear();var p=e.get(\"name\"),d=e.get(\"lifetime_referrer_name\")===p;e.get(\"orders\")&&e.get(\"orders\").forEach(function(e,t){var n=y.ChainStore.getObject(e);if(n){var a=n.getIn([\"sell_price\",\"base\",\"asset_id\"]);i[a]?i[a]+=parseInt(n.get(\"for_sale\"),10):i[a]=parseInt(n.get(\"for_sale\"),10)}}),e.get(\"call_orders\")&&e.get(\"call_orders\").forEach(function(e,t){var n=y.ChainStore.getObject(e);if(n){var r=n.getIn([\"call_price\",\"base\",\"asset_id\"]);a[r]?a[r]+=parseInt(n.get(\"collateral\"),10):a[r]=parseInt(n.get(\"collateral\"),10);var o=n.getIn([\"call_price\",\"quote\",\"asset_id\"]);s[o]?s[o]+=parseInt(n.get(\"debt\"),10):s[o]=parseInt(n.get(\"debt\"),10)}});var h=e.get(\"balances\");e.get(\"balances\")&&h.forEach(function(e){var t=y.ChainStore.getObject(e);if(!t||!t.get(\"balance\"))return null;f=f.push(e)});var m=_.a.isMyAccount(e)||p===u,g=c.has(p),w=g?\"gold-star\":\"grey-star\";return r.a.createElement(\"tr\",{key:p},r.a.createElement(\"td\",{className:\"clickable\",onClick:n._onStar.bind(n,p,g)},r.a.createElement(b.a,{className:w,name:\"fi-star\",title:\"icons.fi_star.account\"})),l?t&&r.a.createElement(\"td\",{onClick:n._onAddContact.bind(n,p)},r.a.createElement(b.a,{name:\"plus-circle\",title:\"icons.plus_circle.add_contact\"}))||r.a.createElement(\"td\",{onClick:n._onRemoveContact.bind(n,p)},r.a.createElement(b.a,{name:\"minus-circle\",title:\"icons.minus_circle.remove_contact\"})):null,r.a.createElement(\"td\",{style:{textAlign:\"left\"}},e.get(\"id\")),r.a.createElement(\"td\",{style:{textAlign:\"left\",paddingLeft:10},onClick:n._goAccount.bind(n,p,0),className:\"clickable\"+(m?\" my-account\":\"\")},r.a.createElement(\"span\",{className:d?\"lifetime\":\"\"},p)),r.a.createElement(\"td\",{className:\"clickable\",onClick:n._goAccount.bind(n,p,1),style:{textAlign:\"right\"}},r.a.createElement(v.a,{noTip:!0,balances:[],openOrders:i})),o>=750?r.a.createElement(\"td\",{className:\"clickable\",onClick:n._goAccount.bind(n,p,2),style:{textAlign:\"right\"}},r.a.createElement(v.a,{noTip:!0,balances:[],collateral:a})):null,o>=1200?r.a.createElement(\"td\",{className:\"clickable\",onClick:n._goAccount.bind(n,p,2),style:{textAlign:\"right\"}},r.a.createElement(v.a,{noTip:!0,balances:[],debt:s})):null,r.a.createElement(\"td\",{className:\"clickable\",onClick:n._goAccount.bind(n,p,0),style:{textAlign:\"right\"}},r.a.createElement(v.a,{noTip:!0,balances:f,collateral:a,debt:s,openOrders:i})))}})}},{key:\"render\",value:function(){var e=this.props,t=e.width,n=e.showIgnored,a=e.isContactsList,o=this.state.dashboardFilter,s=this._renderList(this.props.accounts),i=this._renderList(this.props.ignoredAccounts,!0),c=a?E.a.translate(\"explorer.accounts.filter_contacts\"):E.a.translate(\"explorer.accounts.filter\");c+=\"...\";var u=!!k.a.getWallet();return r.a.createElement(\"div\",{style:this.props.style},this.props.compact?null:r.a.createElement(\"section\",{style:{paddingTop:\"1rem\",paddingLeft:\"2rem\"}},r.a.createElement(\"input\",{placeholder:c,style:{maxWidth:\"20rem\",display:\"inline-block\"},type:\"text\",value:o,onChange:this._onFilter.bind(this)}),u&&!a?r.a.createElement(\"div\",{onClick:this._createAccount.bind(this),style:{display:\"inline-block\",marginLeft:5,marginBottom:\"1rem\"},className:\"button small\"},r.a.createElement(l.a,{content:\"header.create_account\"})):null,i&&i.length?r.a.createElement(\"div\",{onClick:this.props.onToggleIgnored,style:{display:\"inline-block\",float:\"right\",marginRight:\"20px\"},className:\"button small\"},r.a.createElement(l.a,{content:\"account.\"+(this.props.showIgnored?\"hide_ignored\":\"show_ignored\")})):null),r.a.createElement(\"table\",{className:\"table table-hover dashboard-table\",style:{fontSize:\"0.85rem\"}},this.props.compact?null:r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",{onClick:this._setSort.bind(this,\"star\"),className:\"clickable\"},r.a.createElement(b.a,{className:\"grey-star\",name:\"fi-star\",title:\"icons.fi_star.sort_accounts\"})),a?r.a.createElement(\"th\",null,r.a.createElement(b.a,{name:\"user\",title:\"icons.user.account\"})):null,r.a.createElement(\"th\",{style:{textAlign:\"left\"}},\"ID\"),r.a.createElement(\"th\",{style:{textAlign:\"left\",paddingLeft:10},onClick:this._setSort.bind(this,\"name\"),className:\"clickable\"},r.a.createElement(l.a,{content:\"header.account\"})),r.a.createElement(\"th\",{style:{textAlign:\"right\"}},r.a.createElement(l.a,{content:\"account.open_orders\"})),t>=750?r.a.createElement(\"th\",{style:{textAlign:\"right\"}},r.a.createElement(l.a,{content:\"account.as_collateral\"})):null,t>=1200?r.a.createElement(\"th\",{style:{textAlign:\"right\"}},r.a.createElement(l.a,{content:\"transaction.borrow_amount\"})):null,r.a.createElement(\"th\",{style:{textAlign:\"right\",marginRight:20}},r.a.createElement(l.a,{content:\"account.total_value\"})))),r.a.createElement(\"tbody\",null,s,n&&i.length?r.a.createElement(\"tr\",{className:\"dashboard-table--hiddenAccounts\",style:{backgroundColor:\"transparent\"},key:\"hidden\"},r.a.createElement(\"td\",{colSpan:\"8\"},E.a.translate(\"account.hidden_accounts_row\"),\":\")):null,n&&i)))}}]),t}();x.propTypes={accounts:h.a.ChainAccountsList.isRequired,ignoredAccounts:h.a.ChainAccountsList},x.defaultProps={width:2e3,compact:!1},x=Object(m.a)(x);var I=function(e){function t(){return S(this,t),T(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return O(t,r.a.Component),C(t,[{key:\"render\",value:function(){return r.a.createElement(x,this.props)}}]),t}();I=Object(A.a)(I);var j=Object(u.a)(I,{listenTo:function(){return[p.a,d.a,_.a]},getProps:function(){return{locked:d.a.getState().locked,starredAccounts:_.a.getState().starredAccounts,viewSettings:p.a.getState().viewSettings}}}),N=n(2015),P=n(43),L=n(587),D=n(178),B=n(2007),R=n(108),F=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},W=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();function H(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function z(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function M(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var q=function(e){function t(){return H(this,t),z(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return M(t,r.a.Component),W(t,[{key:\"render\",value:function(){return r.a.createElement(R.a,{stores:[_.a,p.a,D.a],inject:{contacts:function(){return _.a.getState().accountContacts},myActiveAccounts:function(){return _.a.getState().myActiveAccounts},myHiddenAccounts:function(){return _.a.getState().myHiddenAccounts},accountsReady:function(){return _.a.getState().accountsLoaded&&_.a.getState().refsLoaded},passwordAccount:function(){return _.a.getState().passwordAccount},currentEntry:p.a.getState().viewSettings.get(\"dashboardEntry\",\"accounts\")}},r.a.createElement(J,this.props))}}]),t}(),J=function(e){function t(e){H(this,t);var n=z(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.state={width:null,showIgnored:!1,currentEntry:e.currentEntry},n._setDimensions=n._setDimensions.bind(n),n}return M(t,r.a.Component),W(t,[{key:\"componentDidMount\",value:function(){this._setDimensions(),window.addEventListener(\"resize\",this._setDimensions,{capture:!1,passive:!0})}},{key:\"shouldComponentUpdate\",value:function(e,t){return e.myActiveAccounts!==this.props.myActiveAccounts||e.contacts!==this.props.contacts||e.ignoredAccounts!==this.props.ignoredAccounts||e.passwordAccount!==this.props.passwordAccount||t.width!==this.state.width||e.accountsReady!==this.props.accountsReady||t.showIgnored!==this.state.showIgnored||t.currentEntry!==this.state.currentEntry}},{key:\"componentWillUnmount\",value:function(){window.removeEventListener(\"resize\",this._setDimensions)}},{key:\"_setDimensions\",value:function(){var e=window.innerWidth;e!==this.state.width&&this.setState({width:e})}},{key:\"_onToggleIgnored\",value:function(){this.setState({showIgnored:!this.state.showIgnored})}},{key:\"_onSwitchType\",value:function(e){this.setState({currentEntry:e}),f.a.changeViewSetting({dashboardEntry:e})}},{key:\"render\",value:function(){var e=this.props,t=e.myActiveAccounts,n=e.myHiddenAccounts,a=e.accountsReady,o=e.passwordAccount,i=this.state,c=i.width,l=i.showIgnored;o&&!t.has(o)&&(t=t.add(o));var u=t.toArray().sort();o&&-1===u.indexOf(o)&&u.push(o);var p=n.toArray().sort(),d=t.size+n.size+(o?1:0);if(!a)return r.a.createElement(P.a,null);if(!d)return r.a.createElement(L.a,null);var h=this.props.contacts.toArray();return r.a.createElement(\"div\",{ref:\"wrapper\",className:\"grid-block page-layout vertical\"},r.a.createElement(\"div\",{ref:\"container\",className:\"tabs-container generic-bordered-box\"},r.a.createElement(B.b,{setting:\"accountTab\",className:\"account-tabs\",defaultActiveTab:1,segmented:!1,tabsClass:\"account-overview no-padding bordered-header content-block\"},r.a.createElement(B.a,{title:\"account.accounts\"},r.a.createElement(\"div\",{className:\"generic-bordered-box\"},r.a.createElement(\"div\",{className:\"box-content\"},r.a.createElement(j,{accounts:s.a.List(u),ignoredAccounts:s.a.List(p),width:c,onToggleIgnored:this._onToggleIgnored.bind(this),showIgnored:l,showMyAccounts:!0})))),r.a.createElement(B.a,{title:\"account.contacts\"},r.a.createElement(\"div\",{className:\"generic-bordered-box\"},r.a.createElement(\"div\",{className:\"box-content\"},r.a.createElement(j,{accounts:h,passwordAccount:o,ignoredAccounts:s.a.List(p),width:c,onToggleIgnored:this._onToggleIgnored.bind(this),showIgnored:l,isContactsList:!0})))),r.a.createElement(B.a,{title:\"account.recent\"},r.a.createElement(N.a,{accountsList:t,limit:10,compactView:!1,fullHeight:!0,showFilters:!0,dashboard:!0})))))}}]),t}();t.default=function(e){return r.a.createElement(q,F({},e,{onlyAccounts:!0}))}}}]);","extractedComments":[]}