{"map":"{\"version\":3,\"sources\":[\"/home/citshares/work/UI/bitshares-ui/app/components/Account/AccountBalance.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/citadel/WithdrawModalCitadel.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/blocktrades/WithdrawModalBlocktrades.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/XbtsxMethods.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/blocktrades/BlockTradesBridgeDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/BitKapital.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/rudex/RuDexWithdrawModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/RuDexMethods.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/bitspark/BitsparkWithdrawModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/winex/WinexWithdrawModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/xbtsx/XbtsxWithdrawModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/DisableCopyText.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/citadel/CitadelGatewayDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/citadel/CitadelGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/blocktrades/OpenledgerGatewayDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/OpenledgerGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/openledger/DepositFiatOpenLedger.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/openledger/WithdrawFiatOpenLedger.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/openledger/OpenLedgerFiatDepositWithdrawal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/openledger/OpenLedgerFiatTransactionHistory.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/CitadelDepositAddressCache.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/citadel/CitadelBridgeDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/RuDexDepositAddressCache.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/rudex/RuDexGatewayDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/rudex/RuDexGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/BitsparkMethods.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/bitspark/BitsparkGatewayDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/bitspark/BitsparkGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/gdexMethods.js\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/GdexCache.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/gdex/GdexWithdrawModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/gdex/GdexGatewayInfo.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/gdex/GdexHistory.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/gdex/GdexAgreementModal.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/gdex/GdexGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/winex/WinexRecentTransactions.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/winex/WinexGatewayRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/winex/WinexGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/lib/common/XbtsxDepositAddressCache.js\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/xbtsx/XbtsxGatewayDepositRequest.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/DepositWithdraw/xbtsx/XbtsxGateway.jsx\",\"/home/citshares/work/UI/bitshares-ui/app/components/Account/AccountDepositWithdraw.jsx\"],\"names\":[\"AccountBalance\",\"react__WEBPACK_IMPORTED_MODULE_0___default\",\"a\",\"Component\",\"asset_id\",\"this\",\"props\",\"asset\",\"get\",\"balance_id\",\"account\",\"getIn\",\"createElement\",\"_Utility_BalanceComponent__WEBPACK_IMPORTED_MODULE_4__\",\"balance\",\"replace\",\"_Utility_AssetName__WEBPACK_IMPORTED_MODULE_1__\",\"name\",\"propTypes\",\"_Utility_ChainTypes__WEBPACK_IMPORTED_MODULE_2__\",\"ChainAccount\",\"isRequired\",\"ChainAsset\",\"defaultProps\",\"autosubscribe\",\"__webpack_exports__\",\"Object\",\"_Utility_BindToChainState__WEBPACK_IMPORTED_MODULE_3__\",\"WithdrawModalCitadel\",\"_classCallCheck\",\"_this\",\"_possibleConstructorReturn\",\"__proto__\",\"getPrototypeOf\",\"call\",\"state\",\"isConfirmationModalVisible\",\"withdraw_amount\",\"amount_to_withdraw\",\"withdraw_address\",\"common_gatewayMethods__WEBPACK_IMPORTED_MODULE_10__\",\"getLast\",\"output_wallet_type\",\"withdraw_address_check_in_progress\",\"withdraw_address_is_valid\",\"options_is_valid\",\"confirmation_is_valid\",\"withdraw_address_selected\",\"memo\",\"withdraw_address_first\",\"empty_withdraw_value\",\"from_account\",\"fee_asset_id\",\"feeStatus\",\"_validateAddress\",\"_checkBalance\",\"bind\",\"_updateFee\",\"lodash_es_debounce__WEBPACK_IMPORTED_MODULE_0__\",\"showConfirmationModal\",\"hideConfirmationModal\",\"react__WEBPACK_IMPORTED_MODULE_1___default\",\"_checkFeeStatus\",\"unMounted\",\"np\",\"_this2\",\"setState\",\"feeAmount\",\"common_MarketClasses__WEBPACK_IMPORTED_MODULE_13__\",\"amount\",\"_this3\",\"arguments\",\"length\",\"undefined\",\"fee_asset_types\",\"_getAvailableAssets\",\"common_trxHelper__WEBPACK_IMPORTED_MODULE_12__\",\"accountID\",\"feeID\",\"options\",\"data\",\"type\",\"content\",\"output_coin_type\",\"then\",\"_ref\",\"fee\",\"hasBalance\",\"hasPoolBalance\",\"error\",\"_this4\",\"assets\",\"p\",\"forEach\",\"push\",\"Promise\",\"all\",\"status\",\"idx\",\"common_utils__WEBPACK_IMPORTED_MODULE_5__\",\"are_equal_shallow\",\"catch\",\"err\",\"console\",\"e\",\"target\",\"value\",\"_ref2\",\"parseFloat\",\"index\",\"new_withdraw_address\",\"setLast\",\"wallet\",\"address\",\"trim\",\"_this5\",\"url\",\"walletType\",\"newAddress\",\"isValid\",\"_state\",\"_props\",\"balanceError\",\"has\",\"withdrawals\",\"indexOf\",\"set\",\"addresses\",\"String\",\"prototype\",\"gateFee\",\"sendAmount\",\"precision\",\"real\",\"balanceAmount\",\"clone\",\"gateFeeAmount\",\"plus\",\"lt\",\"actions_AccountActions__WEBPACK_IMPORTED_MODULE_9__\",\"transfer\",\"issuer\",\"getAmount\",\"Buffer\",\"get_asset_precision\",\"parseInt\",\"keys\",\"toJS\",\"includes\",\"total\",\"minus\",\"ref\",\"nestedRef\",\"_ref3\",\"account_balances\",\"key\",\"sort\",\"sortID\",\"bitsharesjs_es__WEBPACK_IMPORTED_MODULE_11__\",\"getObject\",\"balanceObject\",\"splice\",\"priceIsValid\",\"base\",\"quote\",\"filter\",\"id\",\"hasFeePoolBalance\",\"_state2\",\"storedAddress\",\"asset_types\",\"invalid_address_message\",\"getWithdrawModalId\",\"confirmation\",\"className\",\"map\",\"onClick\",\"onSelectChanged\",\"style\",\"paddingTop\",\"react_translate_component__WEBPACK_IMPORTED_MODULE_2___default\",\"coin_type\",\"bitshares_ui_style_guide__WEBPACK_IMPORTED_MODULE_14__\",\"closable\",\"footer\",\"onSubmitConfirmation\",\"counterpart__WEBPACK_IMPORTED_MODULE_7___default\",\"translate\",\"marginLeft\",\"visible\",\"onCancel\",\"tabIndex\",\"withdraw_memo\",\"output_supports_memos\",\"component\",\"rows\",\"onChange\",\"onMemoChanged\",\"current_asset_id\",\"current\",\"borderBottom\",\"cursor\",\"onAccountBalance\",\"components_Utility_BalanceComponent__WEBPACK_IMPORTED_MODULE_6__\",\"disableSubmit\",\"components_Utility_AmountSelector__WEBPACK_IMPORTED_MODULE_8__\",\"label\",\"placeholder\",\"onWithdrawAmountChange\",\"display_balance\",\"refCallback\",\"setNestedRef\",\"disabled\",\"onFeeChanged\",\"paddingBottom\",\"output_coin_symbol\",\"onWithdrawAddressChanged\",\"autoComplete\",\"onDropDownList\",\"onSubmit\",\"hideModal\",\"components_Utility_ChainTypes__WEBPACK_IMPORTED_MODULE_3__\",\"output_coin_name\",\"prop_types__WEBPACK_IMPORTED_MODULE_15___default\",\"string\",\"bool\",\"ChainObject\",\"components_Utility_BindToChainState__WEBPACK_IMPORTED_MODULE_4__\",\"WithdrawModalBlocktrades\",\"bitsharesjs__WEBPACK_IMPORTED_MODULE_11__\",\"xbtsxStorage\",\"_localStorage__WEBPACK_IMPORTED_MODULE_0__\",\"requestDepositAddress\",\"inputCoinType\",\"outputCoinType\",\"outputAddress\",\"_ref$url\",\"api_apiConfig__WEBPACK_IMPORTED_MODULE_1__\",\"BASE\",\"stateCallback\",\"body\",\"body_string\",\"JSON\",\"stringify\",\"fetch\",\"method\",\"headers\",\"Headers\",\"Accept\",\"Content-Type\",\"reply\",\"json\",\"inputAddress\",\"inputMemo\",\"log\",\"validateAddress\",\"_ref2$url\",\"res\",\"WithdrawAddresses\",\"_ref4\",\"ButtonConversion\",\"conversion_memo\",\"react__WEBPACK_IMPORTED_MODULE_2___default\",\"_getCurrentBalance\",\"equals\",\"account_id\",\"_getFeeID\",\"common_gatewayMethods__WEBPACK_IMPORTED_MODULE_15__\",\"common_trxHelper__WEBPACK_IMPORTED_MODULE_13__\",\"common_utils__WEBPACK_IMPORTED_MODULE_9__\",\"confirm_store_state\",\"included\",\"broadcasted_transaction\",\"stores_TransactionConfirmStore__WEBPACK_IMPORTED_MODULE_11__\",\"unlisten\",\"onTrxIncluded\",\"reset\",\"closed\",\"_props2\",\"input_coin_type\",\"Error\",\"actions_AccountActions__WEBPACK_IMPORTED_MODULE_10__\",\"listen\",\"msg\",\"message\",\"split\",\"button_class\",\"onConvert\",\"react_translate_component__WEBPACK_IMPORTED_MODULE_3___default\",\"components_Utility_ChainTypes__WEBPACK_IMPORTED_MODULE_4__\",\"prop_types__WEBPACK_IMPORTED_MODULE_16___default\",\"account_name\",\"components_Utility_BindToChainState__WEBPACK_IMPORTED_MODULE_5__\",\"ButtonConversionContainer\",\"conversion_button\",\"common_MarketClasses__WEBPACK_IMPORTED_MODULE_14__\",\"ButtonWithdraw\",\"gateway\",\"showModal\",\"isNaN\",\"onWithdraw\",\"bitshares_ui_style_guide__WEBPACK_IMPORTED_MODULE_17__\",\"title\",\"counterpart__WEBPACK_IMPORTED_MODULE_1___default\",\"coin\",\"symbol\",\"overlay\",\"_WithdrawModalBlocktrades__WEBPACK_IMPORTED_MODULE_7__\",\"ButtonWithdrawContainer\",\"withdraw_button\",\"BlockTradesBridgeDepositRequest\",\"_this8\",\"refresh_interval\",\"deposit_address_cache\",\"common_BlockTradesDepositAddressCache__WEBPACK_IMPORTED_MODULE_8__\",\"coin_info_request_states\",\"request_in_progress\",\"request_complete\",\"request_failed\",\"estimation_directions\",\"output_from_input\",\"input_from_output\",\"isModalVisible\",\"coin_symbol\",\"key_for_withdrawal_dialog\",\"supports_output_memos\",\"api_apiConfig__WEBPACK_IMPORTED_MODULE_12__\",\"deposit_input_coin_type\",\"deposit_output_coin_type\",\"input_address_and_memo\",\"deposit_estimated_input_amount\",\"initial_deposit_estimated_input_amount\",\"deposit_estimated_output_amount\",\"deposit_limit\",\"deposit_error\",\"failed_calculate_deposit\",\"withdraw_input_coin_type\",\"withdraw_output_coin_type\",\"withdraw_estimated_input_amount\",\"initial_withdraw_estimated_input_amount\",\"withdraw_estimated_output_amount\",\"withdraw_limit\",\"withdraw_error\",\"failed_calculate_withdraw\",\"conversion_input_coin_type\",\"conversion_output_coin_type\",\"conversion_estimated_input_amount\",\"initial_conversion_estimated_input_amount\",\"conversion_estimated_output_amount\",\"conversion_limit\",\"conversion_error\",\"failed_calculate_conversion\",\"coin_info_request_state\",\"input_address_requests_in_progress\",\"deposit_estimate_direction\",\"deposit_limit_cache\",\"deposit_limit_requests_in_progress\",\"coins_by_type\",\"allowed_mappings_for_deposit\",\"allowed_mappings_for_withdraw\",\"allowed_mappings_for_conversion\",\"announcements\",\"checkUrl\",\"state_coin_info\",\"_this9\",\"announcements_promise\",\"response\",\"resolve\",\"result\",\"b\",\"priority\",\"coin_types_promise\",\"wallet_types_promise\",\"trading_pairs_promise\",\"active_wallets_promise\",\"json_responses\",\"_json_responses\",\"_slicedToArray\",\"coin_types\",\"trading_pairs\",\"active_wallets\",\"coinType\",\"pair\",\"input_coin_info\",\"output_coin_info\",\"backingCoinType\",\"restricted\",\"allowed_deposit_coin_types\",\"deposit_coin_type\",\"initial_deposit_input_coin_type\",\"output_coin_types_for_this_input\",\"initial_deposit_output_coin_type\",\"allowed_withdraw_coin_types\",\"withdraw_coin_type\",\"initial_withdraw_input_coin_type\",\"initial_withdraw_output_coin_type\",\"allowed_conversion_coin_types\",\"conversion_coin_type\",\"initial_conversion_input_coin_type\",\"initial_conversion_output_coin_type\",\"getCachedOrGeneratedInputAddress\",\"getCachedOrFreshDepositLimit\",\"getAndUpdateOutputEstimate\",\"withdraw_estimate_direction\",\"conversion_estimate_direction\",\"supportsOutputMemos\",\"new_input_address_and_memo\",\"new_deposit_limit\",\"new_deposit_estimated_input_amount\",\"new_deposit_estimated_output_amount\",\"getAndUpdateInputEstimate\",\"new_withdraw_limit\",\"new_withdraw_estimated_input_amount\",\"new_withdraw_estimated_output_amount\",\"getAndUpdateinputEstimate\",\"new_conversion_limit\",\"new_conversion_estimated_input_amount\",\"new_conversion_estimated_output_amount\",\"_this10\",\"urlConnection\",\"coin_types_promisecheck\",\"trading_pairs_promisecheck\",\"active_wallets_promisecheck\",\"_json_responses2\",\"update_timer\",\"setInterval\",\"updateEstimates\",\"clearInterval\",\"getCachedInputAddress\",\"cacheInputAddress\",\"_this11\",\"cached_input_address_and_memo\",\"assert\",\"deposit_limit_record\",\"Date\",\"timestamp\",\"deposit_withdraw_or_convert\",\"_this12\",\"getCachedDepositLimit\",\"deposit_limit_url\",\"encodeURIComponent\",\"new_deposit_limit_record\",\"limit\",\"depositLimit\",\"cacheDepositLimit\",\"_defineProperty\",\"input_amount\",\"_this13\",\"estimate_output_url\",\"user_message\",\"startsWith\",\"substr\",\"_this13$setState2\",\"inputAmount\",\"outputAmount\",\"output_amount\",\"_this14\",\"estimate_input_url\",\"_this14$setState\",\"event\",\"_setState\",\"new_estimated_input_amount\",\"new_estimated_output_amount\",\"_setState2\",\"_setState3\",\"_this15\",\"estimated_input_output_amount\",\"estimated_input_output_amount_state\",\"new_input_coin_type\",\"possible_output_coin_types\",\"new_output_coin_type\",\"allowed_withdraw_output_coin_type\",\"_setState4\",\"_this16\",\"withdraw_output_coin_types\",\"_this17\",\"issuer_account\",\"deposit_body\",\"deposit_header\",\"withdraw_body\",\"withdraw_header\",\"conversion_body\",\"conversion_header\",\"never_requested\",\"calcTextDeposit\",\"calcTextWithdraw\",\"calcTextConversion\",\"getOwnPropertyNames\",\"deposit_input_coin_type_options\",\"allowed_deposit_input_coin_type\",\"deposit_input_coin_type_select\",\"width\",\"onInputCoinTypeChanged\",\"deposit_output_coin_type_options\",\"allowed_deposit_output_coin_type\",\"walletSymbol\",\"deposit_output_coin_type_select\",\"onOutputCoinTypeChanged\",\"estimated_input_amount_text\",\"estimated_output_amount_text\",\"deposit_input_amount_edit_box\",\"onInputAmountChanged\",\"deposit_output_amount_edit_box\",\"onOutputAmountChanged\",\"deposit_limit_element\",\"format_number\",\"deposit_error_element\",\"deposit_address_and_memo_element\",\"unsafe\",\"_Account_AccountBalance__WEBPACK_IMPORTED_MODULE_6__\",\"withdraw_input_coin_type_options\",\"allowed_withdraw_input_coin_type\",\"withdraw_input_coin_type_select\",\"withdraw_output_coin_type_options\",\"withdraw_output_coin_type_select\",\"withdraw_input_amount_edit_box\",\"withdraw_output_amount_edit_box\",\"withdraw_error_element\",\"withdraw_limit_element\",\"conversion_input_coin_type_options\",\"allowed_conversion_input_coin_type\",\"conversion_input_coin_type_select\",\"conversion_output_coin_type_options\",\"allowed_conversion_output_coin_type\",\"conversion_output_coin_type_select\",\"conversion_input_amount_edit_box\",\"conversion_output_amount_edit_box\",\"conversion_error_element\",\"conversion_limit_element\",\"add_color\",\"format\",\"BitKapital\",\"action\",\"viewSettings\",\"min\",\"max\",\"_onSubmit\",\"padding\",\"fontWeight\",\"color\",\"textAlign\",\"_Account_AccountBalance__WEBPACK_IMPORTED_MODULE_8__\",\"required\",\"actions_SettingsActions__WEBPACK_IMPORTED_MODULE_7__\",\"changeViewSetting\",\"bktAction\",\"preventDefault\",\"bitKapital\",\"refs\",\"iban\",\"actions_AccountActions__WEBPACK_IMPORTED_MODULE_6__\",\"toUpperCase\",\"stores_TransactionConfirmStore__WEBPACK_IMPORTED_MODULE_5__\",\"jianjolly\",\"onay\",\"marginRight\",\"changeAction\",\"classnames__WEBPACK_IMPORTED_MODULE_4___default\",\"_renderDeposits\",\"_renderWithdrawals\",\"_Utility_ChainTypes__WEBPACK_IMPORTED_MODULE_1__\",\"_Utility_BindToChainState__WEBPACK_IMPORTED_MODULE_2__\",\"RuDexWithdrawModal\",\"common_RuDexMethods__WEBPACK_IMPORTED_MODULE_10__\",\"_checkMinAmount\",\"lessThanMinimum\",\"min_amount\",\"asset_precision\",\"minAmountError\",\"bitshares_ui_style_guide__WEBPACK_IMPORTED_MODULE_15__\",\"minAmount\",\"prop_types__WEBPACK_IMPORTED_MODULE_14___default\",\"number\",\"rudexStorage\",\"BitsparkWithdrawModal\",\"WinexWithdrawModal\",\"_checkWithdrawAmount\",\"_validMinAmount\",\"_calFinalNumber\",\"min_withdraw_amount\",\"flag\",\"minWithdrawError\",\"_props3\",\"fee_type\",\"drawGatefee\",\"finalNumber\",\"toFixed\",\"Price\",\"final_number\",\"max_withdraw_amount\",\"any\",\"XbtsxWithdrawModal\",\"common_XbtsxMethods__WEBPACK_IMPORTED_MODULE_10__\",\"minDeposit\",\"withdraw_fee\",\"spellcheck\",\"keep_updating\",\"DisableCopyText_DisableCopyText\",\"DisableCopyText\",\"_handleCopy\",\"react_default\",\"childRef\",\"node\",\"react_dom_default\",\"findDOMNode\",\"addEventListener\",\"removeEventListener\",\"evt\",\"disableCopy\",\"replaceCopyText\",\"clipboardData\",\"setData\",\"children\",\"prop_types_default\",\"DepositWithdraw_DisableCopyText\",\"CitadelGatewayDepositRequest_CitadelGatewayDepositRequest\",\"CitadelGatewayDepositRequest\",\"CitadelGatewayDepositRequest_classCallCheck\",\"CitadelGatewayDepositRequest_possibleConstructorReturn\",\"urls\",\"blocktrades\",\"apiConfig\",\"openledger\",\"citadel\",\"receive_address\",\"loading\",\"emptyAddressDeposit\",\"addDepositAddress\",\"receive_coin_type\",\"gatewayMethods\",\"_getDepositObject\",\"receive_asset\",\"foundation_api_default\",\"publish\",\"isDeposit\",\"emptyRow\",\"LoadingIndicator\",\"account_balances_object\",\"deprecated_in_favor_of\",\"has_nonzero_balance\",\"balance_object_id\",\"balance_object\",\"es\",\"indicatorButtonAddr\",\"margin\",\"withdraw_modal_id\",\"deposit_address_fragment\",\"deposit_memo\",\"clipboardText\",\"memoText\",\"deposit_account\",\"withdraw_memo_prefix\",\"isAvailable\",\"react_translate_component_default\",\"deposit_asset\",\"AssetName\",\"LinkToAccountById\",\"counterpart_default\",\"lib_default\",\"text\",\"requestDepositAddressLoad\",\"fontSize\",\"main\",\"deposit_asset_name\",\"deposit_wallet_type\",\"memo_prefix\",\"modal_id\",\"ChainTypes\",\"deprecated_message\",\"citadel_CitadelGatewayDepositRequest\",\"BindToChainState\",\"CitadelGateway_CitadelGateway\",\"CitadelGateway\",\"CitadelGateway_classCallCheck\",\"CitadelGateway_possibleConstructorReturn\",\"provider\",\"activeCoin\",\"_getActiveCoin\",\"cachedCoin\",\"firstTimeCoin\",\"nextProps\",\"setting\",\"SettingsActions\",\"coins\",\"filteredCoins\",\"depositAllowed\",\"withdrawalAllowed\",\"coinOptions\",\"option\",\"minHeight\",\"onSelectCoin\",\"marginBottom\",\"intermediateAccount\",\"toLowerCase\",\"depositAccount\",\"supportsMemos\",\"href\",\"rel\",\"RecentTransactions\",\"fromAccount\",\"to\",\"accountsList\",\"immutable_default\",\"List\",\"compactView\",\"fullHeight\",\"customFilter\",\"fields\",\"values\",\"from\",\"src\",\"listenTo\",\"SettingsStore\",\"getProps\",\"getState\",\"OpenledgerGatewayDepositRequest_OpenledgerGatewayDepositRequest\",\"OpenledgerGatewayDepositRequest\",\"OpenledgerGatewayDepositRequest_classCallCheck\",\"OpenledgerGatewayDepositRequest_possibleConstructorReturn\",\"addressToCopy\",\"blocktrades_OpenledgerGatewayDepositRequest\",\"OpenledgerGateway_OpenledgerGateway\",\"OpenledgerGateway\",\"OpenledgerGateway_classCallCheck\",\"OpenledgerGateway_possibleConstructorReturn\",\"OpenledgerGateway_defineProperty\",\"support\",\"DepositWithdraw_OpenledgerGateway\",\"DepositFiatOpenLedger_DepositFiatOpenLedger\",\"DepositFiatOpenLedger\",\"DepositFiatOpenLedger_classCallCheck\",\"DepositFiatOpenLedger_possibleConstructorReturn\",\"deposit_amount\",\"deposit_info\",\"utils\",\"json_rpc_request\",\"jsonrpc\",\"params\",\"bitsharesAccountName\",\"currency\",\"rpc_url\",\"content-type\",\"json_response\",\"json_reponse\",\"onClose\",\"link\",\"table_lines\",\"hasOwnProperty\",\"AmountSelector\",\"onDepositAmountChange\",\"onSubmitDeposit\",\"openledger_DepositFiatOpenLedger\",\"WithdrawFiatOpenLedger_WithdrawFiatOpenLedger\",\"WithdrawFiatOpenLedger\",\"WithdrawFiatOpenLedger_classCallCheck\",\"WithdrawFiatOpenLedger_possibleConstructorReturn\",\"json_repsonse\",\"AccountActions\",\"alert\",\"BalanceComponent\",\"trigger_default\",\"close\",\"openledger_WithdrawFiatOpenLedger\",\"OpenLedgerFiatDepositWithdrawal_OpenLedgerFiatDepositWithdrawCurrency\",\"OpenLedgerFiatDepositWithdrawCurrency\",\"OpenLedgerFiatDepositWithdrawal_classCallCheck\",\"OpenLedgerFiatDepositWithdrawal_possibleConstructorReturn\",\"getDepositModalId\",\"display\",\"WalletDb\",\"getWallet\",\"deposit_modal_id\",\"deposit_fragment\",\"deposit_allowed\",\"onDeposit\",\"BaseModal\",\"withdraw_fragment\",\"withdraw_allowed\",\"OpenLedgerFiatDepositWithdrawal_OpenLedgerFiatDepositWithdrawal\",\"OpenLedgerFiatDepositWithdrawal\",\"allowedFiatCurrencies\",\"deposit\",\"withdraw\",\"openledger_OpenLedgerFiatDepositWithdrawal\",\"OpenLedgerFiatTransactionHistory_OpenLedgerFiatTransactionHistory\",\"OpenLedgerFiatTransactionHistory\",\"OpenLedgerFiatTransactionHistory_classCallCheck\",\"OpenLedgerFiatTransactionHistory_possibleConstructorReturn\",\"current_status\",\"deposits\",\"openledger_withdrawal_history_fragment\",\"openledger_withdrawal_history_rows\",\"i\",\"openledger_deposit_history_fragment\",\"openledger_deposit_history_rows\",\"openledger_transaction_history_fragment\",\"onShowOpenLedgerTransactionHistory\",\"button_label\",\"openledger_OpenLedgerFiatTransactionHistory\",\"ss\",\"localStorage\",\"common_CitadelDepositAddressCache\",\"CitadelDepositAddressCache\",\"CitadelDepositAddressCache_classCallCheck\",\"current_citadel_address_cache_version_string\",\"reduce\",\"previous\",\"concat\",\"exchange_name\",\"getIndexForDepositKeyInExchange\",\"deposit_keys\",\"number_of_keys\",\"k\",\"_updateWallet\",\"CitadelBridgeDepositRequest_ButtonWithdraw\",\"CitadelBridgeDepositRequest_ButtonWithdrawContainer\",\"CitadelBridgeDepositRequest_CitadelBridgeDepositRequest\",\"CitadelBridgeDepositRequest\",\"CitadelBridgeDepositRequest_classCallCheck\",\"CitadelBridgeDepositRequest_possibleConstructorReturn\",\"_this6\",\"_this7\",\"CitadelBridgeDepositRequest_defineProperty\",\"_this8$setState2\",\"_this8$setState3\",\"_this9$setState\",\"alignItems\",\"wordBreak\",\"common_RuDexDepositAddressCache\",\"RuDexDepositAddressCache\",\"RuDexDepositAddressCache_classCallCheck\",\"current_rudex_address_cache_version_string\",\"RuDexGatewayDepositRequest_RuDexGatewayDepositRequest\",\"RuDexGatewayDepositRequest\",\"RuDexGatewayDepositRequest_classCallCheck\",\"RuDexGatewayDepositRequest_possibleConstructorReturn\",\"rudex_RuDexGatewayDepositRequest\",\"RuDexGateway_RuDexGateway\",\"RuDexGateway\",\"RuDexGateway_classCallCheck\",\"RuDexGateway_possibleConstructorReturn\",\"RuDexGateway_defineProperty\",\"backingCoin\",\"gatewayWallet\",\"memoSupport\",\"issuerId\",\"rudex_RuDexGateway\",\"getDepositAddress\",\"depositRequests\",\"BitsparkGatewayDepositRequest_BitsparkGatewayDepositRequest\",\"BitsparkGatewayDepositRequest\",\"BitsparkGatewayDepositRequest_classCallCheck\",\"BitsparkGatewayDepositRequest_possibleConstructorReturn\",\"_copy\",\"document\",\"selectedGateway\",\"gateways\",\"execCommand\",\"toClipboard\",\"bitspark_BitsparkGatewayDepositRequest\",\"BitsparkGateway_BitsparkGateway\",\"BitsparkGateway\",\"BitsparkGateway_classCallCheck\",\"BitsparkGateway_possibleConstructorReturn\",\"BitsparkGateway_defineProperty\",\"bitspark\",\"bitspark_BitsparkGateway\",\"gdexStorage\",\"assetsRequest\",\"REQUEST_TIMEOUT\",\"getTransactionRecordList\",\"reqBody\",\"timeout\",\"requestSimple\",\"DEPOSIT_RECORD_LIST\",\"getDepositRecordList\",\"WITHDRAW_RECORD_LIST\",\"getWithdrawRecordList\",\"reqUrl\",\"requestWithTimeout\",\"requestChannel\",\"version\",\"getTime\",\"outerChannel\",\"reject\",\"code\",\"requestWithoutTimeout\",\"race\",\"setTimeout\",\"gdexMethods_WithdrawAddresses\",\"session\",\"common_GdexCache\",\"GdexCache\",\"GdexCache_classCallCheck\",\"current_gdex_address_cache_version_string\",\"day\",\"user_account\",\"user_info\",\"cur_time\",\"Math\",\"floor\",\"abs\",\"ctime\",\"remove\",\"user_id\",\"del\",\"getIndexForDepositKey\",\"clearInputAddress\",\"GdexWithdrawModal_GdexWithdrawModal\",\"GdexWithdrawModal\",\"GdexWithdrawModal_classCallCheck\",\"GdexWithdrawModal_possibleConstructorReturn\",\"below_minumum_withdraw_value\",\"precision_error\",\"memo_error\",\"memo_length_error\",\"withdraw_address_error_code\",\"withdraw_address_error_message\",\"debounce\",\"MarketClasses\",\"memo_rule\",\"memo_message\",\"item\",\"slice\",\"trxHelper\",\"_assembleMemo\",\"CHECK_WITHDRAY_ADDRESS\",\"gdexMethods_validateAddress\",\"assetId\",\"output_coin_id\",\"assetName\",\"valid\",\"output_coin_precision\",\"toString\",\"minWithdrawAmount\",\"_checkPrecision\",\"gdex_GdexWithdrawModal\",\"GdexGatewayInfo_GdexGatewayInfo\",\"GdexGatewayInfo\",\"GdexGatewayInfo_classCallCheck\",\"GdexGatewayInfo_possibleConstructorReturn\",\"isQrModalVisible\",\"qrcode\",\"showQrModal\",\"hideQrModal\",\"_getDepositAddress\",\"user_name\",\"cached_receive_address\",\"outerSymbol\",\"innerSymbol\",\"GET_DEPOSIT_ADDRESS\",\"gdexMethods_requestDepositAddress\",\"btsAssetId\",\"innerAssetId\",\"outAssetId\",\"outerAssetId\",\"uid\",\"userAccount\",\"btsCoin\",\"onShowQrcode\",\"GdexGatewayInfo_DepositQrCodeModal\",\"outerAssetName\",\"needMemo\",\"minTransactionAmount\",\"relationPrecision\",\"DepositQrCodeModal\",\"qrcode_react_lib_default\",\"size\",\"textTransform\",\"gdex_GdexGatewayInfo\",\"DEPOSIT_STATUS\",\"1\",\"2\",\"3\",\"4\",\"5\",\"WITHDRAW_STATUS\",\"6\",\"7\",\"GdexHistory_GdexHistory\",\"GdexHistory\",\"GdexHistory_classCallCheck\",\"GdexHistory_possibleConstructorReturn\",\"headerHeight\",\"pageNum\",\"totalNum\",\"nextPageEnabled\",\"allData\",\"historyStatusType\",\"recordType\",\"historyStatusValue\",\"getTransactionHistory\",\"userId\",\"_getTransactionHistory\",\"nextState\",\"force\",\"pageSize\",\"records\",\"txid\",\"time\",\"unixtime\",\"parse\",\"join\",\"failReason\",\"maxHeight\",\"history\",\"height\",\"display_history\",\"o\",\"colSpan\",\"Icon\",\"dashboard\",\"gdex_GdexHistory\",\"GdexAgreementModal_GdexAgreementModal\",\"GdexAgreementModal\",\"GdexAgreementModal_classCallCheck\",\"GdexAgreementModal_possibleConstructorReturn\",\"locale\",\"settings\",\"agreement\",\"perfect_scrollbar_default\",\"initialize\",\"update\",\"overflow\",\"position\",\"_getAgreement\",\"gdex_GdexAgreementModal\",\"gdexPublicKey\",\"__webpack_require__\",\"GdexGateway_GdexGateway\",\"GdexGateway\",\"GdexGateway_classCallCheck\",\"GdexGateway_possibleConstructorReturn\",\"isAgreementVisible\",\"activeCoinInfo\",\"_getActiveCoinInfo\",\"down\",\"isAgree\",\"agreeChecked\",\"agreeNotice\",\"intermediate\",\"user_info_cache\",\"showAgreement\",\"hideAgreement\",\"cachedCoinName\",\"cachedCoinId\",\"firstTimeCoinName\",\"activeCoinName\",\"activeCoinId\",\"_getWithdrawRule\",\"innerAssetName\",\"assetSymbol\",\"relationId\",\"relationSymbol\",\"withdrawStatus\",\"withdrawFees\",\"depositStatus\",\"depositFees\",\"minDepositAmount\",\"userName\",\"GET_USER_INFO\",\"fetchUserInfo\",\"user\",\"agreeAgreement\",\"cacheUserInfo\",\"delUserInfo\",\"requestType\",\"assetType\",\"ASSET_LIST\",\"fetchAssets\",\"trans_data\",\"_transformCoin\",\"errMsg\",\"getUserInfo\",\"USER_AGREEMENT\",\"userAgreement\",\"agree\",\"_getUserInfo\",\"_checkIsAgree\",\"_getCoins\",\"_getWithdrawAssetId\",\"WITHDRAW_RULE\",\"fetchWithdrawRule\",\"decryptPublic\",\"transferToAccount\",\"memoRule\",\"GdexGateway_defineProperty\",\"supportContent\",\"checked\",\"_updateCheck\",\"_showUserAgreement\",\"marginTop\",\"_registerUser\",\"actionType\",\"infos\",\"gdex_GdexGateway\",\"WinexRecentTransactions_WinexRecentTransactions\",\"WinexRecentTransactions\",\"WinexRecentTransactions_classCallCheck\",\"WinexRecentTransactions_possibleConstructorReturn\",\"trans_history\",\"DEPOSIT_HISTORY\",\"WITHDRAW_HISTORY\",\"head\",\"mode\",\"cache\",\"ok\",\"LogError\",\"datas\",\"_history\",\"account_record\",\"record\",\"createDate\",\"winex_WinexRecentTransactions\",\"WinexGatewayRequest_WinexGatewayRequest\",\"WinexGatewayRequest\",\"WinexGatewayRequest_classCallCheck\",\"WinexGatewayRequest_possibleConstructorReturn\",\"BlockTradesDepositAddressCache\",\"Winex\",\"qq\",\"support_block\",\"winex_WinexGatewayRequest\",\"WinexGateway_WinexGateway\",\"WinexGateway\",\"WinexGateway_classCallCheck\",\"WinexGateway_possibleConstructorReturn\",\"WinexGateway_defineProperty\",\"COINS_LIST\",\"TRADING_PAIRS\",\"ACTIVE_WALLETS\",\"_result\",\"WinexGateway_slicedToArray\",\"tradingPairs\",\"wallets\",\"backedCoins\",\"_getBackedCoins\",\"allCoins\",\"allowed_outputs_by_input\",\"blocktradesBackedCoins\",\"isDepositAllowed\",\"isWithdrawalAllowed\",\"maxWithdrawAmount\",\"maxAmount\",\"feeType\",\"gateFeeType\",\"common_XbtsxDepositAddressCache\",\"XbtsxDepositAddressCache\",\"XbtsxDepositAddressCache_classCallCheck\",\"current_xbtsx_address_cache_version_string\",\"XbtsxGatewayDepositRequest_XbtsxGatewayDepositRequest\",\"XbtsxGatewayDepositRequest\",\"XbtsxGatewayDepositRequest_classCallCheck\",\"XbtsxGatewayDepositRequest_possibleConstructorReturn\",\"XbtsxMethods\",\"payFromWallet\",\"showPayFromWallet\",\"deposit_fee\",\"xbtsx_XbtsxGatewayDepositRequest\",\"XbtsxGateway_XbtsxGateway\",\"XbtsxGateway\",\"XbtsxGateway_classCallCheck\",\"XbtsxGateway_possibleConstructorReturn\",\"XbtsxGateway_defineProperty\",\"xbtsx_XbtsxGateway\",\"AccountDepositWithdraw_AccountDepositWithdraw\",\"AccountDepositWithdraw\",\"AccountDepositWithdraw_classCallCheck\",\"AccountDepositWithdraw_possibleConstructorReturn\",\"olService\",\"rudexService\",\"bitsparkService\",\"xbtsxService\",\"btService\",\"citadelService\",\"metaService\",\"activeService\",\"servicesDown\",\"blockTradesBackedCoins\",\"openLedgerBackedCoins\",\"citadelBackedCoins\",\"account_utils\",\"getFinalFeeAsset\",\"service\",\"openLedgerGatewayCoins\",\"rudexGatewayCoins\",\"bitsparkGatewayCoins\",\"xbtsxGatewayCoins\",\"serList\",\"template\",\"toggleOLService\",\"RPC_URL\",\"toggleRuDEXService\",\"toggleBitSparkService\",\"toggleXbtsxService\",\"toggleCTService\",\"rudexBackedCoins\",\"bitsparkBackedCoins\",\"xbtsxBackedCoins\",\"services\",\"renderServices\",\"services_obj\",\"currentServiceName\",\"currentServiceDown\",\"contained\",\"DepositModal\",\"modalId\",\"currentAccount\",\"WithdrawModalNew\",\"TranslateWithLinks\",\"arg\",\"deposit_modal\",\"show\",\"withdraw_modal\",\"HelpContent\",\"path\",\"section\",\"onSetService\",\"AccountImage\",\"custom_image\",\"onKeyDown\",\"AccountDepositWithdraw_DepositStoreWrapper\",\"gatewayUtils\",\"AccountStore\",\"GatewayStore\",\"passwordAccount\",\"winexBackedCoins\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport AssetName from \\\"../Utility/AssetName\\\";\\nimport ChainTypes from \\\"../Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"../Utility/BindToChainState\\\";\\nimport BalanceComponent from \\\"../Utility/BalanceComponent\\\";\\n\\n/**\\n *  Given a balance_object, displays it in a pretty way\\n *\\n *  Expects one property, 'balance' which should be a balance_object id\\n */\\n\\nclass AccountBalance extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    render() {\\n        let asset_id = this.props.asset.get(\\\"id\\\");\\n        let balance_id = this.props.account.getIn([\\\"balances\\\", asset_id]);\\n\\n        if (balance_id)\\n            return (\\n                <BalanceComponent\\n                    balance={balance_id}\\n                    replace={this.props.replace}\\n                />\\n            );\\n        else\\n            return (\\n                <span>\\n                    0&nbsp;<AssetName\\n                        name={this.props.asset.get(\\\"symbol\\\")}\\n                        replace={this.props.replace}\\n                    />\\n                </span>\\n            );\\n    }\\n}\\n\\nexport default BindToChainState(AccountBalance);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/gatewayMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs/es\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {Price, Asset} from \\\"common/MarketClasses\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass WithdrawModalCitadel extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        balance: ChainTypes.ChainObject\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            this._checkBalance\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                const amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                const gateFee =\\n                    typeof this.props.gateFee != \\\"undefined\\\"\\n                        ? parseFloat(\\n                              String.prototype.replace.call(\\n                                  this.props.gateFee,\\n                                  /,/g,\\n                                  \\\"\\\"\\n                              )\\n                          )\\n                        : 0.0;\\n\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                let balanceAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: 0\\n                });\\n\\n                if (typeof this.props.balance != \\\"undefined\\\") {\\n                    balanceAmount = sendAmount.clone(\\n                        this.props.balance.get(\\\"balance\\\")\\n                    );\\n                }\\n\\n                const gateFeeAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: gateFee\\n                });\\n\\n                sendAmount.plus(gateFeeAmount);\\n\\n                /* Insufficient balance */\\n                if (balanceAmount.lt(sendAmount)) {\\n                    sendAmount = balanceAmount;\\n                }\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"blocktrades-disabled-options\\\"\\n                            : \\\"blocktrades-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        const disableSubmit =\\n            this.state.error ||\\n            this.state.balanceError ||\\n            !this.state.withdraw_amount;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: 0}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"blocktrades-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"blocktrades-position-options\\\">\\n                            {options}\\n                        </div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={disableSubmit}\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(WithdrawModalCitadel);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/gatewayMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {Price, Asset} from \\\"common/MarketClasses\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass WithdrawModalBlocktrades extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        balance: ChainTypes.ChainObject\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            this._checkBalance\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                const amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                const gateFee =\\n                    typeof this.props.gateFee != \\\"undefined\\\"\\n                        ? parseFloat(\\n                              String.prototype.replace.call(\\n                                  this.props.gateFee,\\n                                  /,/g,\\n                                  \\\"\\\"\\n                              )\\n                          )\\n                        : 0.0;\\n\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                let balanceAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: 0\\n                });\\n\\n                if (typeof this.props.balance != \\\"undefined\\\") {\\n                    balanceAmount = sendAmount.clone(\\n                        this.props.balance.get(\\\"balance\\\")\\n                    );\\n                }\\n\\n                const gateFeeAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: gateFee\\n                });\\n\\n                sendAmount.plus(gateFeeAmount);\\n\\n                /* Insufficient balance */\\n                if (balanceAmount.lt(sendAmount)) {\\n                    sendAmount = balanceAmount;\\n                }\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"blocktrades-disabled-options\\\"\\n                            : \\\"blocktrades-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        const disableSubmit =\\n            this.state.error ||\\n            this.state.balanceError ||\\n            !this.state.withdraw_amount;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: 0}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"blocktrades-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"blocktrades-position-options\\\">\\n                            {options}\\n                        </div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={disableSubmit}\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(WithdrawModalBlocktrades);\\n\",\"import ls from \\\"./localStorage\\\";\\nimport {xbtsxAPIs} from \\\"api/apiConfig\\\";\\nconst xbtsxStorage = new ls(\\\"\\\");\\n\\nexport function fetchCoinList(url = xbtsxAPIs.BASE + xbtsxAPIs.COINS_LIST) {\\n    return fetch(url, {method: \\\"post\\\"})\\n        .then(reply =>\\n            reply.json().then(result => {\\n                return result;\\n            })\\n        )\\n        .catch(err => {\\n            console.log(\\\"error fetching xbtsx list of coins\\\", err, url);\\n        });\\n}\\n\\nexport function requestDepositAddress({\\n    walletType,\\n    inputCoinType,\\n    outputCoinType,\\n    outputAddress,\\n    url = xbtsxAPIs.BASE,\\n    stateCallback\\n}) {\\n    let body = {\\n        inputCoinType,\\n        outputCoinType,\\n        outputAddress\\n    };\\n\\n    let body_string = JSON.stringify(body);\\n\\n    fetch(url + `/wallets/${walletType}/new-deposit-address`, {\\n        method: \\\"post\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: body_string\\n    })\\n        .then(\\n            reply => {\\n                reply.json().then(\\n                    json => {\\n                        // console.log( \\\"reply: \\\", json )\\n                        let address = {\\n                            address: json.inputAddress || \\\"unknown\\\",\\n                            memo: json.inputMemo,\\n                            error: json.error || null\\n                        };\\n                        if (stateCallback) stateCallback(address);\\n                    },\\n                    error => {\\n                        // console.log( \\\"error: \\\",error  );\\n                        if (stateCallback)\\n                            stateCallback({address: \\\"unknown\\\", memo: null});\\n                    }\\n                );\\n            },\\n            error => {\\n                // console.log( \\\"error: \\\",error  );\\n                if (stateCallback)\\n                    stateCallback({address: \\\"unknown\\\", memo: null});\\n            }\\n        )\\n        .catch(err => {\\n            console.log(\\\"fetch error:\\\", err);\\n        });\\n}\\n\\nexport function validateAddress({\\n    url = xbtsxAPIs.BASE,\\n    walletType,\\n    newAddress\\n}) {\\n    if (!newAddress) return new Promise(res => res());\\n    return fetch(url + \\\"/wallets/\\\" + walletType + \\\"/check-address\\\", {\\n        method: \\\"post\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: JSON.stringify({address: newAddress})\\n    })\\n        .then(reply => reply.json().then(json => json.isValid))\\n        .catch(err => {\\n            console.log(\\\"validate error:\\\", err);\\n        });\\n}\\n\\nfunction hasWithdrawalAddress(wallet) {\\n    return xbtsxStorage.has(`history_address_${wallet}`);\\n}\\n\\nfunction setWithdrawalAddresses({wallet, addresses}) {\\n    xbtsxStorage.set(`history_address_${wallet}`, addresses);\\n}\\n\\nfunction getWithdrawalAddresses(wallet) {\\n    return xbtsxStorage.get(`history_address_${wallet}`, []);\\n}\\n\\nfunction setLastWithdrawalAddress({wallet, address}) {\\n    xbtsxStorage.set(`history_address_last_${wallet}`, address);\\n}\\n\\nfunction getLastWithdrawalAddress(wallet) {\\n    return xbtsxStorage.get(`history_address_last_${wallet}`, \\\"\\\");\\n}\\n\\nexport const WithdrawAddresses = {\\n    has: hasWithdrawalAddress,\\n    set: setWithdrawalAddresses,\\n    get: getWithdrawalAddresses,\\n    setLast: setLastWithdrawalAddress,\\n    getLast: getLastWithdrawalAddress\\n};\\n\",\"import counterpart from \\\"counterpart\\\";\\nimport React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport WithdrawModalBlocktrades from \\\"./WithdrawModalBlocktrades\\\";\\nimport BlockTradesDepositAddressCache from \\\"common/BlockTradesDepositAddressCache\\\";\\nimport utils from \\\"common/utils\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport TransactionConfirmStore from \\\"stores/TransactionConfirmStore\\\";\\nimport {blockTradesAPIs} from \\\"api/apiConfig\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Asset} from \\\"common/MarketClasses\\\";\\nimport {getConversionJson} from \\\"common/gatewayMethods\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass ButtonConversion extends React.Component {\\n    static propTypes = {\\n        balance: ChainTypes.ChainObject,\\n        input_coin_type: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        account_name: PropTypes.string.isRequired,\\n        account_id: PropTypes.string.isRequired,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            error: null,\\n            conversion_memo: null,\\n\\n            // Fee estimation\\n            feeStatus: {}\\n        };\\n\\n        this._updateFee = debounce(this._updateFee.bind(this), 150);\\n        this._checkFeeStatus = this._checkFeeStatus.bind(this);\\n        this._checkBalance = this._checkBalance.bind(this);\\n    }\\n\\n    _getFeeID(props = this.props) {\\n        const balance = this._getCurrentBalance(props);\\n        const balances = props.account.get(\\\"balances\\\");\\n        let feeID = balances.has(\\\"1.3.0\\\")\\n            ? \\\"1.3.0\\\"\\n            : balance\\n                ? balance.get(\\\"asset_type\\\")\\n                : \\\"1.3.0\\\";\\n        return feeID;\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            !np.amount.equals(this.props.amount) ||\\n            np.account_id !== this.props.account_id\\n        ) {\\n            this._updateFee();\\n        }\\n    }\\n\\n    _updateFee() {\\n        const feeID = this._getFeeID();\\n        getConversionJson(this.props).then(json => {\\n            checkFeeStatusAsync({\\n                accountID: this.props.account_id,\\n                feeID: feeID,\\n                options: [\\\"price_per_kbyte\\\"],\\n                data: {\\n                    type: \\\"memo\\\",\\n                    content: json.inputMemo\\n                }\\n            }).then(({fee, hasBalance, hasPoolBalance}) => {\\n                if (this.unMounted) return;\\n\\n                this.setState(\\n                    {\\n                        feeAmount: fee,\\n                        hasBalance,\\n                        hasPoolBalance,\\n                        error: !hasBalance || !hasPoolBalance\\n                    },\\n                    this._checkFeeStatus\\n                );\\n            });\\n        });\\n    }\\n\\n    _checkFeeStatus(account = this.props.account) {\\n        if (!account) return;\\n\\n        let assets = Object.keys(this.props.account.get(\\\"balances\\\").toJS());\\n        if (!assets.length) assets = [\\\"1.3.0\\\"];\\n        let feeStatus = {};\\n        let p = [];\\n        getConversionJson(this.props).then(json => {\\n            assets.forEach(a => {\\n                p.push(\\n                    checkFeeStatusAsync({\\n                        accountID: account.get(\\\"id\\\"),\\n                        feeID: a,\\n                        options: [\\\"price_per_kbyte\\\"],\\n                        data: {\\n                            type: \\\"memo\\\",\\n                            content: json.inputMemo\\n                        }\\n                    })\\n                );\\n            });\\n            Promise.all(p)\\n                .then(status => {\\n                    if (this.unMounted) return;\\n\\n                    assets.forEach((a, idx) => {\\n                        feeStatus[a] = status[idx];\\n                    });\\n\\n                    if (\\n                        !utils.are_equal_shallow(\\n                            this.state.feeStatus,\\n                            feeStatus\\n                        )\\n                    ) {\\n                        this.setState({\\n                            feeStatus\\n                        });\\n                    }\\n                    this._checkBalance();\\n                })\\n                .catch(err => {\\n                    console.error(err);\\n                });\\n        });\\n    }\\n\\n    _getCurrentBalance(props = this.props) {\\n        return props.balance;\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount} = this.state;\\n        const {asset, amount} = this.props;\\n        const balance = this._getCurrentBalance();\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            amount.getAmount({real: true}),\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    onTrxIncluded(confirm_store_state) {\\n        if (\\n            confirm_store_state.included &&\\n            confirm_store_state.broadcasted_transaction\\n        ) {\\n            // this.setState(Transfer.getInitialState());\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        } else if (confirm_store_state.closed) {\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        }\\n    }\\n\\n    onConvert() {\\n        const {input_coin_type, output_coin_type, amount} = this.props;\\n        const {balanceError} = this.state;\\n        getConversionJson(this.props)\\n            .then(json => {\\n                if (\\n                    json.inputCoinType != input_coin_type ||\\n                    json.outputCoinType != output_coin_type\\n                ) {\\n                    throw new Error(\\\"unexpected reply from initiate-trade\\\");\\n                }\\n                if (\\n                    input_coin_type == json.inputCoinType &&\\n                    output_coin_type == json.outputCoinType &&\\n                    !balanceError\\n                ) {\\n                    this.setState({conversion_memo: json.inputMemo});\\n                    this.setState({error: null});\\n                    // let precision = utils.get_asset_precision(this.props.asset.get(\\\"precision\\\"));\\n                    // let amount = this.props.amount.replace( /,/g, \\\"\\\" );\\n\\n                    AccountActions.transfer(\\n                        this.props.account_id,\\n                        \\\"1.2.32567\\\",\\n                        amount.getAmount(),\\n                        this.props.asset.get(\\\"id\\\"),\\n                        json.inputMemo\\n                            ? new Buffer(json.inputMemo, \\\"utf-8\\\")\\n                            : \\\"\\\",\\n                        null,\\n                        this._getFeeID()\\n                    )\\n                        .then(() => {\\n                            TransactionConfirmStore.unlisten(\\n                                this.onTrxIncluded\\n                            );\\n                            TransactionConfirmStore.listen(this.onTrxIncluded);\\n                        })\\n                        .catch(e => {\\n                            let msg = e.message\\n                                ? e.message.split(\\\"\\\\n\\\")[1]\\n                                : null;\\n                            console.log(\\\"error: \\\", e, msg);\\n                            this.setState({error: msg});\\n                        });\\n                }\\n            })\\n            .catch(() => {\\n                this.setState({conversion_memo: null});\\n            });\\n    }\\n\\n    render() {\\n        let button_class = \\\"button disabled\\\";\\n        if (\\n            Object.keys(this.props.account_balances.toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            if (\\n                !this.state.balanceError &&\\n                this.state.hasBalance &&\\n                this.props.amount.getAmount() > 0\\n            ) {\\n                button_class = \\\"button\\\";\\n            }\\n        }\\n\\n        return (\\n            <span>\\n                <button\\n                    className={button_class}\\n                    onClick={this.onConvert.bind(this)}\\n                >\\n                    <Translate content=\\\"\\\" />\\n                    <Translate content=\\\"gateway.convert_now\\\" />\\n                </button>\\n                {this.state.balanceError ? (\\n                    <div style={{paddingTop: 15}} className=\\\"has-error\\\">\\n                        <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                    </div>\\n                ) : null}\\n            </span>\\n        );\\n    }\\n}\\n\\nButtonConversion = BindToChainState(ButtonConversion);\\n\\nclass ButtonConversionContainer extends React.Component {\\n    static propTypes = {\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        input_coin_type: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        account_name: PropTypes.string.isRequired,\\n        account_id: PropTypes.string.isRequired,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    render() {\\n        let conversion_button = (\\n            <ButtonConversion\\n                asset={this.props.asset}\\n                account={this.props.account}\\n                input_coin_type={this.props.input_coin_type}\\n                output_coin_type={this.props.output_coin_type}\\n                account_name={this.props.account_name}\\n                amount={\\n                    new Asset({\\n                        real: this.props.amount,\\n                        asset_id: this.props.asset.get(\\\"id\\\"),\\n                        precision: this.props.asset.get(\\\"precision\\\")\\n                    })\\n                }\\n                account_id={this.props.account_id}\\n                account_balances={this.props.account_balances}\\n                url={this.props.url}\\n                balance={\\n                    this.props.account.get(\\\"balances\\\").toJS()[\\n                        this.props.asset.get(\\\"id\\\")\\n                    ]\\n                }\\n            />\\n        );\\n\\n        return <span>{conversion_button}</span>;\\n    }\\n}\\n\\nButtonConversionContainer = BindToChainState(ButtonConversionContainer);\\n\\nclass ButtonWithdraw extends React.Component {\\n    static propTypes = {\\n        balance: ChainTypes.ChainObject,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    getWithdrawModalId() {\\n        return \\\"withdraw_asset_\\\" + this.props.gateway + \\\"_bridge\\\";\\n    }\\n\\n    onWithdraw() {\\n        this.props.showModal();\\n    }\\n\\n    render() {\\n        let button_class = \\\"button disabled\\\";\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            if (\\n                this.props.amount_to_withdraw &&\\n                !(this.props.amount_to_withdraw.indexOf(\\\" \\\") >= 0) &&\\n                !isNaN(this.props.amount_to_withdraw) &&\\n                this.props.amount_to_withdraw > 0 &&\\n                this.props.amount_to_withdraw <=\\n                    this.props.balance.toJS().balance /\\n                        utils.get_asset_precision(\\n                            this.props.asset.get(\\\"precision\\\")\\n                        )\\n            ) {\\n                button_class = \\\"button\\\";\\n            }\\n        }\\n\\n        return (\\n            <span>\\n                <span>\\n                    <button\\n                        className={button_class}\\n                        onClick={this.onWithdraw.bind(this)}\\n                    >\\n                        <Translate content=\\\"\\\" />\\n                        <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                    </button>\\n                </span>\\n                <Modal\\n                    closable={false}\\n                    onCancel={this.props.hideModal}\\n                    title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                        coin: this.props.output_coin_name,\\n                        symbol: this.props.output_coin_symbol\\n                    })}\\n                    footer={null}\\n                    visible={this.props.visible}\\n                    overlay={true}\\n                >\\n                    <WithdrawModalBlocktrades\\n                        hideModal={this.props.hideModal}\\n                        key={`${this.props.key}`}\\n                        account={this.props.account.get(\\\"name\\\")}\\n                        issuer={this.props.issuer}\\n                        asset={this.props.asset.get(\\\"id\\\")}\\n                        output_coin_name={this.props.output_coin_name}\\n                        output_coin_symbol={this.props.output_coin_symbol}\\n                        output_coin_type={this.props.output_coin_type}\\n                        output_supports_memos={this.props.output_supports_memos}\\n                        amount_to_withdraw={this.props.amount_to_withdraw}\\n                        url={this.props.url}\\n                        output_wallet_type={this.props.output_wallet_type}\\n                        balance={\\n                            this.props.account.get(\\\"balances\\\").toJS()[\\n                                this.props.asset.get(\\\"id\\\")\\n                            ]\\n                        }\\n                    />\\n                </Modal>\\n            </span>\\n        );\\n    }\\n}\\n\\nButtonWithdraw = BindToChainState(ButtonWithdraw);\\n\\nclass ButtonWithdrawContainer extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    render() {\\n        let withdraw_button = (\\n            <ButtonWithdraw\\n                visible={this.props.visible}\\n                hideModal={this.props.hideModal}\\n                showModal={this.props.showModal}\\n                key={this.props.key}\\n                account={this.props.account}\\n                issuer={this.props.issuer}\\n                asset={this.props.asset}\\n                output_coin_name={this.props.output_coin_name}\\n                output_coin_symbol={this.props.output_coin_symbol}\\n                output_coin_type={this.props.output_coin_type}\\n                output_supports_memos={this.props.output_supports_memos}\\n                amount_to_withdraw={this.props.amount_to_withdraw}\\n                url={this.props.url}\\n                gateway={this.props.gateway}\\n                output_wallet_type={this.props.output_wallet_type}\\n                balance={\\n                    this.props.account.get(\\\"balances\\\").toJS()[\\n                        this.props.asset.get(\\\"id\\\")\\n                    ]\\n                }\\n            />\\n        );\\n\\n        return <span>{withdraw_button}</span>;\\n    }\\n}\\n\\nButtonWithdrawContainer = BindToChainState(ButtonWithdrawContainer);\\n\\nclass BlockTradesBridgeDepositRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        initial_deposit_input_coin_type: PropTypes.string,\\n        initial_deposit_output_coin_type: PropTypes.string,\\n        initial_deposit_estimated_input_amount: PropTypes.string,\\n        initial_withdraw_input_coin_type: PropTypes.string,\\n        initial_withdraw_output_coin_type: PropTypes.string,\\n        initial_withdraw_estimated_input_amount: PropTypes.string,\\n        initial_conversion_input_coin_type: PropTypes.string,\\n        initial_conversion_output_coin_type: PropTypes.string,\\n        initial_conversion_estimated_input_amount: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.refresh_interval = 2 * 60 * 1000; // update deposit limit/estimates every two minutes\\n\\n        this.deposit_address_cache = new BlockTradesDepositAddressCache();\\n\\n        this.coin_info_request_states = {\\n            request_in_progress: 0,\\n            request_complete: 1,\\n            request_failed: 2\\n        };\\n\\n        this.estimation_directions = {\\n            output_from_input: 0,\\n            input_from_output: 1\\n        };\\n\\n        this.state = {\\n            isModalVisible: false,\\n            coin_symbol: \\\"btc\\\",\\n            key_for_withdrawal_dialog: \\\"btc\\\",\\n            supports_output_memos: \\\"\\\",\\n            url: blockTradesAPIs.BASE,\\n            error: null,\\n\\n            // things that get displayed for deposits\\n            deposit_input_coin_type: null,\\n            deposit_output_coin_type: null,\\n            input_address_and_memo: null,\\n            deposit_estimated_input_amount:\\n                this.props.initial_deposit_estimated_input_amount || \\\"1.0\\\",\\n            deposit_estimated_output_amount: null,\\n            deposit_limit: null,\\n            deposit_error: null,\\n            failed_calculate_deposit: null,\\n\\n            // things that get displayed for withdrawals\\n            withdraw_input_coin_type: null,\\n            withdraw_output_coin_type: null,\\n            withdraw_estimated_input_amount:\\n                this.props.initial_withdraw_estimated_input_amount || \\\"1.0\\\",\\n            withdraw_estimated_output_amount: null,\\n            withdraw_limit: null,\\n            withdraw_error: null,\\n            failed_calculate_withdraw: null,\\n\\n            // things that get displayed for conversions\\n            conversion_input_coin_type: null,\\n            conversion_output_coin_type: null,\\n            conversion_estimated_input_amount:\\n                this.props.initial_conversion_estimated_input_amount || \\\"1.0\\\",\\n            conversion_estimated_output_amount: null,\\n            conversion_limit: null,\\n            conversion_error: null,\\n            failed_calculate_conversion: null,\\n\\n            // input address-related\\n            coin_info_request_state: this.coin_info_request_states\\n                .request_in_progress,\\n            input_address_requests_in_progress: {},\\n\\n            // estimate-related\\n            deposit_estimate_direction: this.estimation_directions\\n                .output_from_input,\\n\\n            // deposit limit-related\\n            deposit_limit_cache: {},\\n            deposit_limit_requests_in_progress: {},\\n\\n            // generic data from BlockTrades\\n            coins_by_type: null,\\n            allowed_mappings_for_deposit: null,\\n            allowed_mappings_for_withdraw: null,\\n            allowed_mappings_for_conversion: null,\\n            conversion_memo: null,\\n\\n            // announcements data\\n            announcements: []\\n        };\\n\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    urlConnection(checkUrl, state_coin_info) {\\n        this.setState({\\n            url: checkUrl\\n        });\\n\\n        let announcements_url = checkUrl + \\\"/announcements/enabled/trade\\\";\\n        let announcements_promise = fetch(announcements_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        Promise.resolve(announcements_promise)\\n            .then(result => {\\n                result.sort((a, b) => {\\n                    if (a.priority < b.priority) return -1;\\n                    if (a.priority > b.priority) return 1;\\n                    return 0;\\n                });\\n\\n                this.setState({\\n                    announcements: result\\n                });\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    announcements: []\\n                });\\n            });\\n\\n        // get basic data from blocktrades\\n        let coin_types_url = checkUrl + \\\"/coins\\\";\\n        let coin_types_promise = fetch(coin_types_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let wallet_types_url = checkUrl + \\\"/wallets\\\";\\n        let wallet_types_promise = fetch(wallet_types_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let trading_pairs_url = checkUrl + \\\"/trading-pairs\\\";\\n        let trading_pairs_promise = fetch(trading_pairs_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let active_wallets_url = checkUrl + \\\"/active-wallets\\\";\\n        let active_wallets_promise = fetch(active_wallets_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        Promise.all([\\n            coin_types_promise,\\n            wallet_types_promise,\\n            trading_pairs_promise,\\n            active_wallets_promise\\n        ])\\n            .then(json_responses => {\\n                let [\\n                    coin_types,\\n                    wallet_types_reply,\\n                    trading_pairs,\\n                    active_wallets\\n                ] = json_responses;\\n\\n                // get quick access to coins by their types\\n                let coins_by_type = {};\\n                coin_types.forEach(\\n                    coin_type => (coins_by_type[coin_type.coinType] = coin_type)\\n                );\\n\\n                // determine which mappings we will display for deposits and withdrawals\\n                let allowed_mappings_for_deposit = {}; // all non-bts to bts\\n                let allowed_mappings_for_withdraw = {}; // all bts to non-bts\\n                let allowed_mappings_for_conversion = {}; // all bts to bts\\n                trading_pairs.forEach(pair => {\\n                    let input_coin_info = coins_by_type[pair.inputCoinType];\\n                    let output_coin_info = coins_by_type[pair.outputCoinType];\\n\\n                    // filter out pairs where one asset is a backed asset and the other is a backing asset,\\n                    // those pairs rightly belong under the gateway section, not under the bridge section.\\n                    if (\\n                        input_coin_info.backingCoinType !=\\n                            pair.outputCoinType &&\\n                        output_coin_info && output_coin_info.backingCoinType !=\\n                            pair.inputCoinType &&\\n                        input_coin_info && input_coin_info.restricted == false &&\\n                        output_coin_info.restricted == false\\n                    ) {\\n                        // filter out mappings where one of the wallets is offline\\n                        if (\\n                            active_wallets.indexOf(\\n                                input_coin_info.walletType\\n                            ) != -1 &&\\n                            active_wallets.indexOf(\\n                                output_coin_info.walletType\\n                            ) != -1\\n                        ) {\\n                            if (\\n                                input_coin_info.walletType != \\\"bitshares2\\\" &&\\n                                output_coin_info.walletType == \\\"bitshares2\\\"\\n                            ) {\\n                                allowed_mappings_for_deposit[\\n                                    pair.inputCoinType\\n                                ] =\\n                                    allowed_mappings_for_deposit[\\n                                        pair.inputCoinType\\n                                    ] || [];\\n                                allowed_mappings_for_deposit[\\n                                    pair.inputCoinType\\n                                ].push(pair.outputCoinType);\\n                            } else if (\\n                                input_coin_info.walletType == \\\"bitshares2\\\" &&\\n                                output_coin_info.walletType != \\\"bitshares2\\\"\\n                            ) {\\n                                allowed_mappings_for_withdraw[\\n                                    pair.inputCoinType\\n                                ] =\\n                                    allowed_mappings_for_withdraw[\\n                                        pair.inputCoinType\\n                                    ] || [];\\n                                allowed_mappings_for_withdraw[\\n                                    pair.inputCoinType\\n                                ].push(pair.outputCoinType);\\n                            } else if (\\n                                input_coin_info.walletType == \\\"bitshares2\\\" &&\\n                                output_coin_info.walletType == \\\"bitshares2\\\"\\n                            ) {\\n                                allowed_mappings_for_conversion[\\n                                    pair.inputCoinType\\n                                ] =\\n                                    allowed_mappings_for_conversion[\\n                                        pair.inputCoinType\\n                                    ] || [];\\n                                allowed_mappings_for_conversion[\\n                                    pair.inputCoinType\\n                                ].push(pair.outputCoinType);\\n                            }\\n                        }\\n                    }\\n                });\\n\\n                // we can now set the input and output coin types\\n                let deposit_input_coin_type = null;\\n                let deposit_output_coin_type = null;\\n                let allowed_deposit_coin_types = Object.keys(\\n                    allowed_mappings_for_deposit\\n                );\\n                allowed_deposit_coin_types.forEach(deposit_coin_type => {\\n                    allowed_mappings_for_deposit[deposit_coin_type].sort();\\n                });\\n\\n                if (allowed_deposit_coin_types.length) {\\n                    if (\\n                        this.props.initial_deposit_input_coin_type &&\\n                        this.props.initial_deposit_input_coin_type in\\n                            allowed_mappings_for_deposit\\n                    )\\n                        deposit_input_coin_type = this.props\\n                            .initial_deposit_input_coin_type;\\n                    else\\n                        deposit_input_coin_type = allowed_deposit_coin_types[0];\\n                    let output_coin_types_for_this_input =\\n                        allowed_mappings_for_deposit[deposit_input_coin_type];\\n                    if (\\n                        this.props.initial_deposit_output_coin_type &&\\n                        output_coin_types_for_this_input.indexOf(\\n                            this.props.initial_deposit_output_coin_type\\n                        ) != -1\\n                    )\\n                        deposit_output_coin_type = this.props\\n                            .initial_deposit_output_coin_type;\\n                    else\\n                        deposit_output_coin_type =\\n                            output_coin_types_for_this_input[0];\\n                }\\n\\n                let withdraw_input_coin_type = null;\\n                let withdraw_output_coin_type = null;\\n                let conversion_input_coin_type = null;\\n                let conversion_output_coin_type = null;\\n                let allowed_withdraw_coin_types = Object.keys(\\n                    allowed_mappings_for_withdraw\\n                );\\n                allowed_withdraw_coin_types.forEach(withdraw_coin_type => {\\n                    allowed_mappings_for_withdraw[withdraw_coin_type].sort();\\n                });\\n\\n                if (allowed_withdraw_coin_types.length) {\\n                    if (\\n                        this.props.initial_withdraw_input_coin_type &&\\n                        this.props.initial_withdraw_input_coin_type in\\n                            allowed_mappings_for_withdraw\\n                    )\\n                        withdraw_input_coin_type = this.props\\n                            .initial_withdraw_input_coin_type;\\n                    else\\n                        withdraw_input_coin_type =\\n                            allowed_withdraw_coin_types[0];\\n                    let output_coin_types_for_this_input =\\n                        allowed_mappings_for_withdraw[withdraw_input_coin_type];\\n                    if (\\n                        this.props.initial_withdraw_output_coin_type &&\\n                        output_coin_types_for_this_input.indexOf(\\n                            this.props.initial_withdraw_output_coin_type\\n                        ) != -1\\n                    )\\n                        withdraw_output_coin_type = this.props\\n                            .initial_withdraw_output_coin_type;\\n                    else\\n                        withdraw_output_coin_type =\\n                            output_coin_types_for_this_input[0];\\n                }\\n\\n                let allowed_conversion_coin_types = Object.keys(\\n                    allowed_mappings_for_conversion\\n                );\\n                allowed_conversion_coin_types.forEach(conversion_coin_type => {\\n                    allowed_mappings_for_conversion[\\n                        conversion_coin_type\\n                    ].sort();\\n                });\\n\\n                if (allowed_conversion_coin_types.length) {\\n                    if (\\n                        this.props.initial_conversion_input_coin_type &&\\n                        this.props.initial_conversion_input_coin_type in\\n                            allowed_mappings_for_conversion\\n                    )\\n                        conversion_input_coin_type = this.props\\n                            .initial_conversion_input_coin_type;\\n                    else\\n                        conversion_input_coin_type =\\n                            allowed_conversion_coin_types[0];\\n                    let output_coin_types_for_this_input =\\n                        allowed_mappings_for_conversion[\\n                            conversion_input_coin_type\\n                        ];\\n                    if (\\n                        this.props.initial_conversion_output_coin_type &&\\n                        output_coin_types_for_this_input.indexOf(\\n                            this.props.initial_conversion_output_coin_type\\n                        ) != -1\\n                    )\\n                        conversion_output_coin_type = this.props\\n                            .initial_conversion_output_coin_type;\\n                    else\\n                        conversion_output_coin_type =\\n                            output_coin_types_for_this_input[0];\\n                }\\n\\n                let input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type\\n                );\\n\\n                let deposit_limit = this.getCachedOrFreshDepositLimit(\\n                    \\\"deposit\\\",\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type\\n                );\\n                let deposit_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"deposit\\\",\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type,\\n                    this.state.deposit_estimated_input_amount\\n                );\\n\\n                let withdraw_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"withdraw\\\",\\n                    withdraw_input_coin_type,\\n                    withdraw_output_coin_type,\\n                    this.state.withdraw_estimated_input_amount\\n                );\\n                let withdraw_limit = this.getCachedOrFreshDepositLimit(\\n                    \\\"withdraw\\\",\\n                    withdraw_input_coin_type,\\n                    withdraw_output_coin_type\\n                );\\n\\n                let conversion_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"conversion\\\",\\n                    conversion_input_coin_type,\\n                    conversion_output_coin_type,\\n                    this.state.conversion_estimated_input_amount\\n                );\\n                let conversion_limit = this.getCachedOrFreshDepositLimit(\\n                    \\\"conversion\\\",\\n                    conversion_input_coin_type,\\n                    conversion_output_coin_type\\n                );\\n\\n                if (this.unMounted) return;\\n\\n                this.setState({\\n                    coin_info_request_state: this.coin_info_request_states\\n                        .request_complete,\\n                    coins_by_type: coins_by_type,\\n                    allowed_mappings_for_deposit: allowed_mappings_for_deposit,\\n                    allowed_mappings_for_withdraw: allowed_mappings_for_withdraw,\\n                    allowed_mappings_for_conversion: allowed_mappings_for_conversion,\\n                    deposit_input_coin_type: deposit_input_coin_type,\\n                    deposit_output_coin_type: deposit_output_coin_type,\\n                    input_address_and_memo: input_address_and_memo,\\n                    deposit_limit: deposit_limit,\\n                    deposit_estimated_output_amount: deposit_estimated_output_amount,\\n                    deposit_estimate_direction: this.estimation_directions\\n                        .output_from_input,\\n                    withdraw_input_coin_type: withdraw_input_coin_type,\\n                    withdraw_output_coin_type: withdraw_output_coin_type,\\n                    withdraw_limit: withdraw_limit,\\n                    withdraw_estimated_output_amount: withdraw_estimated_output_amount,\\n                    conversion_input_coin_type: conversion_input_coin_type,\\n                    conversion_output_coin_type: conversion_output_coin_type,\\n                    conversion_limit: conversion_limit,\\n                    conversion_estimated_output_amount: conversion_estimated_output_amount,\\n                    withdraw_estimate_direction: this.estimation_directions\\n                        .output_from_input,\\n                    conversion_estimate_direction: this.estimation_directions\\n                        .output_from_input,\\n                    supports_output_memos:\\n                        coins_by_type[\\\"btc\\\"].supportsOutputMemos\\n                });\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    coin_info_request_state: state_coin_info,\\n                    coins_by_type: null,\\n                    allowed_mappings_for_deposit: null,\\n                    allowed_mappings_for_withdraw: null,\\n                    allowed_mappings_for_conversion: null\\n                });\\n            });\\n    }\\n\\n    // functions for periodically updating our deposit limit and estimates\\n    updateEstimates() {\\n        if (\\n            this.state.deposit_input_coin_type &&\\n            this.state.deposit_output_coin_type\\n        ) {\\n            // input address won't usually need refreshing unless there was an error\\n            // generating it last time around\\n            let new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                this.state.deposit_input_coin_type,\\n                this.state.deposit_output_coin_type\\n            );\\n\\n            let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n                \\\"deposit\\\",\\n                this.state.deposit_input_coin_type,\\n                this.state.deposit_output_coin_type\\n            );\\n            let new_deposit_estimated_input_amount = this.state\\n                .deposit_estimated_input_amount;\\n            let new_deposit_estimated_output_amount = this.state\\n                .deposit_estimated_output_amount;\\n\\n            if (\\n                this.state.deposit_estimate_direction ==\\n                this.estimation_directions.output_from_input\\n            )\\n                new_deposit_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"deposit\\\",\\n                    this.state.deposit_input_coin_type,\\n                    this.state.deposit_output_coin_type,\\n                    new_deposit_estimated_input_amount\\n                );\\n            else\\n                new_deposit_estimated_input_amount = this.getAndUpdateInputEstimate(\\n                    \\\"deposit\\\",\\n                    this.state.deposit_input_coin_type,\\n                    this.state.deposit_output_coin_type,\\n                    new_deposit_estimated_output_amount\\n                );\\n\\n            let new_withdraw_limit = this.getCachedOrFreshDepositLimit(\\n                \\\"withdraw\\\",\\n                this.state.withdraw_input_coin_type,\\n                this.state.withdraw_output_coin_type\\n            );\\n            let new_withdraw_estimated_input_amount = this.state\\n                .withdraw_estimated_input_amount;\\n            let new_withdraw_estimated_output_amount = this.state\\n                .withdraw_estimated_output_amount;\\n\\n            if (\\n                this.state.withdraw_estimate_direction ==\\n                this.estimation_directions.output_from_input\\n            )\\n                new_withdraw_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"withdraw\\\",\\n                    this.state.withdraw_input_coin_type,\\n                    this.state.withdraw_output_coin_type,\\n                    new_withdraw_estimated_input_amount\\n                );\\n            else\\n                new_withdraw_estimated_input_amount = this.getAndUpdateinputEstimate(\\n                    \\\"withdraw\\\",\\n                    this.state.withdraw_input_coin_type,\\n                    this.state.withdraw_output_coin_type,\\n                    new_withdraw_estimated_output_amount\\n                );\\n\\n            let new_conversion_limit = this.getCachedOrFreshDepositLimit(\\n                \\\"conversion\\\",\\n                this.state.conversion_input_coin_type,\\n                this.state.conversion_output_coin_type\\n            );\\n            let new_conversion_estimated_input_amount = this.state\\n                .conversion_estimated_input_amount;\\n            let new_conversion_estimated_output_amount = this.state\\n                .conversion_estimated_output_amount;\\n\\n            if (\\n                this.state.conversion_estimate_direction ==\\n                this.estimation_directions.output_from_input\\n            )\\n                new_conversion_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"conversion\\\",\\n                    this.state.conversion_input_coin_type,\\n                    this.state.conversion_output_coin_type,\\n                    new_conversion_estimated_input_amount\\n                );\\n            else\\n                new_conversion_estimated_input_amount = this.getAndUpdateinputEstimate(\\n                    \\\"conversion\\\",\\n                    this.state.conversion_input_coin_type,\\n                    this.state.conversion_output_coin_type,\\n                    new_conversion_estimated_output_amount\\n                );\\n\\n            this.setState({\\n                input_address_and_memo: new_input_address_and_memo,\\n                deposit_limit: new_deposit_limit,\\n                deposit_estimated_input_amount: new_deposit_estimated_input_amount,\\n                deposit_estimated_output_amount: new_deposit_estimated_output_amount,\\n                withdraw_limit: new_withdraw_limit,\\n                withdraw_estimated_input_amount: new_withdraw_estimated_input_amount,\\n                withdraw_estimated_output_amount: new_withdraw_estimated_output_amount,\\n                conversion_limit: new_conversion_limit,\\n                conversion_estimated_input_amount: new_conversion_estimated_input_amount,\\n                conversion_estimated_output_amount: new_conversion_estimated_output_amount,\\n                key_for_withdrawal_dialog: new_withdraw_estimated_input_amount\\n            });\\n        }\\n    }\\n\\n    componentWillMount() {\\n        // check api.blocktrades.us/v2\\n        let checkUrl = this.state.url;\\n        this.urlConnection(checkUrl, 0);\\n        let coin_types_promisecheck = fetch(checkUrl + \\\"/coins\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        let trading_pairs_promisecheck = fetch(checkUrl + \\\"/trading-pairs\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        let active_wallets_promisecheck = fetch(checkUrl + \\\"/active-wallets\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        Promise.all([\\n            coin_types_promisecheck,\\n            trading_pairs_promisecheck,\\n            active_wallets_promisecheck\\n        ])\\n            .then(json_responses => {\\n                let [\\n                    coin_types,\\n                    trading_pairs,\\n                    active_wallets\\n                ] = json_responses;\\n                let coins_by_type = {};\\n                coin_types.forEach(\\n                    coin_type => (coins_by_type[coin_type.coinType] = coin_type)\\n                );\\n                trading_pairs.forEach(pair => {\\n                    let input_coin_info = coins_by_type[pair.inputCoinType];\\n                    let output_coin_info = coins_by_type[pair.outputCoinType];\\n                    if (\\n                        output_coin_info && output_coin_info.backingCoinType != pair.inputCoinType &&\\n                        input_coin_info && input_coin_info.backingCoinType != pair.outputCoinType\\n                    ) {\\n                        if (\\n                            active_wallets.indexOf(\\n                                input_coin_info.walletType\\n                            ) != -1 &&\\n                            active_wallets.indexOf(\\n                                output_coin_info.walletType\\n                            ) != -1\\n                        ) {\\n                        }\\n                    }\\n                });\\n            })\\n            .catch(error => {\\n                this.urlConnection(\\\"https://api.blocktrades.info/v2\\\", 2);\\n                this.setState({\\n                    coin_info_request_state: 0,\\n                    coins_by_type: null,\\n                    allowed_mappings_for_deposit: null,\\n                    allowed_mappings_for_withdraw: null,\\n                    allowed_mappings_for_conversion: null\\n                });\\n            });\\n    }\\n\\n    componentDidMount() {\\n        this.update_timer = setInterval(\\n            this.updateEstimates.bind(this),\\n            this.refresh_interval\\n        );\\n    }\\n\\n    componentWillUnmount() {\\n        clearInterval(this.update_timer);\\n        this.unMounted = true;\\n    }\\n\\n    // functions for managing input addresses\\n    getCachedInputAddress(input_coin_type, output_coin_type, memo) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        return this.deposit_address_cache.getCachedInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n    }\\n\\n    cacheInputAddress(input_coin_type, output_coin_type, address, memo) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        this.deposit_address_cache.cacheInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type,\\n            address,\\n            memo\\n        );\\n    }\\n\\n    getCachedOrGeneratedInputAddress(input_coin_type, output_coin_type) {\\n        // if we already have an address, just return it\\n        let cached_input_address_and_memo = this.getCachedInputAddress(\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        if (cached_input_address_and_memo) return cached_input_address_and_memo;\\n\\n        // if we've already asked for this address, return null, it will trigger a refresh when it completes\\n        this.state.input_address_requests_in_progress[input_coin_type] =\\n            this.state.input_address_requests_in_progress[input_coin_type] ||\\n            {};\\n        if (\\n            this.state.input_address_requests_in_progress[input_coin_type][\\n                output_coin_type\\n            ]\\n        )\\n            return null;\\n\\n        // else, no active request for this mapping, kick one off\\n        let body = JSON.stringify({\\n            inputCoinType: input_coin_type,\\n            outputCoinType: output_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\")\\n        });\\n\\n        this.state.input_address_requests_in_progress[input_coin_type][\\n            output_coin_type\\n        ] = true;\\n\\n        fetch(this.state.url + \\\"/simple-api/initiate-trade\\\", {\\n            method: \\\"post\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            }),\\n            body: body\\n        }).then(\\n            reply => {\\n                reply.json().then(\\n                    json => {\\n                        console.assert(\\n                            json.inputCoinType == input_coin_type,\\n                            \\\"unexpected reply from initiate-trade\\\"\\n                        );\\n                        console.assert(\\n                            json.outputCoinType == output_coin_type,\\n                            \\\"unexpected reply from initiate-trade\\\"\\n                        );\\n                        if (\\n                            json.inputCoinType != input_coin_type ||\\n                            json.outputCoinType != output_coin_type\\n                        )\\n                            throw Error(\\\"unexpected reply from initiate-trade\\\");\\n                        this.cacheInputAddress(\\n                            json.inputCoinType,\\n                            json.outputCoinType,\\n                            json.inputAddress,\\n                            json.inputMemo\\n                        );\\n                        delete this.state.input_address_requests_in_progress[\\n                            input_coin_type\\n                        ][output_coin_type];\\n                        if (\\n                            this.state.deposit_input_coin_type ==\\n                                json.inputCoinType &&\\n                            this.state.deposit_output_coin_type ==\\n                                json.outputCoinType\\n                        )\\n                            this.setState({\\n                                input_address_and_memo: {\\n                                    address: json.inputAddress,\\n                                    memo: json.inputMemo\\n                                }\\n                            });\\n                    },\\n                    error => {\\n                        delete this.state.input_address_requests_in_progress[\\n                            input_coin_type\\n                        ][output_coin_type];\\n                        if (\\n                            this.state.deposit_input_coin_type ==\\n                                input_coin_type &&\\n                            this.state.deposit_output_coin_type ==\\n                                output_coin_type\\n                        )\\n                            this.setState({\\n                                input_address_and_memo: {\\n                                    address: \\\"error generating address\\\",\\n                                    memo: null\\n                                }\\n                            });\\n                    }\\n                );\\n            },\\n            error => {\\n                delete this.state.input_address_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n                if (\\n                    this.state.deposit_input_coin_type == input_coin_type &&\\n                    this.state.deposit_output_coin_type == output_coin_type\\n                )\\n                    this.setState({\\n                        input_address_and_memo: {\\n                            address: \\\"error generating address\\\",\\n                            memo: null\\n                        }\\n                    });\\n            }\\n        );\\n        return null;\\n    }\\n\\n    // functions for managing deposit limits\\n    getCachedDepositLimit(input_coin_type, output_coin_type) {\\n        this.state.deposit_limit_cache[input_coin_type] =\\n            this.state.deposit_limit_cache[input_coin_type] || {};\\n        if (this.state.deposit_limit_cache[input_coin_type][output_coin_type]) {\\n            let deposit_limit_record = this.state.deposit_limit_cache[\\n                input_coin_type\\n            ][output_coin_type];\\n            let cache_age = new Date() - deposit_limit_record.timestamp;\\n            if (cache_age < this.refresh_interval) return deposit_limit_record;\\n            delete this.state.deposit_limit_cache[input_coin_type][\\n                output_coin_type\\n            ];\\n        }\\n        return null;\\n    }\\n\\n    cacheDepositLimit(input_coin_type, output_coin_type, deposit_limit_record) {\\n        deposit_limit_record.timestamp = new Date();\\n        this.state.deposit_limit_cache[input_coin_type] =\\n            this.state.deposit_limit_cache[input_coin_type] || {};\\n        this.state.deposit_limit_cache[input_coin_type][\\n            output_coin_type\\n        ] = deposit_limit_record;\\n    }\\n\\n    getCachedOrFreshDepositLimit(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let deposit_limit_record = this.getCachedDepositLimit(\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        if (deposit_limit_record) return deposit_limit_record;\\n\\n        this.state.deposit_limit_requests_in_progress[input_coin_type] =\\n            this.state.input_address_requests_in_progress[input_coin_type] ||\\n            {};\\n        this.state.deposit_limit_requests_in_progress[input_coin_type][\\n            output_coin_type\\n        ] = true;\\n\\n        let deposit_limit_url =\\n            this.state.url +\\n            \\\"/deposit-limits?inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n        let deposit_limit_promise = fetch(deposit_limit_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        deposit_limit_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n                console.assert(\\n                    reply.inputCoinType == input_coin_type &&\\n                        reply.outputCoinType == output_coin_type,\\n                    \\\"unexpected reply from deposit-limits\\\"\\n                );\\n                if (\\n                    reply.inputCoinType != input_coin_type ||\\n                    reply.outputCoinType != output_coin_type\\n                )\\n                    throw Error(\\\"unexpected reply from deposit-limits\\\");\\n                let new_deposit_limit_record = {\\n                    timestamp: new Date(),\\n                    limit: reply.depositLimit\\n                };\\n                this.cacheDepositLimit(\\n                    input_coin_type,\\n                    output_coin_type,\\n                    new_deposit_limit_record\\n                );\\n                delete this.state.deposit_limit_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n                if (\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                    ] == input_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                    ] == output_coin_type\\n                )\\n                    this.setState({\\n                        [deposit_withdraw_or_convert +\\n                        \\\"_limit\\\"]: new_deposit_limit_record\\n                    });\\n            },\\n            error => {\\n                delete this.state.deposit_limit_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n            }\\n        );\\n        return null;\\n    }\\n\\n    getAndUpdateOutputEstimate(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type,\\n        input_amount\\n    ) {\\n        if (this.unMounted) return;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n            this.setState({failed_calculate_deposit: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            this.setState({failed_calculate_withdraw: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"conversion\\\") {\\n            this.setState({failed_calculate_conversion: null});\\n        }\\n\\n        let estimate_output_url =\\n            this.state.url +\\n            \\\"/estimate-output-amount?inputAmount=\\\" +\\n            encodeURIComponent(input_amount) +\\n            \\\"&inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n        let estimate_output_promise = fetch(estimate_output_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        estimate_output_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n                // console.log(\\\"Reply: \\\", reply);\\n                if (reply.error) {\\n                    if (\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                        ] == input_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                        ] == output_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert +\\n                                \\\"_estimated_input_amount\\\"\\n                        ] == input_amount &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                        ] == this.estimation_directions.output_from_input\\n                    ) {\\n                        let user_message = reply.error.message;\\n\\n                        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n                            this.setState({\\n                                failed_calculate_deposit: \\\"Failed to calculate\\\"\\n                            });\\n                        }\\n                        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n                            this.setState({\\n                                failed_calculate_withdraw: \\\"Failed to calculate\\\"\\n                            });\\n                        }\\n                        if (deposit_withdraw_or_convert == \\\"conversion\\\") {\\n                            this.setState({\\n                                failed_calculate_conversion:\\n                                    \\\"Failed to calculate\\\"\\n                            });\\n                        }\\n\\n                        let expected_prefix = \\\"Internal Server Error: \\\";\\n                        if (user_message.startsWith(expected_prefix))\\n                            user_message = user_message.substr(\\n                                expected_prefix.length\\n                            );\\n\\n                        this.setState({\\n                            [deposit_withdraw_or_convert +\\n                            \\\"_error\\\"]: user_message\\n                        });\\n                    }\\n                } else {\\n                    console.assert(\\n                        reply.inputCoinType == input_coin_type &&\\n                            reply.outputCoinType == output_coin_type &&\\n                            reply.inputAmount == input_amount,\\n                        \\\"unexpected reply from estimate-output-amount\\\"\\n                    );\\n                    if (\\n                        reply.inputCoinType != input_coin_type ||\\n                        reply.outputCoinType != output_coin_type ||\\n                        reply.inputAmount != input_amount\\n                    )\\n                        throw Error(\\n                            \\\"unexpected reply from estimate-output-amount\\\"\\n                        );\\n                    if (\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                        ] == input_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                        ] == output_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert +\\n                                \\\"_estimated_input_amount\\\"\\n                        ] == input_amount &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                        ] == this.estimation_directions.output_from_input\\n                    )\\n                        this.setState({\\n                            [deposit_withdraw_or_convert +\\n                            \\\"_estimated_output_amount\\\"]: reply.outputAmount,\\n                            [deposit_withdraw_or_convert + \\\"_error\\\"]: null\\n                        });\\n                }\\n            },\\n            error => {}\\n        );\\n\\n        return null;\\n    }\\n\\n    getAndUpdateInputEstimate(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type,\\n        output_amount\\n    ) {\\n        if (this.unMounted) return;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n            this.setState({failed_calculate_deposit: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            this.setState({failed_calculate_withdraw: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"conversion\\\") {\\n            this.setState({failed_calculate_conversion: null});\\n        }\\n\\n        let estimate_input_url =\\n            this.state.url +\\n            \\\"/estimate-input-amount?outputAmount=\\\" +\\n            encodeURIComponent(output_amount) +\\n            \\\"&inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n        let estimate_input_promise = fetch(estimate_input_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        estimate_input_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n\\n                console.assert(\\n                    reply.inputCoinType == input_coin_type &&\\n                        reply.outputCoinType == output_coin_type &&\\n                        reply.outputAmount == output_amount,\\n                    \\\"unexpected reply from estimate-input-amount\\\"\\n                );\\n                if (\\n                    reply.inputCoinType != input_coin_type ||\\n                    reply.outputCoinType != output_coin_type ||\\n                    reply.outputAmount != output_amount\\n                ) {\\n                    if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n                        this.setState({\\n                            failed_calculate_deposit: \\\"Failed to calculate\\\"\\n                        });\\n                    }\\n                    if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n                        this.setState({\\n                            failed_calculate_withdraw: \\\"Failed to calculate\\\"\\n                        });\\n                    }\\n                    if (deposit_withdraw_or_convert == \\\"conversion\\\") {\\n                        this.setState({\\n                            failed_calculate_conversion: \\\"Failed to calculate\\\"\\n                        });\\n                    }\\n                }\\n\\n                if (\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                    ] == input_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                    ] == output_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                    ] == output_amount &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                    ] == this.estimation_directions.input_from_output\\n                )\\n                    this.setState({\\n                        [deposit_withdraw_or_convert +\\n                        \\\"_estimated_input_amount\\\"]: reply.inputAmount,\\n                        key_for_withdrawal_dialog: reply.inputAmount\\n                    });\\n            },\\n            error => {}\\n        );\\n\\n        return null;\\n    }\\n\\n    onInputAmountChanged(deposit_withdraw_or_convert, event) {\\n        let new_estimated_input_amount = event.target.value;\\n        if (new_estimated_input_amount == \\\"\\\") {\\n            new_estimated_input_amount = \\\"0\\\";\\n        }\\n\\n        let new_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"],\\n            new_estimated_input_amount\\n        );\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_input_amount\\\"]: new_estimated_input_amount,\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_output_amount\\\"]: new_estimated_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input,\\n            key_for_withdrawal_dialog: new_estimated_input_amount\\n        });\\n    }\\n\\n    onOutputAmountChanged(deposit_withdraw_or_convert, event) {\\n        let new_estimated_output_amount = event.target.value;\\n        if (new_estimated_output_amount == \\\"\\\") {\\n            new_estimated_output_amount = \\\"0\\\";\\n        }\\n\\n        let new_estimated_input_amount = this.getAndUpdateInputEstimate(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"],\\n            new_estimated_output_amount\\n        );\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_output_amount\\\"]: new_estimated_output_amount,\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_input_amount\\\"]: new_estimated_input_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.input_from_output\\n        });\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"withdraw_asset_\\\" + this.props.gateway + \\\"_bridge\\\";\\n    }\\n\\n    onInputCoinTypeChanged(deposit_withdraw_or_convert, event) {\\n        let estimated_input_output_amount = null;\\n        let estimated_input_output_amount_state = \\\"_estimated_output_amount\\\";\\n        let new_input_coin_type = event.target.value;\\n        let possible_output_coin_types = this.state[\\n            \\\"allowed_mappings_for_\\\" + deposit_withdraw_or_convert\\n        ][new_input_coin_type];\\n        let new_output_coin_type = possible_output_coin_types[0];\\n        if (\\n            possible_output_coin_types.indexOf(\\n                this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"]\\n            ) != -1\\n        )\\n            new_output_coin_type = this.state[\\n                deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n            ];\\n\\n        let new_input_address_and_memo = this.state.input_address_and_memo;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\")\\n            new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                new_input_coin_type,\\n                new_output_coin_type\\n            );\\n        let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n            deposit_withdraw_or_convert,\\n            new_input_coin_type,\\n            new_output_coin_type\\n        );\\n\\n        if (\\n            !this.state[deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"]\\n        ) {\\n            estimated_input_output_amount = this.getAndUpdateInputEstimate(\\n                deposit_withdraw_or_convert,\\n                new_input_coin_type,\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                ]\\n            );\\n            estimated_input_output_amount_state = \\\"_estimated_input_amount\\\";\\n        } else {\\n            estimated_input_output_amount = this.getAndUpdateOutputEstimate(\\n                deposit_withdraw_or_convert,\\n                new_input_coin_type,\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"\\n                ]\\n            );\\n        }\\n\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            possible_output_coin_types.forEach(\\n                allowed_withdraw_output_coin_type => {\\n                    if (\\n                        new_output_coin_type ===\\n                        allowed_withdraw_output_coin_type\\n                    ) {\\n                        this.setState({\\n                            coin_symbol: new_input_coin_type + \\\"input\\\",\\n                            supports_output_memos: this.state.coins_by_type[\\n                                allowed_withdraw_output_coin_type\\n                            ].supportsOutputMemos\\n                        });\\n                    }\\n                }\\n            );\\n        }\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_input_coin_type\\\"]: new_input_coin_type,\\n            [deposit_withdraw_or_convert +\\n            \\\"_output_coin_type\\\"]: new_output_coin_type,\\n            input_address_and_memo: new_input_address_and_memo,\\n            [deposit_withdraw_or_convert + \\\"_limit\\\"]: new_deposit_limit,\\n            [deposit_withdraw_or_convert +\\n            estimated_input_output_amount_state]: estimated_input_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input\\n        });\\n    }\\n\\n    onOutputCoinTypeChanged(deposit_withdraw_or_convert, event) {\\n        let estimated_input_output_amount = null;\\n        let estimated_input_output_amount_state = \\\"_estimated_output_amount\\\";\\n        let new_output_coin_type = event.target.value;\\n        let withdraw_output_coin_types = this.state\\n            .allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type];\\n\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            withdraw_output_coin_types.forEach(\\n                allowed_withdraw_output_coin_type => {\\n                    if (\\n                        new_output_coin_type ===\\n                        allowed_withdraw_output_coin_type\\n                    ) {\\n                        this.setState({\\n                            coin_symbol: new_output_coin_type + \\\"output\\\",\\n                            supports_output_memos: this.state.coins_by_type[\\n                                allowed_withdraw_output_coin_type\\n                            ].supportsOutputMemos,\\n                            key_for_withdrawal_dialog: new_output_coin_type\\n                        });\\n                    }\\n                }\\n            );\\n        }\\n\\n        let new_input_address_and_memo = this.state.input_address_and_memo;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\")\\n            new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type\\n            );\\n        let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            new_output_coin_type\\n        );\\n\\n        if (\\n            !this.state[deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"]\\n        ) {\\n            estimated_input_output_amount = this.getAndUpdateInputEstimate(\\n                deposit_withdraw_or_convert,\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                ]\\n            );\\n            estimated_input_output_amount_state = \\\"_estimated_input_amount\\\";\\n        } else {\\n            estimated_input_output_amount = this.getAndUpdateOutputEstimate(\\n                deposit_withdraw_or_convert,\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"\\n                ]\\n            );\\n        }\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_output_coin_type\\\"]: new_output_coin_type,\\n            input_address_and_memo: new_input_address_and_memo,\\n            [deposit_withdraw_or_convert + \\\"_limit\\\"]: new_deposit_limit,\\n            [deposit_withdraw_or_convert +\\n            estimated_input_output_amount_state]: estimated_input_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input\\n        });\\n    }\\n\\n    render() {\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.gateway\\n        )\\n            return <div />;\\n\\n        let announcements,\\n            deposit_body,\\n            deposit_header,\\n            withdraw_body,\\n            withdraw_header,\\n            conversion_body,\\n            conversion_header,\\n            conversion_modal_id;\\n\\n        if (\\n            this.state.coin_info_request_state ==\\n            this.coin_info_request_states.request_failed\\n        ) {\\n            return (\\n                <div>\\n                    <p>\\n                        Error connecting to blocktrades.us, please try again\\n                        later\\n                    </p>\\n                </div>\\n            );\\n        } else if (\\n            this.state.coin_info_request_state ==\\n                this.coin_info_request_states.never_requested ||\\n            this.state.coin_info_request_state ==\\n                this.coin_info_request_states.request_in_progress\\n        ) {\\n            return (\\n                <div>\\n                    <p>Retrieving current trade data from blocktrades.us</p>\\n                </div>\\n            );\\n        } else {\\n            // depending on what wallets are online, we might support deposits, withdrawals, conversions, all, or neither at any given time.\\n            let deposit_table = null;\\n            let withdraw_table = null;\\n            let amount_to_withdraw = null;\\n\\n            let calcTextDeposit = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_deposit != null) {\\n                calcTextDeposit = this.state.failed_calculate_deposit;\\n            }\\n            let calcTextWithdraw = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_withdraw != null) {\\n                calcTextWithdraw = this.state.failed_calculate_withdraw;\\n            }\\n            let calcTextConversion = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_conversion != null) {\\n                calcTextConversion = this.state.failed_calculate_conversion;\\n            }\\n\\n            if (\\n                Object.getOwnPropertyNames(\\n                    this.state.allowed_mappings_for_deposit\\n                ).length > 0\\n            ) {\\n                // deposit\\n                let deposit_input_coin_type_options = [];\\n                Object.keys(this.state.allowed_mappings_for_deposit)\\n                    .sort()\\n                    .forEach(allowed_deposit_input_coin_type => {\\n                        deposit_input_coin_type_options.push(\\n                            <option\\n                                key={allowed_deposit_input_coin_type}\\n                                value={allowed_deposit_input_coin_type || \\\"\\\"}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_deposit_input_coin_type\\n                                    ].symbol\\n                                }\\n                            </option>\\n                        );\\n                    });\\n                let deposit_input_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"external-coin-types\\\"\\n                        value={this.state.deposit_input_coin_type || \\\"\\\"}\\n                        onChange={this.onInputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    >\\n                        {deposit_input_coin_type_options}\\n                    </select>\\n                );\\n\\n                let deposit_output_coin_type_options = [];\\n                let deposit_output_coin_types = this.state\\n                    .allowed_mappings_for_deposit[\\n                    this.state.deposit_input_coin_type\\n                ];\\n                deposit_output_coin_types.forEach(\\n                    allowed_deposit_output_coin_type => {\\n                        deposit_output_coin_type_options.push(\\n                            <option\\n                                key={allowed_deposit_output_coin_type}\\n                                value={allowed_deposit_output_coin_type || \\\"\\\"}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_deposit_output_coin_type\\n                                    ].walletSymbol\\n                                }\\n                            </option>\\n                        );\\n                    }\\n                );\\n                let deposit_output_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"native-coin-types\\\"\\n                        value={this.state.deposit_output_coin_type || \\\"\\\"}\\n                        onChange={this.onOutputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    >\\n                        {deposit_output_coin_type_options}\\n                    </select>\\n                );\\n\\n                let input_address_and_memo = this.state.input_address_and_memo\\n                    ? this.state.input_address_and_memo\\n                    : {address: \\\"unknown\\\", memo: null};\\n\\n                let estimated_input_amount_text = this.state\\n                    .deposit_estimated_input_amount;\\n                let estimated_output_amount_text = this.state\\n                    .deposit_estimated_output_amount;\\n\\n                let deposit_input_amount_edit_box = estimated_input_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_input_amount_text || \\\"\\\"}\\n                        onChange={this.onInputAmountChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextDeposit\\n                );\\n                let deposit_output_amount_edit_box = estimated_output_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_output_amount_text || \\\"\\\"}\\n                        onChange={this.onOutputAmountChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextDeposit\\n                );\\n\\n                let deposit_limit_element = <span>updating</span>;\\n                if (this.state.deposit_limit) {\\n                    if (this.state.deposit_limit.limit)\\n                        deposit_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">\\n                                    <Translate\\n                                        content=\\\"gateway.limit\\\"\\n                                        amount={utils.format_number(\\n                                            this.state.deposit_limit.limit,\\n                                            8\\n                                        )}\\n                                        symbol={\\n                                            this.state.coins_by_type[\\n                                                this.state\\n                                                    .deposit_input_coin_type\\n                                            ].walletSymbol\\n                                        }\\n                                    />\\n                                </span>\\n                            </div>\\n                        );\\n                    else deposit_limit_element = null;\\n                    //else\\n                    //    deposit_limit_element = <span>no limit</span>;\\n                }\\n\\n                let deposit_error_element = null;\\n                if (this.state.deposit_error)\\n                    deposit_error_element = (\\n                        <div>{this.state.deposit_error}</div>\\n                    );\\n\\n                deposit_header = (\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                <Translate content=\\\"gateway.deposit\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate content=\\\"gateway.balance\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate\\n                                    content=\\\"gateway.deposit_to\\\"\\n                                    asset={this.state.deposit_input_coin_type}\\n                                />\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                );\\n\\n                let deposit_address_and_memo_element = null;\\n                if (input_address_and_memo.memo)\\n                    deposit_address_and_memo_element = (\\n                        <Translate\\n                            unsafe\\n                            content=\\\"gateway.address_with_memo\\\"\\n                            address={input_address_and_memo.address}\\n                            memo={input_address_and_memo.memo}\\n                        />\\n                    );\\n                else\\n                    deposit_address_and_memo_element = (\\n                        <span>{input_address_and_memo.address}</span>\\n                    );\\n                //<span><span className=\\\"blocktrades-with-memo\\\">with memo</span> {input_address_and_memo.memo}</span>;\\n\\n                deposit_body = (\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div className=\\\"blocktrades-bridge\\\">\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {deposit_input_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {deposit_input_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    &rarr;\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {deposit_output_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {deposit_output_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    <div>{deposit_error_element}</div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <AccountBalance\\n                                    account={this.props.account.get(\\\"name\\\")}\\n                                    asset={\\n                                        this.state.coins_by_type[\\n                                            this.state.deposit_output_coin_type\\n                                        ].walletSymbol\\n                                    }\\n                                />\\n                            </td>\\n                            <td>\\n                                {deposit_address_and_memo_element}\\n                                <br />\\n                                {deposit_limit_element}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                );\\n            }\\n\\n            if (\\n                Object.getOwnPropertyNames(\\n                    this.state.allowed_mappings_for_withdraw\\n                ).length > 0\\n            ) {\\n                let withdraw_asset_symbol = this.state.coins_by_type[\\n                    this.state.withdraw_input_coin_type\\n                ].symbol;\\n\\n                // withdrawal\\n\\n                amount_to_withdraw = this.state.withdraw_estimated_input_amount;\\n\\n                let withdraw_input_coin_type_options = [];\\n                Object.keys(this.state.allowed_mappings_for_withdraw)\\n                    .sort()\\n                    .forEach(allowed_withdraw_input_coin_type => {\\n                        withdraw_input_coin_type_options.push(\\n                            <option\\n                                key={allowed_withdraw_input_coin_type}\\n                                value={allowed_withdraw_input_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_withdraw_input_coin_type\\n                                    ].walletSymbol\\n                                }\\n                            </option>\\n                        );\\n                    });\\n                let withdraw_input_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"native-coin-types\\\"\\n                        value={this.state.withdraw_input_coin_type}\\n                        onChange={this.onInputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    >\\n                        {withdraw_input_coin_type_options}\\n                    </select>\\n                );\\n\\n                let withdraw_output_coin_type_options = [];\\n                let withdraw_output_coin_types = this.state\\n                    .allowed_mappings_for_withdraw[\\n                    this.state.withdraw_input_coin_type\\n                ];\\n                withdraw_output_coin_types.forEach(\\n                    allowed_withdraw_output_coin_type => {\\n                        withdraw_output_coin_type_options.push(\\n                            <option\\n                                key={allowed_withdraw_output_coin_type}\\n                                value={allowed_withdraw_output_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_withdraw_output_coin_type\\n                                    ].symbol\\n                                }\\n                            </option>\\n                        );\\n                    }\\n                );\\n                let withdraw_output_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"external-coin-types\\\"\\n                        value={this.state.withdraw_output_coin_type}\\n                        onChange={this.onOutputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    >\\n                        {withdraw_output_coin_type_options}\\n                    </select>\\n                );\\n\\n                let estimated_input_amount_text = this.state\\n                    .withdraw_estimated_input_amount;\\n\\n                let withdraw_input_amount_edit_box = estimated_input_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_input_amount_text || \\\"\\\"}\\n                        onChange={this.onInputAmountChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextWithdraw\\n                );\\n\\n                let estimated_output_amount_text = this.state\\n                    .withdraw_estimated_output_amount;\\n\\n                let withdraw_output_amount_edit_box = estimated_output_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_output_amount_text || \\\"\\\"}\\n                        onChange={this.onOutputAmountChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextWithdraw\\n                );\\n\\n                let withdraw_button = (\\n                    <ButtonWithdrawContainer\\n                        visible={this.state.isModalVisible}\\n                        hideModal={this.hideModal}\\n                        showModal={this.showModal}\\n                        key={this.state.key_for_withdrawal_dialog}\\n                        account={this.props.account.get(\\\"name\\\")}\\n                        issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                        asset={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_input_coin_type\\n                            ].walletSymbol\\n                        }\\n                        output_coin_name={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].name\\n                        }\\n                        output_coin_symbol={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].symbol\\n                        }\\n                        output_coin_type={this.state.withdraw_output_coin_type}\\n                        output_supports_memos={this.state.supports_output_memos}\\n                        amount_to_withdraw={amount_to_withdraw}\\n                        url={this.state.url}\\n                        gateway={this.props.gateway}\\n                        output_wallet_type={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].walletType\\n                        }\\n                    />\\n                );\\n\\n                let withdraw_error_element = null;\\n                if (this.state.withdraw_error)\\n                    withdraw_error_element = (\\n                        <div>{this.state.withdraw_error}</div>\\n                    );\\n\\n                let withdraw_limit_element = <span>...</span>;\\n                if (this.state.withdraw_limit) {\\n                    if (this.state.withdraw_limit.limit)\\n                        withdraw_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">\\n                                    <Translate\\n                                        content=\\\"gateway.limit\\\"\\n                                        amount={utils.format_number(\\n                                            this.state.withdraw_limit.limit,\\n                                            8\\n                                        )}\\n                                        symbol={\\n                                            this.state.coins_by_type[\\n                                                this.state\\n                                                    .withdraw_input_coin_type\\n                                            ].walletSymbol\\n                                        }\\n                                    />\\n                                </span>\\n                            </div>\\n                        );\\n                    else\\n                        withdraw_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">no limit</span>\\n                            </div>\\n                        );\\n                }\\n\\n                withdraw_header = (\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                <Translate content=\\\"gateway.withdraw\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate content=\\\"gateway.balance\\\" />\\n                            </th>\\n                            <th />\\n                        </tr>\\n                    </thead>\\n                );\\n\\n                withdraw_body = (\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div className=\\\"blocktrades-bridge\\\">\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {withdraw_input_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {withdraw_input_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    &rarr;\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {withdraw_output_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {withdraw_output_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    <div>{withdraw_error_element}</div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <AccountBalance\\n                                    account={this.props.account.get(\\\"name\\\")}\\n                                    asset={\\n                                        this.state.coins_by_type[\\n                                            this.state.withdraw_input_coin_type\\n                                        ].walletSymbol\\n                                    }\\n                                />\\n                            </td>\\n                            <td>\\n                                {withdraw_button}\\n                                <br />\\n                                {withdraw_limit_element}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                );\\n            }\\n\\n            if (\\n                Object.getOwnPropertyNames(\\n                    this.state.allowed_mappings_for_conversion\\n                ).length > 0\\n            ) {\\n                // conversion\\n                let conversion_input_coin_type_options = [];\\n                Object.keys(this.state.allowed_mappings_for_conversion)\\n                    .sort()\\n                    .forEach(allowed_conversion_input_coin_type => {\\n                        conversion_input_coin_type_options.push(\\n                            <option\\n                                key={allowed_conversion_input_coin_type}\\n                                value={allowed_conversion_input_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_conversion_input_coin_type\\n                                    ].walletSymbol\\n                                }\\n                            </option>\\n                        );\\n                    });\\n                let conversion_input_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"native-coin-types\\\"\\n                        value={this.state.conversion_input_coin_type}\\n                        onChange={this.onInputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"conversion\\\"\\n                        )}\\n                    >\\n                        {conversion_input_coin_type_options}\\n                    </select>\\n                );\\n\\n                let conversion_output_coin_type_options = [];\\n                let conversion_output_coin_types = this.state\\n                    .allowed_mappings_for_conversion[\\n                    this.state.conversion_input_coin_type\\n                ];\\n                conversion_output_coin_types.forEach(\\n                    allowed_conversion_output_coin_type => {\\n                        conversion_output_coin_type_options.push(\\n                            <option\\n                                key={allowed_conversion_output_coin_type}\\n                                value={allowed_conversion_output_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_conversion_output_coin_type\\n                                    ].symbol\\n                                }\\n                            </option>\\n                        );\\n                    }\\n                );\\n                let conversion_output_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"external-coin-types\\\"\\n                        value={this.state.conversion_output_coin_type}\\n                        onChange={this.onOutputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"conversion\\\"\\n                        )}\\n                    >\\n                        {conversion_output_coin_type_options}\\n                    </select>\\n                );\\n\\n                let estimated_input_amount_text = this.state\\n                    .conversion_estimated_input_amount;\\n\\n                let conversion_input_amount_edit_box = estimated_input_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_input_amount_text || \\\"\\\"}\\n                        onChange={this.onInputAmountChanged.bind(\\n                            this,\\n                            \\\"conversion\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextConversion\\n                );\\n\\n                let estimated_output_amount_text = this.state\\n                    .conversion_estimated_output_amount;\\n\\n                let conversion_output_amount_edit_box = estimated_output_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_output_amount_text || \\\"\\\"}\\n                        onChange={this.onOutputAmountChanged.bind(\\n                            this,\\n                            \\\"conversion\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextConversion\\n                );\\n\\n                let conversion_button = (\\n                    <ButtonConversionContainer\\n                        asset={\\n                            this.state.coins_by_type[\\n                                this.state.conversion_input_coin_type\\n                            ].walletSymbol\\n                        }\\n                        account={this.props.account}\\n                        input_coin_type={this.state.conversion_input_coin_type}\\n                        output_coin_type={\\n                            this.state.conversion_output_coin_type\\n                        }\\n                        account_name={this.props.account.get(\\\"name\\\")}\\n                        amount={this.state.conversion_estimated_input_amount}\\n                        account_id={this.props.account.get(\\\"id\\\")}\\n                        account_balances={this.props.account.get(\\\"balances\\\")}\\n                        url={this.state.url}\\n                    />\\n                );\\n\\n                let conversion_error_element = null;\\n                if (this.state.conversion_error)\\n                    conversion_error_element = (\\n                        <div>{this.state.conversion_error}</div>\\n                    );\\n\\n                let conversion_limit_element = <span>...</span>;\\n                if (this.state.conversion_limit) {\\n                    if (this.state.conversion_limit.limit)\\n                        conversion_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">\\n                                    <Translate\\n                                        content=\\\"gateway.limit\\\"\\n                                        amount={utils.format_number(\\n                                            this.state.conversion_limit.limit,\\n                                            8\\n                                        )}\\n                                        symbol={\\n                                            this.state.coins_by_type[\\n                                                this.state\\n                                                    .conversion_input_coin_type\\n                                            ].walletSymbol\\n                                        }\\n                                    />\\n                                </span>\\n                            </div>\\n                        );\\n                    else\\n                        conversion_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">no limit</span>\\n                            </div>\\n                        );\\n                }\\n\\n                conversion_header = (\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                <Translate content=\\\"gateway.convert\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate content=\\\"gateway.balance\\\" />\\n                            </th>\\n                            <th />\\n                        </tr>\\n                    </thead>\\n                );\\n\\n                conversion_body = (\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div className=\\\"blocktrades-bridge\\\">\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {conversion_input_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {conversion_input_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    &rarr;\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {conversion_output_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {conversion_output_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    <div>{conversion_error_element}</div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <AccountBalance\\n                                    account={this.props.account.get(\\\"name\\\")}\\n                                    asset={\\n                                        this.state.coins_by_type[\\n                                            this.state\\n                                                .conversion_input_coin_type\\n                                        ].walletSymbol\\n                                    }\\n                                />\\n                            </td>\\n                            <td>\\n                                {conversion_button}\\n                                <br />\\n                                {conversion_limit_element}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                );\\n            }\\n\\n            if (this.state.announcements.length > 0) {\\n                announcements = (\\n                    <div className=\\\"blocktrades-announcements-container\\\">\\n                        {this.state.announcements.map(function(data, index) {\\n                            let add_color = \\\"txtann info\\\";\\n\\n                            if (data.status === 10) {\\n                                add_color = \\\"txtann error\\\";\\n                            } else if (data.status === 20) {\\n                                add_color = \\\"txtann warning\\\";\\n                            } else if (data.status === 30) {\\n                                add_color = \\\"txtann success\\\";\\n                            } else if (data.status === 40) {\\n                                add_color = \\\"txtann info\\\";\\n                            }\\n\\n                            if (data.format === 1) {\\n                                data.message.replace(/\\\\r\\\\n|\\\\r|\\\\n/g, \\\"<br />\\\");\\n                            }\\n\\n                            return (\\n                                <div\\n                                    className={\\n                                        \\\"blocktrades-announcements \\\" + add_color\\n                                    }\\n                                    key={index}\\n                                >\\n                                    {data.message}\\n                                </div>\\n                            );\\n                        }, this)}\\n                    </div>\\n                );\\n            }\\n\\n            return (\\n                <div>\\n                    <div style={{paddingBottom: 15}}>\\n                        <Translate\\n                            component=\\\"h5\\\"\\n                            content=\\\"gateway.bridge_text\\\"\\n                        />\\n                    </div>\\n                    {announcements}\\n                    <table className=\\\"table\\\">\\n                        {deposit_header}\\n                        {deposit_body}\\n                        {withdraw_header}\\n                        {withdraw_body}\\n                        {conversion_header}\\n                        {conversion_body}\\n                    </table>\\n                </div>\\n            );\\n        }\\n    }\\n} // BlockTradesBridgeDepositRequest\\n\\nexport default BindToChainState(BlockTradesBridgeDepositRequest);\\n\",\"import React from \\\"react\\\";\\nimport ChainTypes from \\\"../Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"../Utility/BindToChainState\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport cnames from \\\"classnames\\\";\\nimport TransactionConfirmStore from \\\"stores/TransactionConfirmStore\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport AccountBalance from \\\"../Account/AccountBalance\\\";\\nimport utils from \\\"common/utils\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\n\\nclass BitKapital extends React.Component {\\n    static propTypes = {\\n        jianjolly: ChainTypes.ChainAccount.isRequired,\\n        onay: ChainTypes.ChainAccount.isRequired,\\n        bitKapital: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired\\n    };\\n\\n    static defaultProps = {\\n        jianjolly: \\\"1.2.126253\\\", // \\\"jianjolly-0\\\",\\n        bitKapital: \\\"1.2.130090\\\",\\n        onay: \\\"1.2.139289\\\", // bitkapital dedicated whitelist management account\\n        asset: \\\"KAPITAL\\\"\\n    };\\n\\n    constructor(props) {\\n        super();\\n\\n        this.state = {\\n            action: props.viewSettings.get(\\\"bktAction\\\", \\\"deposit\\\"),\\n            min: 50,\\n            max: 100000\\n        };\\n    }\\n\\n    _renderDeposits() {\\n        //       return <iframe\\n        //           style={{width: \\\"100%\\\", border: 0, minHeight: 800}}\\n        //           src={\\\"https://bitkapital.com/kapital.html?u=\\\" + this.props.account.get(\\\"name\\\") + `&theme=${SettingsStore.getState().settings.get(\\\"themes\\\")}`}\\n        //       >\\n        //       </iframe>;\\n\\n        // interim maintenance tout per issue #341\\n        return;\\n        <div style={{width: \\\"100%\\\", border: 0, minHeight: 600}}>\\n            Onarim / Under Maintenance\\n        </div>;\\n    }\\n\\n    _renderWithdrawals() {\\n        return (\\n            <form onSubmit={this._onSubmit.bind(this)}>\\n                <div style={{padding: \\\"20px 0\\\"}}>\\n                    <Translate content=\\\"gateway.balance\\\" />: &nbsp;<span\\n                        style={{\\n                            fontWeight: \\\"bold\\\",\\n                            color: \\\"#4A90E2\\\",\\n                            textAlign: \\\"right\\\"\\n                        }}\\n                    >\\n                        <AccountBalance\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            asset={this.props.asset.get(\\\"symbol\\\")}\\n                        />\\n                    </span>\\n                </div>\\n\\n                <label>\\n                    <Translate content=\\\"exchange.quantity\\\" />\\n                    <input\\n                        ref=\\\"amount\\\"\\n                        required\\n                        id=\\\"amount\\\"\\n                        type=\\\"number\\\"\\n                        min={this.state.min}\\n                        max={this.state.max}\\n                    />\\n                </label>\\n\\n                <label>\\n                    <Translate content=\\\"gateway.iban\\\" />\\n                    <input ref=\\\"iban\\\" required id=\\\"iban\\\" type=\\\"text\\\" />\\n                </label>\\n\\n                <button className=\\\"button\\\" type=\\\"submit\\\">\\n                    <Translate content=\\\"gateway.withdraw_now\\\" />\\n                </button>\\n            </form>\\n        );\\n    }\\n\\n    changeAction(action) {\\n        this.setState({\\n            action\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            bktAction: action\\n        });\\n    }\\n\\n    _onSubmit(e) {\\n        e.preventDefault();\\n        let {min, max} = this.state;\\n        let {asset, account, bitKapital} = this.props;\\n\\n        let amount = parseInt(this.refs.amount.value, 10);\\n        let iban = this.refs.iban.value;\\n        console.log(\\\"amount:\\\", amount, \\\"iban:\\\", iban);\\n\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n\\n        if (amount < min || amount > max) {\\n            return;\\n        }\\n\\n        AccountActions.transfer(\\n            account.get(\\\"id\\\"), // from user\\n            bitKapital.get(\\\"id\\\"), // to bitkapital account\\n            parseInt(amount * precision, 10), // amount in full precision\\n            asset.get(\\\"id\\\"), // bitkapital asset id\\n            new Buffer(\\\"BOZDURMA - \\\" + iban.toUpperCase(), \\\"utf-8\\\"), // memo\\n            null, // propose set to false\\n            asset.get(\\\"id\\\") // Pay fee with KAPITAL\\n        ).then(() => {\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.listen(this.onTrxIncluded);\\n        });\\n    }\\n\\n    onTrxIncluded(confirm_store_state) {\\n        if (\\n            confirm_store_state.included &&\\n            confirm_store_state.broadcasted_transaction\\n        ) {\\n            // this.setState(Transfer.getInitialState());\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        } else if (confirm_store_state.closed) {\\n            TransactionConfirmStore.unlisten(this.onTrxIncluded);\\n            TransactionConfirmStore.reset();\\n        }\\n    }\\n\\n    render() {\\n        let {jianjolly, onay, account} = this.props;\\n        let {action} = this.state;\\n        // console.log(\\\"jianjolly:\\\", jianjolly.toJS(), \\\"asset:\\\", asset.toJS());\\n\\n        return (\\n            <div className=\\\"BitKapital\\\">\\n                <div className=\\\"content-block\\\">\\n                    <div style={{paddingBottom: 15}}>\\n                        <div\\n                            style={{marginRight: 10}}\\n                            onClick={this.changeAction.bind(this, \\\"deposit\\\")}\\n                            className={cnames(\\n                                \\\"button\\\",\\n                                action === \\\"deposit\\\" ? \\\"active\\\" : \\\"outline\\\"\\n                            )}\\n                        >\\n                            <Translate content=\\\"gateway.deposit\\\" />\\n                        </div>\\n                        <div\\n                            onClick={this.changeAction.bind(this, \\\"withdraw\\\")}\\n                            className={cnames(\\n                                \\\"button\\\",\\n                                action === \\\"withdraw\\\" ? \\\"active\\\" : \\\"outline\\\"\\n                            )}\\n                        >\\n                            <Translate content=\\\"gateway.withdraw\\\" />\\n                        </div>\\n                    </div>\\n                    {action === \\\"deposit\\\"\\n                        ? this._renderDeposits()\\n                        : this._renderWithdrawals()}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(BitKapital);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/RuDexMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Price, Asset} from \\\"common/MarketClasses\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass RuDexWithdrawModal extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        balance: ChainTypes.ChainObject,\\n        min_amount: PropTypes.number\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._checkMinAmount = this._checkMinAmount.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            function() {\\n                this._checkBalance;\\n                this._checkMinAmount();\\n            }\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    _checkMinAmount() {\\n        const {withdraw_amount} = this.state;\\n\\n        if (withdraw_amount === null) return;\\n        const lessThanMinimum =\\n            withdraw_amount <\\n            this.props.min_amount /\\n                utils.get_asset_precision(this.props.asset_precision);\\n        console.log(\\n            \\\"X\\\",\\n            withdraw_amount,\\n            this.props.min_amount /\\n                utils.get_asset_precision(this.props.asset_precision)\\n        );\\n        this.setState({minAmountError: lessThanMinimum});\\n        return lessThanMinimum;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                let amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"rudex-disabled-options\\\"\\n                            : \\\"rudex-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: \\\"0px\\\"}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.minAmountError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"gateway.rudex.min_amount_error\\\" />\\n                            </p>\\n                        ) : null}\\n                        <p className=\\\"no-margin\\\" style={{paddingTop: 10}}>\\n                            <b>\\n                                <Translate\\n                                    content=\\\"gateway.rudex.min_amount\\\"\\n                                    minAmount={utils.format_number(\\n                                        this.props.min_amount /\\n                                            utils.get_asset_precision(\\n                                                this.props.asset_precision\\n                                            ),\\n                                        this.props.asset_precision,\\n                                        false\\n                                    )}\\n                                    symbol={this.props.output_coin_symbol}\\n                                />\\n                            </b>\\n                        </p>\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"rudex-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"rudex-position-options\\\">{options}</div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            disabled={\\n                                this.state.error ||\\n                                this.state.balanceError ||\\n                                this.state.minAmountError\\n                            }\\n                            type=\\\"primary\\\"\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(RuDexWithdrawModal);\\n\",\"import ls from \\\"./localStorage\\\";\\nimport {rudexAPIs} from \\\"api/apiConfig\\\";\\nconst rudexStorage = new ls(\\\"\\\");\\n\\nexport function fetchCoinList(url = rudexAPIs.BASE + rudexAPIs.COINS_LIST) {\\n    return fetch(url, {method: \\\"post\\\"})\\n        .then(reply =>\\n            reply.json().then(result => {\\n                return result;\\n            })\\n        )\\n        .catch(err => {\\n            console.log(\\\"error fetching rudex list of coins\\\", err, url);\\n        });\\n}\\n\\nexport function requestDepositAddress({\\n    inputCoinType,\\n    outputCoinType,\\n    outputAddress,\\n    url = rudexAPIs.BASE,\\n    stateCallback\\n}) {\\n    let body = {\\n        inputCoinType,\\n        outputCoinType,\\n        outputAddress\\n    };\\n\\n    let body_string = JSON.stringify(body);\\n\\n    fetch(url + rudexAPIs.NEW_DEPOSIT_ADDRESS, {\\n        method: \\\"post\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: body_string\\n    })\\n        .then(\\n            reply => {\\n                reply.json().then(\\n                    json => {\\n                        // console.log( \\\"reply: \\\", json )\\n                        let address = {\\n                            address: json.inputAddress || \\\"unknown\\\",\\n                            memo: json.inputMemo,\\n                            error: json.error || null\\n                        };\\n                        if (stateCallback) stateCallback(address);\\n                    },\\n                    error => {\\n                        // console.log( \\\"error: \\\",error  );\\n                        if (stateCallback)\\n                            stateCallback({address: \\\"unknown\\\", memo: null});\\n                    }\\n                );\\n            },\\n            error => {\\n                // console.log( \\\"error: \\\",error  );\\n                if (stateCallback)\\n                    stateCallback({address: \\\"unknown\\\", memo: null});\\n            }\\n        )\\n        .catch(err => {\\n            console.log(\\\"fetch error:\\\", err);\\n        });\\n}\\n\\nexport function validateAddress({\\n    url = rudexAPIs.BASE,\\n    walletType,\\n    newAddress\\n}) {\\n    if (!newAddress) return new Promise(res => res());\\n    return fetch(url + \\\"/wallets/\\\" + walletType + \\\"/check-address\\\", {\\n        method: \\\"post\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: JSON.stringify({address: newAddress})\\n    })\\n        .then(reply => reply.json().then(json => json.isValid))\\n        .catch(err => {\\n            console.log(\\\"validate error:\\\", err);\\n        });\\n}\\n\\nfunction hasWithdrawalAddress(wallet) {\\n    return rudexStorage.has(`history_address_${wallet}`);\\n}\\n\\nfunction setWithdrawalAddresses({wallet, addresses}) {\\n    rudexStorage.set(`history_address_${wallet}`, addresses);\\n}\\n\\nfunction getWithdrawalAddresses(wallet) {\\n    return rudexStorage.get(`history_address_${wallet}`, []);\\n}\\n\\nfunction setLastWithdrawalAddress({wallet, address}) {\\n    rudexStorage.set(`history_address_last_${wallet}`, address);\\n}\\n\\nfunction getLastWithdrawalAddress(wallet) {\\n    return rudexStorage.get(`history_address_last_${wallet}`, \\\"\\\");\\n}\\n\\nexport const WithdrawAddresses = {\\n    has: hasWithdrawalAddress,\\n    set: setWithdrawalAddresses,\\n    get: getWithdrawalAddresses,\\n    setLast: setLastWithdrawalAddress,\\n    getLast: getLastWithdrawalAddress\\n};\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/gatewayMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {Price, Asset} from \\\"common/MarketClasses\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass BitsparkWithdrawModal extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        balance: ChainTypes.ChainObject\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            this._checkBalance\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                const amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                const gateFee =\\n                    typeof this.props.gateFee != \\\"undefined\\\"\\n                        ? parseFloat(\\n                              String.prototype.replace.call(\\n                                  this.props.gateFee,\\n                                  /,/g,\\n                                  \\\"\\\"\\n                              )\\n                          )\\n                        : 0.0;\\n\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                let balanceAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: 0\\n                });\\n\\n                if (typeof this.props.balance != \\\"undefined\\\") {\\n                    balanceAmount = sendAmount.clone(\\n                        this.props.balance.get(\\\"balance\\\")\\n                    );\\n                }\\n\\n                const gateFeeAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: gateFee\\n                });\\n\\n                sendAmount.plus(gateFeeAmount);\\n\\n                /* Insufficient balance */\\n                if (balanceAmount.lt(sendAmount)) {\\n                    sendAmount = balanceAmount;\\n                }\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"blocktrades-disabled-options\\\"\\n                            : \\\"blocktrades-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        const disableSubmit =\\n            this.state.error ||\\n            this.state.balanceError ||\\n            !this.state.withdraw_amount;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: 0}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"blocktrades-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"blocktrades-position-options\\\">\\n                            {options}\\n                        </div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={disableSubmit}\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(BitsparkWithdrawModal);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/gatewayMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Asset} from \\\"common/MarketClasses\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass WinexWithdrawModal extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        min_withdraw_amount: PropTypes.string,\\n        max_withdraw_amount: PropTypes.any,\\n        fee_type: PropTypes.string,\\n        balance: ChainTypes.ChainObject\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            this._checkWithdrawAmount(amount),\\n            this._validMinAmount(amount),\\n            this._calFinalNumber(amount)\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    _checkWithdrawAmount(withdraw_amount) {\\n        const {feeAmount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    _validMinAmount(withdraw_amount) {\\n        const {min_withdraw_amount} = this.props;\\n        var flag = false;\\n        if (parseFloat(withdraw_amount) < min_withdraw_amount) {\\n            flag = true;\\n        }\\n        this.setState({minWithdrawError: flag});\\n        return flag;\\n    }\\n\\n    _calFinalNumber(withdraw_amount) {\\n        if (!withdraw_amount) {\\n            withdraw_amount = \\\"0\\\";\\n        }\\n        let {fee_type, gateFee} = this.props;\\n\\n        let amount = parseFloat(withdraw_amount);\\n        let drawGatefee = parseFloat(gateFee);\\n        if (fee_type === \\\"1\\\") {\\n            this.setState({\\n                finalNumber: (amount - amount * drawGatefee).toFixed(8)\\n            });\\n        } else {\\n            this.setState({finalNumber: (amount - drawGatefee).toFixed(8)});\\n        }\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                let amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"blocktrades-disabled-options\\\"\\n                            : \\\"blocktrades-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        const disableSubmit =\\n            this.state.error ||\\n            this.state.balanceError ||\\n            this.state.minWithdrawError;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: 0}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"winex.withdraw.winAmount\\\"\\n                                min_amount={this.props.min_withdraw_amount}\\n                                asset={this.props.asset.get(\\\"symbol\\\")}\\n                            />\\n                        </label>\\n\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.minWithdrawError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate\\n                                    content=\\\"winex.transfer.errors.minWithdraw\\\"\\n                                    min_amount={\\n                                        this.props.min_withdraw_amount +\\n                                        this.props.asset.get(\\\"symbol\\\")\\n                                    }\\n                                />\\n                            </p>\\n                        ) : null}\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee * 100}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.fee_type === \\\"1\\\"\\n                                                ? \\\"%\\\"\\n                                                : this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <label className=\\\"left-label\\\">\\n                                <Translate\\n                                    content=\\\"winex.withdraw.finalNumber\\\"\\n                                    final_number={this.state.finalNumber}\\n                                />\\n                            </label>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"blocktrades-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"blocktrades-position-options\\\">\\n                            {options}\\n                        </div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {/*{withdraw_memo}*/}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={disableSubmit}\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(WinexWithdrawModal);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/XbtsxMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs/es\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Price, Asset} from \\\"common/MarketClasses\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass XbtsxWithdrawModal extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_name: PropTypes.string.isRequired,\\n        output_coin_symbol: PropTypes.string.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string,\\n        output_wallet_type: PropTypes.string,\\n        output_supports_memos: PropTypes.bool.isRequired,\\n        amount_to_withdraw: PropTypes.string,\\n        balance: ChainTypes.ChainObject,\\n        min_amount: PropTypes.number,\\n        withdraw_fee: PropTypes.number\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            confirmation_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_wallet_type\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {}\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._checkMinAmount = this._checkMinAmount.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content:\\n                    this.props.output_coin_type +\\n                    \\\":\\\" +\\n                    state.withdraw_address +\\n                    (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_type +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            function() {\\n                this._checkBalance;\\n                this._checkMinAmount();\\n            }\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            url: props.url,\\n            walletType: props.output_wallet_type,\\n            newAddress: new_withdraw_address\\n        }).then(isValid => {\\n            if (this.state.withdraw_address === new_withdraw_address) {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: isValid\\n                });\\n            }\\n        });\\n    }\\n\\n    _checkBalance() {\\n        const {feeAmount, withdraw_amount} = this.state;\\n        const {asset, balance} = this.props;\\n        if (!balance || !feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n        return hasBalance;\\n    }\\n\\n    _checkMinAmount() {\\n        const {withdraw_amount} = this.state;\\n\\n        if (withdraw_amount === null) return;\\n        const lessThanMinimum =\\n            withdraw_amount <\\n            this.props.min_amount /\\n                utils.get_asset_precision(this.props.asset_precision);\\n        this.setState({minAmountError: lessThanMinimum});\\n        return lessThanMinimum;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_wallet_type,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_wallet_type\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_wallet_type,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_wallet_type,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                let amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this.props.output_coin_type +\\n                        \\\":\\\" +\\n                        this.state.withdraw_address +\\n                        (this.state.memo\\n                            ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                            : \\\"\\\"),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_wallet_type,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_wallet_type\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_wallet_type,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_wallet_type,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this.props.output_coin_type +\\n                \\\":\\\" +\\n                this.state.withdraw_address +\\n                (this.state.memo\\n                    ? \\\":\\\" + new Buffer(this.state.memo, \\\"utf-8\\\")\\n                    : \\\"\\\"),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_wallet_type)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_wallet_type\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"rudex-disabled-options\\\"\\n                            : \\\"rudex-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                invalid_address_message = (\\n                    <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                        <Translate\\n                            content=\\\"gateway.valid_address\\\"\\n                            coin_type={this.props.output_coin_type}\\n                        />\\n                    </div>\\n                );\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n            // if (this.state.withdraw_address_is_valid)\\n            //   invalid_address_message = <Icon name=\\\"checkmark-circle\\\" title=\\\"icons.checkmark_circle.operation_succeed\\\" className=\\\"success\\\" />;\\n            // else\\n            //   invalid_address_message = <Icon name=\\\"cross-circle\\\" title=\\\"icons.cross_circle.operation_failed\\\" className=\\\"alert\\\" />;\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        let minDeposit = utils.format_number(\\n            this.props.min_amount /\\n                utils.get_asset_precision(this.props.asset_precision),\\n            this.props.asset_precision,\\n            false\\n        );\\n        let gateFee = this.props.withdraw_fee\\n            ? utils.format_number(\\n                  this.props.withdraw_fee /\\n                      utils.get_asset_precision(this.props.asset_precision),\\n                  this.props.asset_precision,\\n                  false\\n              )\\n            : null;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: 0}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.minAmountError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"gateway.xbtsx.min_amount_error\\\" />\\n                            </p>\\n                        ) : null}\\n                        <p className=\\\"no-margin\\\" style={{paddingTop: 10}}>\\n                            <b>\\n                                <Translate\\n                                    content=\\\"gateway.xbtsx.min_amount\\\"\\n                                    minAmount={minDeposit}\\n                                    symbol={this.props.output_coin_symbol}\\n                                />\\n                            </b>\\n                        </p>\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input type=\\\"text\\\" disabled value={gateFee} />\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"rudex-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    spellcheck=\\\"false\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"rudex-position-options\\\">{options}</div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={\\n                                this.state.error ||\\n                                this.state.balanceError ||\\n                                this.state.minAmountError\\n                            }\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(XbtsxWithdrawModal, {keep_updating: true});\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass DisableCopyText extends React.Component {\\n    static propTypes = {\\n        disableCopy: PropTypes.bool,\\n        replaceCopyText: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this._handleCopy = this._handleCopy.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        if (this.childRef) this.node = ReactDOM.findDOMNode(this.childRef);\\n\\n        if (this.node && this.node.addEventListener) {\\n            this.node.addEventListener(\\\"copy\\\", this._handleCopy);\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        if (this.node && this.node.removeEventListener)\\n            this.node.removeEventListener(\\\"copy\\\", this._handleCopy);\\n    }\\n\\n    _handleCopy(evt) {\\n        if (this.props.disableCopy !== false) {\\n            if (this.props.replaceCopyText) {\\n                evt.clipboardData.setData(\\n                    \\\"text/plain\\\",\\n                    this.props.replaceCopyText\\n                );\\n            }\\n\\n            evt.preventDefault();\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <span ref={ref => (this.childRef = ref)}>\\n                {this.props.children}\\n            </span>\\n        );\\n    }\\n}\\n\\nexport default DisableCopyText;\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs/es\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport WithdrawModalCitadel from \\\"./WithdrawModalCitadel\\\";\\nimport ZfApi from \\\"react-foundation-apps/src/utils/foundation-api\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport {requestDepositAddress, getDepositAddress} from \\\"common/gatewayMethods\\\";\\nimport {blockTradesAPIs, openledgerAPIs, citadelAPIs} from \\\"api/apiConfig\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport DisableCopyText from \\\"../DisableCopyText\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\nimport CopyToClipboard from \\\"react-copy-to-clipboard\\\";\\n\\nclass CitadelGatewayDepositRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        let urls = {\\n            blocktrades: blockTradesAPIs.BASE,\\n            openledger: openledgerAPIs.BASE,\\n            citadel: citadelAPIs.BASE\\n        };\\n\\n        this.state = {\\n            isModalVisible: false,\\n            receive_address: null,\\n            url: props.url || urls[props.gateway],\\n            loading: false,\\n            emptyAddressDeposit: false\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _getDepositObject() {\\n        return {\\n            inputCoinType: this.props.deposit_coin_type,\\n            outputCoinType: this.props.receive_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\"),\\n            url: this.state.url,\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    componentWillMount() {\\n        getDepositAddress({\\n            coin: this.props.receive_coin_type,\\n            account: this.props.account.get(\\\"name\\\"),\\n            stateCallback: this.addDepositAddress\\n        });\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (np.account !== this.props.account) {\\n            getDepositAddress({\\n                coin: np.receive_coin_type,\\n                account: np.account.get(\\\"name\\\"),\\n                stateCallback: this.addDepositAddress\\n            });\\n        }\\n    }\\n\\n    addDepositAddress(receive_address) {\\n        if (receive_address.error) {\\n            receive_address.error.message === \\\"no_address\\\"\\n                ? this.setState({emptyAddressDeposit: true})\\n                : this.setState({emptyAddressDeposit: false});\\n        }\\n\\n        this.setState({receive_address});\\n        this.setState({\\n            loading: false\\n        });\\n        this.setState({receive_address});\\n    }\\n\\n    requestDepositAddressLoad() {\\n        this.setState({\\n            loading: true,\\n            emptyAddressDeposit: false\\n        });\\n        requestDepositAddress(this._getDepositObject());\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        ZfApi.publish(this.getWithdrawModalId(), \\\"open\\\");\\n    }\\n\\n    render() {\\n        const isDeposit = this.props.action === \\\"deposit\\\";\\n        let emptyRow = <LoadingIndicator />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        const {gateFee} = this.props;\\n\\n        let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        let receive_address = this.state.receive_address;\\n        let {emptyAddressDeposit} = this.state;\\n        let indicatorButtonAddr = this.state.loading;\\n\\n        if (!receive_address) {\\n            return (\\n                <div style={{margin: \\\"3rem\\\"}}>\\n                    <LoadingIndicator type=\\\"three-bounce\\\" />\\n                </div>\\n            );\\n        }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let deposit_memo = null;\\n\\n        let clipboardText = \\\"\\\";\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            clipboardText =\\n                this.props.receive_coin_type +\\n                \\\":\\\" +\\n                this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{clipboardText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        if (\\n            !this.props.isAvailable ||\\n            ((isDeposit && !this.props.deposit_account && !receive_address) ||\\n                (receive_address && receive_address.address === \\\"unknown\\\"))\\n        ) {\\n            return (\\n                <div>\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        if (isDeposit) {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"fz_12 left-label\\\">\\n                            <Translate content=\\\"gateway.deposit_notice_delay\\\" />\\n                        </label>\\n                        <div>\\n                            {emptyAddressDeposit ? (\\n                                <Translate content=\\\"gateway.please_generate_address\\\" />\\n                            ) : (\\n                                <DisableCopyText\\n                                    replaceCopyText={counterpart.translate(\\n                                        \\\"gateway.use_copy_button\\\"\\n                                    )}\\n                                >\\n                                    deposit_address_fragment\\n                                </DisableCopyText>\\n                            )}\\n                            <div>\\n                                {deposit_memo && (\\n                                    <span>\\n                                        <DisableCopyText\\n                                            replaceCopyText={counterpart.translate(\\n                                                \\\"gateway.use_copy_button\\\"\\n                                            )}\\n                                        >\\n                                            memo: {deposit_memo}\\n                                        </DisableCopyText>\\n                                    </span>\\n                                )}\\n                            </div>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <CopyToClipboard text={clipboardText}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_address\\\" />\\n                                            cidatel\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <CopyToClipboard text={memoText}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_memo\\\" />\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                <button\\n                                    className={\\\"button spinner-button-circle\\\"}\\n                                    onClick={this.requestDepositAddressLoad.bind(\\n                                        this\\n                                    )}\\n                                >\\n                                    {indicatorButtonAddr ? (\\n                                        <LoadingIndicator type=\\\"circle\\\" />\\n                                    ) : null}\\n                                    <Translate content=\\\"gateway.generate_new\\\" />\\n                                </button>\\n                            </div>\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_amount\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_asset\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                        id={withdraw_modal_id}\\n                        overlay={true}\\n                    >\\n                        <WithdrawModalCitadel\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            url={this.state.url}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            gateFee={gateFee}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(CitadelGatewayDepositRequest);\\n\",\"import React from \\\"react\\\";\\nimport CitadelGatewayDepositRequest from \\\"./CitadelGatewayDepositRequest\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {\\n    RecentTransactions,\\n    TransactionWrapper\\n} from \\\"components/Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport cnames from \\\"classnames\\\";\\nimport LoadingIndicator from \\\"../../LoadingIndicator\\\";\\n\\nclass CitadelGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        const action = props.viewSettings.get(\\n            `${props.provider}Action`,\\n            \\\"deposit\\\"\\n        );\\n        this.state = {\\n            activeCoin: this._getActiveCoin(props, {action}),\\n            action\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_citadel_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"XMR\\\";\\n        }\\n        if (state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"XMR\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.provider !== this.props.provider) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_citadel_${this.state.action}`] = e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            [`${this.props.provider}Action`]: type\\n        });\\n    }\\n\\n    render() {\\n        let {coins, account, provider} = this.props;\\n        let {activeCoin, action} = this.state;\\n\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoinType.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoinType.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n\\n        let isDeposit = this.state.action === \\\"deposit\\\";\\n\\n        let supportUrl = \\\"https://citadel.li\\\";\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />\\n                                :{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <CitadelGatewayDepositRequest\\n                                key={`${provider}.${coin.symbol}`}\\n                                gateway={provider}\\n                                issuer_account={coin.intermediateAccount}\\n                                account={account}\\n                                deposit_asset={coin.backingCoinType.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoinType.toLowerCase()}\\n                                deposit_account={coin.depositAccount}\\n                                deposit_wallet_type={coin.walletType}\\n                                gateFee={coin.gateFee}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.supportsMemos}\\n                                isAvailable={coin.isAvailable}\\n                                action={this.state.action}\\n                            />\\n                            <label className=\\\"left-label\\\">Support</label>\\n                            <div>\\n                                <Translate content=\\\"gateway.citadel.support_block\\\" />\\n                                <br />\\n                                <br />\\n                                <a\\n                                    href={supportUrl}\\n                                    target=\\\"_blank\\\"\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                >\\n                                    {supportUrl}\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        {coin && coin.symbol ? (\\n                            <TransactionWrapper\\n                                asset={coin.symbol}\\n                                fromAccount={\\n                                    isDeposit\\n                                        ? issuer.id\\n                                        : this.props.account.get(\\\"id\\\")\\n                                }\\n                                to={\\n                                    isDeposit\\n                                        ? this.props.account.get(\\\"id\\\")\\n                                        : issuer.id\\n                                }\\n                            >\\n                                {({asset, to, fromAccount}) => {\\n                                    return (\\n                                        <RecentTransactions\\n                                            accountsList={Immutable.List([\\n                                                this.props.account.get(\\\"id\\\")\\n                                            ])}\\n                                            limit={10}\\n                                            compactView={true}\\n                                            fullHeight={true}\\n                                            filter=\\\"transfer\\\"\\n                                            title={\\n                                                <Translate\\n                                                    content={\\n                                                        \\\"gateway.recent_\\\" +\\n                                                        this.state.action\\n                                                    }\\n                                                />\\n                                            }\\n                                            customFilter={{\\n                                                fields: [\\n                                                    \\\"to\\\",\\n                                                    \\\"from\\\",\\n                                                    \\\"asset_id\\\"\\n                                                ],\\n                                                values: {\\n                                                    to: to.get(\\\"id\\\"),\\n                                                    from: fromAccount.get(\\\"id\\\"),\\n                                                    asset_id: asset.get(\\\"id\\\")\\n                                                }\\n                                            }}\\n                                        />\\n                                    );\\n                                }}\\n                            </TransactionWrapper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(\\n    CitadelGateway,\\n    {\\n        listenTo() {\\n            return [SettingsStore];\\n        },\\n        getProps() {\\n            return {\\n                viewSettings: SettingsStore.getState().viewSettings\\n            };\\n        }\\n    }\\n);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport WithdrawModalBlocktrades from \\\"./WithdrawModalBlocktrades\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport {requestDepositAddress, getDepositAddress} from \\\"common/gatewayMethods\\\";\\nimport {blockTradesAPIs, openledgerAPIs} from \\\"api/apiConfig\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport DisableCopyText from \\\"../DisableCopyText\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport CopyToClipboard from \\\"react-copy-to-clipboard\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass OpenledgerGatewayDepositRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        let urls = {\\n            blocktrades: blockTradesAPIs.BASE,\\n            openledger: openledgerAPIs.BASE\\n        };\\n\\n        this.state = {\\n            isModalVisible: false,\\n            receive_address: null,\\n            url: props.url || urls[props.gateway],\\n            loading: false,\\n            emptyAddressDeposit: false\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _getDepositObject() {\\n        return {\\n            inputCoinType: this.props.deposit_coin_type,\\n            outputCoinType: this.props.receive_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\"),\\n            url: this.state.url,\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    componentWillMount() {\\n        getDepositAddress({\\n            coin: this.props.receive_coin_type,\\n            account: this.props.account.get(\\\"name\\\"),\\n            stateCallback: this.addDepositAddress\\n        });\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (np.account !== this.props.account) {\\n            getDepositAddress({\\n                coin: np.receive_coin_type,\\n                account: np.account.get(\\\"name\\\"),\\n                stateCallback: this.addDepositAddress\\n            });\\n        }\\n    }\\n\\n    addDepositAddress(receive_address) {\\n        if (receive_address.error) {\\n            receive_address.error.message === \\\"no_address\\\"\\n                ? this.setState({emptyAddressDeposit: true})\\n                : this.setState({emptyAddressDeposit: false});\\n        }\\n\\n        this.setState({receive_address});\\n        this.setState({\\n            loading: false\\n        });\\n        this.setState({receive_address});\\n    }\\n\\n    requestDepositAddressLoad() {\\n        this.setState({\\n            loading: true,\\n            emptyAddressDeposit: false\\n        });\\n        requestDepositAddress(this._getDepositObject());\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    render() {\\n        const isDeposit = this.props.action === \\\"deposit\\\";\\n        let emptyRow = <LoadingIndicator />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        const {gateFee} = this.props;\\n\\n        let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        // let account_balances = account_balances_object.toJS();\\n        // let asset_types = Object.keys(account_balances);\\n        // if (asset_types.length > 0) {\\n        //     let current_asset_id = this.props.receive_asset.get(\\\"id\\\");\\n        //     if( current_asset_id )\\n        //     {\\n        //         balance = (<span><Translate component=\\\"span\\\" content=\\\"transfer.available\\\"/>: <BalanceComponent balance={account_balances[current_asset_id]}/></span>);\\n        //     }\\n        // }\\n\\n        let receive_address = this.state.receive_address;\\n        let {emptyAddressDeposit} = this.state;\\n        let indicatorButtonAddr = this.state.loading;\\n\\n        if (!receive_address) {\\n            return (\\n                <div style={{margin: \\\"3rem\\\"}}>\\n                    <LoadingIndicator type=\\\"three-bounce\\\" />\\n                </div>\\n            );\\n        }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let addressToCopy = null;\\n        let deposit_memo = null;\\n        // if (this.props.deprecated_in_favor_of)\\n        // {\\n        //     deposit_address_fragment = <span>please use {this.props.deprecated_in_favor_of.get(\\\"symbol\\\")} instead. <span data-tip={this.props.deprecated_message} data-place=\\\"right\\\" data-html={true}><Icon name=\\\"question-circle\\\" title=\\\"icons.question_circle\\\" /></span><ReactTooltip /></span>;\\n        // }\\n        // else\\n        // {\\n        let clipboardText = \\\"\\\";\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            addressToCopy = this.props.deposit_account;\\n            clipboardText =\\n                this.props.receive_coin_type +\\n                \\\":\\\" +\\n                this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{clipboardText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            addressToCopy = (receive_address && receive_address.address) || \\\"\\\";\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        if (\\n            !this.props.isAvailable ||\\n            ((isDeposit && !this.props.deposit_account && !receive_address) ||\\n                (receive_address && receive_address.address === \\\"unknown\\\"))\\n        ) {\\n            return (\\n                <div>\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        if (isDeposit) {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"fz_12 left-label\\\">\\n                            <Translate content=\\\"gateway.deposit_notice_delay\\\" />\\n                        </label>\\n                        <div>\\n                            {emptyAddressDeposit ? (\\n                                <Translate content=\\\"gateway.please_generate_address\\\" />\\n                            ) : (\\n                                <DisableCopyText\\n                                    replaceCopyText={counterpart.translate(\\n                                        \\\"gateway.use_copy_button\\\"\\n                                    )}\\n                                >\\n                                    {deposit_address_fragment}\\n                                </DisableCopyText>\\n                            )}\\n                            <div>\\n                                {deposit_memo && (\\n                                    <span>memo: {deposit_memo}</span>\\n                                )}\\n                            </div>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <CopyToClipboard text={addressToCopy}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_address\\\" />\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <CopyToClipboard text={memoText}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_memo\\\" />\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                <button\\n                                    className={\\\"button spinner-button-circle\\\"}\\n                                    onClick={this.requestDepositAddressLoad.bind(\\n                                        this\\n                                    )}\\n                                >\\n                                    {indicatorButtonAddr ? (\\n                                        <LoadingIndicator type=\\\"circle\\\" />\\n                                    ) : null}\\n                                    <Translate content=\\\"gateway.generate_new\\\" />\\n                                </button>\\n                            </div>\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_amount\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_asset\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                        id={withdraw_modal_id}\\n                        overlay={true}\\n                    >\\n                        <WithdrawModalBlocktrades\\n                            hideModal={this.hideModal}\\n                            showModal={this.showModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            url={this.state.url}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            gateFee={gateFee}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(OpenledgerGatewayDepositRequest);\\n\",\"import React from \\\"react\\\";\\nimport OpenledgerGatewayDepositRequest from \\\"../DepositWithdraw/blocktrades/OpenledgerGatewayDepositRequest\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {\\n    RecentTransactions,\\n    TransactionWrapper\\n} from \\\"components/Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport LoadingIndicator from \\\"../LoadingIndicator\\\";\\n\\nclass OpenledgerGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        const action = props.viewSettings.get(\\n            `${props.provider}Action`,\\n            \\\"deposit\\\"\\n        );\\n        this.state = {\\n            activeCoin: this._getActiveCoin(props, {action}),\\n            action\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_${props.provider}_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (props.provider == \\\"blocktrades\\\" && state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"BTC\\\";\\n        }\\n        if (props.provider == \\\"openledger\\\" && state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"BTC\\\";\\n        }\\n        if (props.provider == \\\"blocktrades\\\" && state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"TRADE.BTC\\\";\\n        }\\n        if (props.provider == \\\"openledger\\\" && state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"OPEN.BTC\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.provider !== this.props.provider) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    // shouldComponentUpdate(nextProps, nextState) {\\n    //     if (nextState.action !== this.state.action) {\\n    //         this.setState({\\n    //             activeCoin: this._getActiveCoin(nextProps, nextState)\\n    //         });\\n    //     }\\n\\n    //     return true;\\n    // }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_${this.props.provider}_${this.state.action}`] =\\n            e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            [`${this.props.provider}Action`]: type\\n        });\\n    }\\n\\n    render() {\\n        let {coins, account, provider} = this.props;\\n        let {activeCoin, action} = this.state;\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoinType.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoinType.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n\\n        let issuers = {\\n            blocktrades: {\\n                name: \\\"blocktrades\\\",\\n                id: \\\"1.2.32567\\\",\\n                support: \\\"support@blocktrades.us\\\"\\n            },\\n            openledger: {\\n                name: coin.intermediateAccount,\\n                id: \\\"1.2.96397\\\",\\n                support: \\\"https://dex.openledger.io\\\"\\n            }\\n        };\\n\\n        let issuer = issuers[provider];\\n\\n        let isDeposit = this.state.action === \\\"deposit\\\";\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />\\n                                :{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <OpenledgerGatewayDepositRequest\\n                                key={`${provider}.${coin.symbol}`}\\n                                gateway={provider}\\n                                issuer_account={issuer.name}\\n                                account={account}\\n                                deposit_asset={coin.backingCoinType.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoinType.toLowerCase()}\\n                                deposit_account={coin.depositAccount}\\n                                deposit_wallet_type={coin.walletType}\\n                                gateFee={coin.gateFee}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.supportsMemos}\\n                                isAvailable={coin.isAvailable}\\n                                action={this.state.action}\\n                            />\\n                            <label className=\\\"left-label\\\">Support</label>\\n                            <div>\\n                                <Translate content=\\\"gateway.support_block\\\" />\\n                                <br />\\n                                <br />\\n                                <a\\n                                    href={\\n                                        (issuer.support.indexOf(\\\"@\\\") === -1\\n                                            ? \\\"\\\"\\n                                            : \\\"mailto:\\\") + issuer.support\\n                                    }\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                >\\n                                    {issuer.support}\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        {coin && coin.symbol ? (\\n                            <TransactionWrapper\\n                                asset={coin.symbol}\\n                                fromAccount={\\n                                    isDeposit\\n                                        ? issuer.id\\n                                        : this.props.account.get(\\\"id\\\")\\n                                }\\n                                to={\\n                                    isDeposit\\n                                        ? this.props.account.get(\\\"id\\\")\\n                                        : issuer.id\\n                                }\\n                            >\\n                                {({asset, to, fromAccount}) => {\\n                                    return (\\n                                        <RecentTransactions\\n                                            accountsList={Immutable.List([\\n                                                this.props.account.get(\\\"id\\\")\\n                                            ])}\\n                                            limit={10}\\n                                            compactView={true}\\n                                            fullHeight={true}\\n                                            filter=\\\"transfer\\\"\\n                                            title={\\n                                                <Translate\\n                                                    content={\\n                                                        \\\"gateway.recent_\\\" +\\n                                                        this.state.action\\n                                                    }\\n                                                />\\n                                            }\\n                                            customFilter={{\\n                                                fields: [\\n                                                    \\\"to\\\",\\n                                                    \\\"from\\\",\\n                                                    \\\"asset_id\\\"\\n                                                ],\\n                                                values: {\\n                                                    to: to.get(\\\"id\\\"),\\n                                                    from: fromAccount.get(\\\"id\\\"),\\n                                                    asset_id: asset.get(\\\"id\\\")\\n                                                }\\n                                            }}\\n                                        />\\n                                    );\\n                                }}\\n                            </TransactionWrapper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(\\n    OpenledgerGateway,\\n    {\\n        listenTo() {\\n            return [SettingsStore];\\n        },\\n        getProps() {\\n            return {\\n                viewSettings: SettingsStore.getState().viewSettings\\n            };\\n        }\\n    }\\n);\\n\",\"import React from \\\"react\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport ZfApi from \\\"react-foundation-apps/src/utils/foundation-api\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass DepositFiatOpenLedger extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer_account: ChainTypes.ChainAccount.isRequired,\\n        deposit_asset: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset.isRequired,\\n        rpc_url: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            deposit_amount: null,\\n            deposit_info: null,\\n            deposit_error: null\\n        };\\n    }\\n\\n    onDepositAmountChange({amount, asset}) {\\n        this.setState({deposit_amount: amount});\\n    }\\n\\n    onSubmitDeposit() {\\n        let asset = this.props.receive_asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = this.state.deposit_amount.replace(/,/g, \\\"\\\");\\n        console.log(\\\"deposit_amount: \\\", amount);\\n\\n        let json_rpc_request = {\\n            jsonrpc: \\\"2.0\\\",\\n            method: \\\"getDepositAccount\\\",\\n            params: {\\n                bitsharesAccountName: this.props.account.get(\\\"name\\\"),\\n                currency: this.props.deposit_asset,\\n                amount: amount\\n            },\\n            id: 1\\n        };\\n\\n        let is_deposit_approved_promise = fetch(this.props.rpc_url, {\\n            method: \\\"POST\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"content-type\\\": \\\"application/x-www-form-urlencoded\\\"\\n            }),\\n            body: \\\"rq=\\\" + encodeURIComponent(JSON.stringify(json_rpc_request))\\n        }).then(response => response.json());\\n\\n        is_deposit_approved_promise\\n            .then(json_response => {\\n                if (\\\"result\\\" in json_response)\\n                    this.setState({deposit_info: json_response.result});\\n                else if (\\n                    \\\"error\\\" in json_reponse &&\\n                    \\\"message\\\" in json_response.error\\n                )\\n                    this.setState({deposit_error: json_response.error.message});\\n                else\\n                    this.setState({\\n                        deposit_error:\\n                            \\\"Unable to approve deposit, please contact OpenLedger or try again later\\\"\\n                    });\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    deposit_error:\\n                        \\\"Unable to approve deposit, please contact OpenLedger or try again later\\\"\\n                });\\n            });\\n    }\\n\\n    onClose() {\\n        // reset the state so the next time the dialog is launched, it doesn't show the old data\\n        this.setState({\\n            deposit_amount: null,\\n            deposit_info: null,\\n            deposit_error: null\\n        });\\n        ZfApi.publish(this.props.modal_id, \\\"close\\\");\\n    }\\n\\n    render() {\\n        if (this.state.deposit_error) {\\n            // then we've failed to approve them\\n            return (\\n                <form className=\\\"grid-block vertical full-width-content\\\">\\n                    <div className=\\\"grid-container\\\">\\n                        <div className=\\\"content-block\\\">\\n                            <h3>Deposit Error</h3>\\n                        </div>\\n                        <div className=\\\"content-block\\\">\\n                            <p>{this.state.deposit_error}</p>\\n                        </div>\\n                        <div className=\\\"content-block\\\">\\n                            <input\\n                                type=\\\"submit\\\"\\n                                className=\\\"button\\\"\\n                                onClick={this.onClose.bind(this)}\\n                                value=\\\"Close\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                </form>\\n            );\\n        } else if (this.state.deposit_info) {\\n            // then they've been approved for deposit\\n            if (\\\"link\\\" in this.state.deposit_info)\\n                return (\\n                    <form className=\\\"grid-block vertical full-width-content\\\">\\n                        <div className=\\\"grid-container\\\">\\n                            <div className=\\\"content-block\\\">\\n                                <h3>Deposit Information</h3>\\n                            </div>\\n                            <div className=\\\"content-block\\\">\\n                                <p>\\n                                    Click{\\\" \\\"}\\n                                    <a\\n                                        href={this.state.deposit_info.link}\\n                                        rel=\\\"noopener noreferrer\\\"\\n                                        target=\\\"_blank\\\"\\n                                    >\\n                                        here\\n                                    </a>{\\\" \\\"}\\n                                    for deposit instructions\\n                                </p>\\n                            </div>\\n                            <div className=\\\"content-block\\\">\\n                                <input\\n                                    type=\\\"submit\\\"\\n                                    className=\\\"button\\\"\\n                                    onClick={this.onClose.bind(this)}\\n                                    value=\\\"Close\\\"\\n                                />\\n                            </div>\\n                        </div>\\n                    </form>\\n                );\\n\\n            // old dead code for displaying all returned fields as text\\n            let table_lines = [];\\n            for (var key in this.state.deposit_info)\\n                if (this.state.deposit_info.hasOwnProperty(key))\\n                    table_lines.push(\\n                        <tr>\\n                            <td>{key}</td>\\n                            <td>{this.state.deposit_info[key]}</td>\\n                        </tr>\\n                    );\\n            return (\\n                <form className=\\\"grid-block vertical full-width-content\\\">\\n                    <div className=\\\"grid-container\\\">\\n                        <div className=\\\"content-block\\\">\\n                            <h3>Deposit Information</h3>\\n                        </div>\\n                        <div className=\\\"content-block\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>{table_lines}</tbody>\\n                            </table>\\n                        </div>\\n\\n                        <div className=\\\"content-block\\\">\\n                            <input\\n                                type=\\\"submit\\\"\\n                                className=\\\"button\\\"\\n                                onClick={this.onClose.bind(this)}\\n                                value={counterpart.translate(\\n                                    \\\"account.perm.cancel\\\"\\n                                )}\\n                            />\\n                            {/* <Trigger close={this.props.modal_id}>\\n                          <div className=\\\"button\\\">Close</a>\\n                        </Trigger> */}\\n                        </div>\\n                    </div>\\n                </form>\\n            );\\n        } else {\\n            // they haven't clicked deposit, ask them how much they're depositing\\n            return (\\n                <form className=\\\"grid-block vertical full-width-content\\\">\\n                    <div className=\\\"grid-container\\\">\\n                        <div className=\\\"content-block\\\">\\n                            <h3>Deposit {this.props.deposit_asset}</h3>\\n                        </div>\\n                        <div className=\\\"content-block\\\">\\n                            <AmountSelector\\n                                label=\\\"modal.deposit.amount\\\"\\n                                amount={this.state.deposit_amount}\\n                                asset={this.props.receive_asset.get(\\\"id\\\")}\\n                                assets={[this.props.receive_asset.get(\\\"id\\\")]}\\n                                placeholder=\\\"0.0\\\"\\n                                onChange={this.onDepositAmountChange.bind(this)}\\n                                display_balance={null}\\n                            />\\n                        </div>\\n\\n                        <div className=\\\"content-block\\\">\\n                            <input\\n                                type=\\\"submit\\\"\\n                                className=\\\"button\\\"\\n                                onClick={this.onSubmitDeposit.bind(this)}\\n                                value={counterpart.translate(\\n                                    \\\"modal.deposit.submit\\\"\\n                                )}\\n                            />\\n                            <input\\n                                type=\\\"submit\\\"\\n                                className=\\\" button\\\"\\n                                onClick={this.onClose.bind(this)}\\n                                value={counterpart.translate(\\n                                    \\\"account.perm.cancel\\\"\\n                                )}\\n                            />\\n                            {/* <Trigger close={this.props.modal_id}>\\n                              <div className=\\\"button\\\"><Translate content=\\\"account.perm.cancel\\\" /></div>\\n                          </Trigger> */}\\n                        </div>\\n                    </div>\\n                </form>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(DepositFiatOpenLedger);\\n\",\"import React from \\\"react\\\";\\nimport Trigger from \\\"react-foundation-apps/src/trigger\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass WithdrawFiatOpenLedger extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer_account: ChainTypes.ChainAccount.isRequired,\\n        deposit_asset: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset.isRequired,\\n        rpc_url: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            withdraw_amount: null\\n        };\\n    }\\n\\n    onWithdrawAmountChange({amount, asset}) {\\n        this.setState({withdraw_amount: amount});\\n    }\\n\\n    onSubmit() {\\n        let asset = this.props.receive_asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = this.state.withdraw_amount.replace(/,/g, \\\"\\\");\\n\\n        let json_rpc_request = {\\n            jsonrpc: \\\"2.0\\\",\\n            method: \\\"getMemoForFiatWithdrawal\\\",\\n            params: {\\n                bitsharesAccountName: this.props.account.get(\\\"name\\\"),\\n                currency: this.props.deposit_asset,\\n                amount: amount\\n            },\\n            id: 1\\n        };\\n        let is_withdrawal_approved_promise = fetch(this.props.rpc_url, {\\n            method: \\\"POST\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"content-type\\\": \\\"application/x-www-form-urlencoded\\\"\\n            }),\\n            body: \\\"rq=\\\" + encodeURIComponent(JSON.stringify(json_rpc_request))\\n        }).then(response => response.json());\\n\\n        is_withdrawal_approved_promise\\n            .then(json_response => {\\n                if (\\\"result\\\" in json_response)\\n                    AccountActions.transfer(\\n                        this.props.account.get(\\\"id\\\"),\\n                        this.props.issuer_account.get(\\\"id\\\"),\\n                        parseInt(amount * precision, 10),\\n                        asset.get(\\\"id\\\"),\\n                        json_response.result\\n                    );\\n                else if (\\n                    \\\"error\\\" in json_response &&\\n                    \\\"message\\\" in json_response.error\\n                )\\n                    throw json_repsonse.error.message;\\n                else\\n                    throw \\\"Unable to approve withdrawal, please contact OpenLedger or try again later\\\";\\n            })\\n            .catch(error => {\\n                alert(error);\\n            });\\n    }\\n\\n    render() {\\n        let balance = null;\\n        // console.log( \\\"account: \\\", this.props.account.toJS() );\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        // console.log( \\\"balances: \\\", account_balances );\\n        let asset_types = Object.keys(account_balances);\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.receive_asset.get(\\\"id\\\");\\n            if (current_asset_id)\\n                balance = (\\n                    <span>\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />:{\\\" \\\"}\\n                        <BalanceComponent\\n                            balance={account_balances[current_asset_id]}\\n                        />\\n                    </span>\\n                );\\n            else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        return (\\n            <form className=\\\"grid-block vertical full-width-content\\\">\\n                <div className=\\\"grid-container\\\">\\n                    <div className=\\\"content-block\\\">\\n                        <h3>Withdraw {this.props.deposit_asset}</h3>\\n                    </div>\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.receive_asset.get(\\\"id\\\")}\\n                            assets={[this.props.receive_asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                    </div>\\n\\n                    <div className=\\\"content-block\\\">\\n                        <input\\n                            type=\\\"submit\\\"\\n                            className=\\\"button\\\"\\n                            onClick={this.onSubmit.bind(this)}\\n                            value={counterpart.translate(\\n                                \\\"modal.withdraw.submit\\\"\\n                            )}\\n                        />\\n                        <Trigger close={this.props.modal_id}>\\n                            <div className=\\\"button\\\">\\n                                <Translate content=\\\"account.perm.cancel\\\" />\\n                            </div>\\n                        </Trigger>\\n                    </div>\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(WithdrawFiatOpenLedger);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport WalletDb from \\\"stores/WalletDb\\\";\\nimport BaseModal from \\\"../../Modal/BaseModal\\\";\\nimport Trigger from \\\"react-foundation-apps/src/trigger\\\";\\nimport ZfApi from \\\"react-foundation-apps/src/utils/foundation-api\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport DepositFiatOpenLedger from \\\"./DepositFiatOpenLedger\\\";\\nimport WithdrawFiatOpenLedger from \\\"./WithdrawFiatOpenLedger\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n/*\\n*\\n*\\n* BE AWARE BaseModal USED IN THIS CODE WAS REMOVED AT ALL\\n*\\n*\\n* */\\n\\nclass OpenLedgerFiatDepositWithdrawCurrency extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deposit_allowed: PropTypes.bool,\\n        withdraw_allowed: PropTypes.bool\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {};\\n    }\\n\\n    getWithdrawModalId() {\\n        return (\\n            \\\"withdraw_fiat_openledger_\\\" + this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    getDepositModalId() {\\n        return (\\n            \\\"deposit_fiat_openledger_\\\" + this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        ZfApi.publish(this.getWithdrawModalId(), \\\"open\\\");\\n    }\\n\\n    onDeposit() {\\n        ZfApi.publish(this.getDepositModalId(), \\\"open\\\");\\n    }\\n\\n    render() {\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return (\\n                <tr style={{display: \\\"none\\\"}}>\\n                    <td />\\n                    <td />\\n                    <td />\\n                    <td />\\n                </tr>\\n            );\\n\\n        let wallet = WalletDb.getWallet();\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n\\n        let account_balances = account_balances_object.toJS();\\n        let asset_types = Object.keys(account_balances);\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.receive_asset.get(\\\"id\\\");\\n            if (current_asset_id)\\n                balance = (\\n                    <span>\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        :{\\\" \\\"}\\n                        <BalanceComponent\\n                            balance={account_balances[current_asset_id]}\\n                        />\\n                    </span>\\n                );\\n        }\\n\\n        let deposit_modal_id = this.getDepositModalId();\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n\\n        let deposit_fragment = null;\\n        if (this.props.deposit_allowed) {\\n            deposit_fragment = (\\n                <td>\\n                    <button\\n                        className={\\\"button outline\\\"}\\n                        onClick={this.onDeposit.bind(this)}\\n                    >\\n                        {\\\" \\\"}\\n                        <Translate content=\\\"gateway.deposit\\\" />{\\\" \\\"}\\n                    </button>\\n                    <BaseModal id={deposit_modal_id} overlay={true}>\\n                        <Trigger close={deposit_modal_id}>\\n                            <a href=\\\"#\\\" className=\\\"close-button\\\">\\n                                &times;\\n                            </a>\\n                        </Trigger>\\n                        <br />\\n                        <div className=\\\"grid-block vertical\\\">\\n                            <DepositFiatOpenLedger\\n                                account={this.props.account.get(\\\"name\\\")}\\n                                issuer_account={this.props.issuer_account.get(\\n                                    \\\"name\\\"\\n                                )}\\n                                receive_asset={this.props.receive_asset.get(\\n                                    \\\"symbol\\\"\\n                                )}\\n                                rpc_url={this.props.rpc_url}\\n                                deposit_asset={this.props.deposit_asset}\\n                                modal_id={deposit_modal_id}\\n                            />\\n                        </div>\\n                    </BaseModal>\\n                </td>\\n            );\\n        } else\\n            deposit_fragment = (\\n                <td>\\n                    Click{\\\" \\\"}\\n                    <a\\n                        href=\\\"https://openledger.info/v/\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                        target=\\\"_blank\\\"\\n                    >\\n                        here\\n                    </a>{\\\" \\\"}\\n                    to register for deposits of {this.props.deposit_asset}\\n                </td>\\n            );\\n\\n        let withdraw_fragment = null;\\n        if (this.props.withdraw_allowed) {\\n            withdraw_fragment = (\\n                <td>\\n                    <button\\n                        className={\\\"button outline\\\"}\\n                        onClick={this.onWithdraw.bind(this)}\\n                    >\\n                        {\\\" \\\"}\\n                        <Translate content=\\\"gateway.withdraw\\\" />{\\\" \\\"}\\n                    </button>\\n                    <BaseModal id={withdraw_modal_id} overlay={true}>\\n                        <Trigger close={withdraw_modal_id}>\\n                            <a href=\\\"#\\\" className=\\\"close-button\\\">\\n                                &times;\\n                            </a>\\n                        </Trigger>\\n                        <br />\\n                        <div className=\\\"grid-block vertical\\\">\\n                            <WithdrawFiatOpenLedger\\n                                account={this.props.account.get(\\\"name\\\")}\\n                                issuer_account={this.props.issuer_account.get(\\n                                    \\\"name\\\"\\n                                )}\\n                                receive_asset={this.props.receive_asset.get(\\n                                    \\\"symbol\\\"\\n                                )}\\n                                rpc_url={this.props.rpc_url}\\n                                deposit_asset={this.props.deposit_asset}\\n                                modal_id={withdraw_modal_id}\\n                            />\\n                        </div>\\n                    </BaseModal>\\n                </td>\\n            );\\n        } else\\n            withdraw_fragment = (\\n                <td>\\n                    Click{\\\" \\\"}\\n                    <a\\n                        href=\\\"https://openledger.info/v/\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                        target=\\\"_blank\\\"\\n                    >\\n                        here\\n                    </a>{\\\" \\\"}\\n                    to register for withdrawals of {this.props.deposit_asset}\\n                </td>\\n            );\\n\\n        return (\\n            <tr>\\n                <td>{this.props.deposit_asset}</td>\\n                {deposit_fragment}\\n                <td>\\n                    <AccountBalance\\n                        account={this.props.account.get(\\\"name\\\")}\\n                        asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                    />\\n                </td>\\n                {withdraw_fragment}\\n            </tr>\\n        );\\n    }\\n} // OpenLedgerFiatDepositWithdrawCurrency\\nOpenLedgerFiatDepositWithdrawCurrency = BindToChainState(\\n    OpenLedgerFiatDepositWithdrawCurrency\\n);\\n\\nclass OpenLedgerFiatDepositWithdrawal extends React.Component {\\n    static propTypes = {\\n        rpc_url: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            allowedFiatCurrencies: {\\n                deposit: [],\\n                withdraw: []\\n            }\\n        };\\n\\n        // get approval status from openledger\\n        let json_rpc_request = {\\n            jsonrpc: \\\"2.0\\\",\\n            id: 1,\\n            method: \\\"isValidatedForFiat\\\",\\n            params: {bitsharesAccountName: this.props.account.get(\\\"name\\\")}\\n        };\\n        let is_validated_promise = fetch(this.props.rpc_url, {\\n            method: \\\"POST\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"content-type\\\": \\\"application/x-www-form-urlencoded\\\"\\n            }),\\n            body: \\\"rq=\\\" + encodeURIComponent(JSON.stringify(json_rpc_request))\\n        }).then(response => response.json());\\n\\n        is_validated_promise\\n            .then(json_response => {\\n                if (\\\"result\\\" in json_response)\\n                    this.setState({\\n                        allowedFiatCurrencies: json_response.result\\n                    });\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    allowedFiatCurrencies: {\\n                        deposit: [],\\n                        withdraw: []\\n                    }\\n                });\\n            });\\n    }\\n\\n    componentWillUnmount() {\\n        clearInterval(this.update_timer);\\n    }\\n\\n    render() {\\n        if (!this.props.account || !this.props.issuer_account) return <div />;\\n\\n        return <div />;\\n\\n        /*         <table className=\\\"table\\\">\\n                        <thead>\\n                        <tr>\\n                            <th><Translate content=\\\"gateway.symbol\\\" /></th>\\n                            <th><Translate content=\\\"gateway.deposit_address\\\" /></th>\\n                            <th><Translate content=\\\"gateway.balance\\\" /></th>\\n                            <th><Translate content=\\\"gateway.withdraw\\\" /></th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                            <OpenLedgerFiatDepositWithdrawCurrency\\n                                rpc_url={this.props.rpc_url}\\n                                account={this.props.account}\\n                                issuer_account={this.props.issuer_account}\\n                                deposit_asset=\\\"USD\\\"\\n                                receive_asset=\\\"OPEN.USD\\\"\\n                                deposit_allowed={this.state.allowedFiatCurrencies.deposit.indexOf(\\\"USD\\\") > -1}\\n                                withdraw_allowed={this.state.allowedFiatCurrencies.withdraw.indexOf(\\\"USD\\\") > -1}/>\\n                            <OpenLedgerFiatDepositWithdrawCurrency\\n                                rpc_url={this.props.rpc_url}\\n                                account={this.props.account}\\n                                issuer_account={this.props.issuer_account}\\n                                deposit_asset=\\\"EUR\\\"\\n                                receive_asset=\\\"OPEN.EUR\\\"\\n                                deposit_allowed={this.state.allowedFiatCurrencies.deposit.indexOf(\\\"EUR\\\") > -1}\\n                                withdraw_allowed={this.state.allowedFiatCurrencies.withdraw.indexOf(\\\"EUR\\\") > -1}/>\\n                            <OpenLedgerFiatDepositWithdrawCurrency\\n                                rpc_url={this.props.rpc_url}\\n                                account={this.props.account}\\n                                issuer_account={this.props.issuer_account}\\n                                deposit_asset=\\\"CNY\\\"\\n                                receive_asset=\\\"OPEN.CNY\\\"\\n                                deposit_allowed={this.state.allowedFiatCurrencies.deposit.indexOf(\\\"CNY\\\") > -1}\\n                                withdraw_allowed={this.state.allowedFiatCurrencies.withdraw.indexOf(\\\"CNY\\\") > -1}/>\\n                        </tbody>\\n                    </table>;*/\\n    }\\n} // OpenLedgerFiatDepositWithdrawal\\nOpenLedgerFiatDepositWithdrawal = BindToChainState(\\n    OpenLedgerFiatDepositWithdrawal\\n);\\n\\nexport default OpenLedgerFiatDepositWithdrawal;\\n\",\"import React from \\\"react\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass OpenLedgerFiatTransactionHistory extends React.Component {\\n    static propTypes = {\\n        rpc_url: PropTypes.string,\\n        account: ChainTypes.ChainAccount\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            current_status: \\\"never_loaded\\\",\\n            withdrawals: null,\\n            deposits: null,\\n            error: null\\n        };\\n    }\\n\\n    onShowOpenLedgerTransactionHistory() {\\n        let json_rpc_request = {\\n            jsonrpc: \\\"2.0\\\",\\n            method: \\\"getRequestsList\\\",\\n            params: {\\n                bitsharesAccountName: this.props.account.get(\\\"name\\\")\\n            },\\n            id: 1\\n        };\\n        let get_transaction_history_promise = fetch(this.props.rpc_url, {\\n            method: \\\"POST\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"content-type\\\": \\\"application/x-www-form-urlencoded\\\"\\n            }),\\n            body: \\\"rq=\\\" + encodeURIComponent(JSON.stringify(json_rpc_request))\\n        }).then(response => response.json());\\n\\n        get_transaction_history_promise\\n            .then(json_response => {\\n                if (\\\"result\\\" in json_response) {\\n                    this.setState({\\n                        current_status: \\\"loaded\\\",\\n                        withdrawals: json_response.result.withdrawals,\\n                        deposits: json_response.result.deposits,\\n                        error: null\\n                    });\\n                } else if (\\n                    \\\"error\\\" in json_response &&\\n                    \\\"message\\\" in json_response.error\\n                )\\n                    throw json_repsonse.error.message;\\n                else throw \\\"Unexpected response\\\";\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    current_status: \\\"error\\\",\\n                    withdrawals: null,\\n                    deposits: null,\\n                    error: \\\"Error getting transaction history: \\\" + error\\n                });\\n            });\\n    }\\n\\n    render() {\\n        if (!this.props.account) return null;\\n\\n        let openledger_withdrawal_history_fragment = null;\\n        if (this.state.current_status === \\\"loaded\\\") {\\n            let openledger_withdrawal_history_rows = [];\\n            if (this.state.withdrawals.length) {\\n                for (var i = 0; i < this.state.withdrawals.length; ++i)\\n                    openledger_withdrawal_history_rows.push(\\n                        <tr>\\n                            <td>\\n                                {this.state.withdrawals[i].amount}{\\\" \\\"}\\n                                {this.state.withdrawals[i].currency}\\n                            </td>\\n                            <td>{this.state.withdrawals[i].status}</td>\\n                        </tr>\\n                    );\\n                openledger_withdrawal_history_fragment = (\\n                    <table className=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>\\n                                    <Translate content=\\\"openledger.withdraw_amount\\\" />\\n                                </th>\\n                                <th>\\n                                    <Translate content=\\\"openledger.status\\\" />\\n                                </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>{openledger_withdrawal_history_rows}</tbody>\\n                    </table>\\n                );\\n            } else\\n                openledger_withdrawal_history_fragment = (\\n                    <Translate\\n                        component=\\\"p\\\"\\n                        content=\\\"openledger.withdraw_none\\\"\\n                    />\\n                );\\n        }\\n\\n        let openledger_deposit_history_fragment = null;\\n        if (this.state.current_status === \\\"loaded\\\") {\\n            if (this.state.deposits.length) {\\n                let openledger_deposit_history_rows = [];\\n                for (var i = 0; i < this.state.deposits.length; ++i)\\n                    openledger_deposit_history_rows.push(\\n                        <tr>\\n                            <td>\\n                                {this.state.deposits[i].amount}{\\\" \\\"}\\n                                {this.state.deposits[i].currency}\\n                            </td>\\n                            <td>\\n                                <a\\n                                    href={this.state.deposits[i].link}\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                    target=\\\"_blank\\\"\\n                                >\\n                                    link\\n                                </a>\\n                            </td>\\n                            <td>{this.state.deposits[i].status}</td>\\n                        </tr>\\n                    );\\n                openledger_deposit_history_fragment = (\\n                    <table className=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>\\n                                    <Translate content=\\\"openledger.deposit_amount\\\" />\\n                                </th>\\n                                <th>\\n                                    <Translate content=\\\"openledger.deposit_details\\\" />\\n                                </th>\\n                                <th>\\n                                    <Translate content=\\\"openledger.status\\\" />\\n                                </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>{openledger_deposit_history_rows}</tbody>\\n                    </table>\\n                );\\n            } else\\n                openledger_deposit_history_fragment = (\\n                    <Translate\\n                        component=\\\"p\\\"\\n                        content=\\\"openledger.deposit_none\\\"\\n                    />\\n                );\\n        }\\n\\n        let openledger_transaction_history_fragment = null;\\n\\n        if (this.state.current_status === \\\"error\\\")\\n            openledger_transaction_history_fragment = (\\n                <div className=\\\"content-block\\\">\\n                    <button\\n                        className={\\\"button outline\\\"}\\n                        onClick={this.onShowOpenLedgerTransactionHistory.bind(\\n                            this\\n                        )}\\n                    >\\n                        <Translate content=\\\"openledger.retry\\\" />\\n                    </button>\\n                    <p>{this.state.error}</p>\\n                </div>\\n            );\\n        else if (this.state.current_status === \\\"loading\\\")\\n            openledger_transaction_history_fragment = (\\n                <div className=\\\"content-block\\\">\\n                    <button\\n                        className={\\\"button outline\\\"}\\n                        onClick={this.onShowOpenLedgerTransactionHistory.bind(\\n                            this\\n                        )}\\n                        disabled=\\\"true\\\"\\n                    >\\n                        <Translate content=\\\"openledger.show_transaction_history\\\" />\\n                    </button>\\n                    <Translate component=\\\"p\\\" content=\\\"openledger.loading\\\" />\\n                </div>\\n            );\\n        else {\\n            let button_label =\\n                this.state.current_status === \\\"never_loaded\\\" ? (\\n                    <Translate content=\\\"openledger.show_transaction_history\\\" />\\n                ) : (\\n                    <Translate content=\\\"openledger.refresh_transaction_history\\\" />\\n                );\\n            openledger_transaction_history_fragment = (\\n                <div className=\\\"content-block\\\">\\n                    <br />\\n                    <Translate\\n                        component=\\\"h4\\\"\\n                        content=\\\"openledger.header_transaction_history\\\"\\n                    />\\n                    <button\\n                        className={\\\"button outline\\\"}\\n                        onClick={this.onShowOpenLedgerTransactionHistory.bind(\\n                            this\\n                        )}\\n                    >\\n                        {button_label}\\n                    </button>\\n                    {openledger_withdrawal_history_fragment}\\n                    {openledger_deposit_history_fragment}\\n                </div>\\n            );\\n        }\\n\\n        return openledger_transaction_history_fragment;\\n    }\\n} // OpenLedgerFiatTransactionHistory\\n\\nexport default BindToChainState(OpenLedgerFiatTransactionHistory);\\n\",\"import WalletDb from \\\"stores/WalletDb\\\";\\nimport ls from \\\"common/localStorage\\\";\\nconst ss = new ls(\\\"__bts__\\\");\\n\\nclass CitadelDepositAddressCache {\\n    constructor() {\\n        // increment this to force generating new addresses for all mappings\\n        this.current_citadel_address_cache_version_string = \\\"2\\\";\\n\\n        //let wallet = WalletDb.getWallet();\\n        //delete wallet.deposit_keys[\\\"blocktrades\\\"];\\n        //delete wallet.deposit_keys[\\\"openledger\\\"];\\n        //WalletDb._updateWallet();\\n    }\\n\\n    getIndexForDepositKeyInExchange(\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let args = [\\n            this.current_citadel_address_cache_version_string,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        ];\\n        return args.reduce(function(previous, current) {\\n            return previous.concat(\\\"[\\\", current, \\\"]\\\");\\n        }, \\\"\\\");\\n    }\\n\\n    // returns {\\\"address\\\": address, \\\"memo\\\": memo}, with a null memo if not applicable\\n    getCachedInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let wallet = WalletDb.getWallet();\\n\\n        const index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        if (!wallet) {\\n            let deposit_keys = ss.get(\\\"deposit_keys\\\", {});\\n            deposit_keys[exchange_name] = deposit_keys[exchange_name] || {};\\n            deposit_keys[exchange_name][index] =\\n                deposit_keys[exchange_name][index] || [];\\n            let number_of_keys = deposit_keys[exchange_name][index].length;\\n            if (number_of_keys)\\n                return deposit_keys[exchange_name][index][number_of_keys - 1];\\n            return null;\\n        } else {\\n            wallet.deposit_keys = wallet.deposit_keys || {};\\n            wallet.deposit_keys[exchange_name] =\\n                wallet.deposit_keys[exchange_name] || {};\\n            wallet.deposit_keys[exchange_name][index] =\\n                wallet.deposit_keys[exchange_name][index] || [];\\n\\n            let number_of_keys =\\n                wallet.deposit_keys[exchange_name][index].length;\\n            if (number_of_keys)\\n                return wallet.deposit_keys[exchange_name][index][\\n                    number_of_keys - 1\\n                ];\\n            return null;\\n        }\\n    }\\n\\n    cacheInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type,\\n        address,\\n        memo\\n    ) {\\n        if (!address) return;\\n        let wallet = WalletDb.getWallet();\\n\\n        const index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        if (!wallet) {\\n            let deposit_keys = ss.get(\\\"deposit_keys\\\", {});\\n            deposit_keys[exchange_name] = deposit_keys[exchange_name] || {};\\n            deposit_keys[exchange_name][index] =\\n                deposit_keys[exchange_name][index] || [];\\n            deposit_keys[exchange_name][index].push({\\n                address: address,\\n                memo: memo\\n            });\\n            ss.set(\\\"deposit_keys\\\", deposit_keys);\\n        } else {\\n            // Clean the wallet stored entries, remove undefined/unknown keys\\n            delete wallet.deposit_keys.undefined;\\n            Object.keys(wallet.deposit_keys || {}).forEach(key => {\\n                for (let k in wallet.deposit_keys[key]) {\\n                    if (\\n                        wallet.deposit_keys[key][k] &&\\n                        wallet.deposit_keys[key][k].length\\n                    ) {\\n                        for (\\n                            let i = wallet.deposit_keys[key][k].length - 1;\\n                            i >= 0;\\n                            i--\\n                        ) {\\n                            if (\\n                                wallet.deposit_keys[key][k][i] &&\\n                                wallet.deposit_keys[key][k][i].address ===\\n                                    \\\"unknown\\\"\\n                            ) {\\n                                wallet.deposit_keys[key][k].splice(i, 1);\\n                            }\\n                        }\\n                    }\\n                }\\n            });\\n            wallet.deposit_keys = wallet.deposit_keys || {};\\n            wallet.deposit_keys[exchange_name] =\\n                wallet.deposit_keys[exchange_name] || {};\\n            wallet.deposit_keys[exchange_name][index] =\\n                wallet.deposit_keys[exchange_name][index] || [];\\n            wallet.deposit_keys[exchange_name][index].push({\\n                address: address,\\n                memo: memo\\n            });\\n            WalletDb._updateWallet();\\n        }\\n    }\\n} // CitadelDepositAddressCache\\n\\nexport default CitadelDepositAddressCache;\\n\",\"import counterpart from \\\"counterpart\\\";\\nimport React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport WithdrawModalCitadel from \\\"./WithdrawModalCitadel\\\";\\nimport CitadelDepositAddressCache from \\\"common/CitadelDepositAddressCache\\\";\\nimport utils from \\\"common/utils\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport TransactionConfirmStore from \\\"stores/TransactionConfirmStore\\\";\\nimport {citadelAPIs} from \\\"api/apiConfig\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Asset} from \\\"common/MarketClasses\\\";\\nimport {ChainStore} from \\\"bitsharesjs/es\\\";\\nimport {getConversionJson} from \\\"common/gatewayMethods\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass ButtonWithdraw extends React.Component {\\n    static propTypes = {\\n        balance: ChainTypes.ChainObject,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    getWithdrawModalId() {\\n        return \\\"withdraw_asset_\\\" + this.props.gateway + \\\"_bridge\\\";\\n    }\\n\\n    onWithdraw() {\\n        this.props.showModal();\\n    }\\n\\n    render() {\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n\\n        let button_class = \\\"button disabled\\\";\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            if (\\n                !!this.props.amount_to_withdraw &&\\n                !(this.props.amount_to_withdraw.indexOf(\\\" \\\") >= 0) &&\\n                !isNaN(this.props.amount_to_withdraw) &&\\n                this.props.amount_to_withdraw > 0 &&\\n                this.props.amount_to_withdraw <=\\n                    this.props.balance.toJS().balance /\\n                        utils.get_asset_precision(\\n                            this.props.asset.get(\\\"precision\\\")\\n                        )\\n            ) {\\n                button_class = \\\"button\\\";\\n            }\\n        }\\n\\n        return (\\n            <span>\\n                <span>\\n                    <button\\n                        className={button_class}\\n                        onClick={this.onWithdraw.bind(this)}\\n                    >\\n                        <Translate content=\\\"\\\" />\\n                        <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                    </button>\\n                </span>\\n                <Modal\\n                    title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                        coin: this.props.output_coin_name,\\n                        symbol: this.props.output_coin_symbol\\n                    })}\\n                    visible={this.props.visible}\\n                    onCancel={this.props.hideModal}\\n                    footer={null}\\n                >\\n                    <WithdrawModalCitadel\\n                        showModal={this.props.showModal}\\n                        hideModal={this.props.hideModal}\\n                        key={`${this.props.key}`}\\n                        account={this.props.account.get(\\\"name\\\")}\\n                        issuer={this.props.issuer}\\n                        asset={this.props.asset.get(\\\"id\\\")}\\n                        output_coin_name={this.props.output_coin_name}\\n                        output_coin_symbol={this.props.output_coin_symbol}\\n                        output_coin_type={this.props.output_coin_type}\\n                        output_supports_memos={this.props.output_supports_memos}\\n                        amount_to_withdraw={this.props.amount_to_withdraw}\\n                        modal_id={withdraw_modal_id}\\n                        url={this.props.url}\\n                        output_wallet_type={this.props.output_wallet_type}\\n                        balance={\\n                            this.props.account.get(\\\"balances\\\").toJS()[\\n                                this.props.asset.get(\\\"id\\\")\\n                            ]\\n                        }\\n                    />\\n                </Modal>\\n            </span>\\n        );\\n    }\\n}\\n\\nButtonWithdraw = BindToChainState(ButtonWithdraw);\\n\\nclass ButtonWithdrawContainer extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        output_coin_type: PropTypes.string.isRequired,\\n        url: PropTypes.string.isRequired\\n    };\\n\\n    render() {\\n        let withdraw_button = (\\n            <ButtonWithdraw\\n                showModal={this.props.showModal}\\n                hideModal={this.props.hideModal}\\n                visible={this.props.visible}\\n                key={this.props.key}\\n                account={this.props.account}\\n                issuer={this.props.issuer}\\n                asset={this.props.asset}\\n                output_coin_name={this.props.output_coin_name}\\n                output_coin_symbol={this.props.output_coin_symbol}\\n                output_coin_type={this.props.output_coin_type}\\n                output_supports_memos={this.props.output_supports_memos}\\n                amount_to_withdraw={this.props.amount_to_withdraw}\\n                url={this.props.url}\\n                gateway={this.props.gateway}\\n                output_wallet_type={this.props.output_wallet_type}\\n                balance={\\n                    this.props.account.get(\\\"balances\\\").toJS()[\\n                        this.props.asset.get(\\\"id\\\")\\n                    ]\\n                }\\n            />\\n        );\\n\\n        return <span>{withdraw_button}</span>;\\n    }\\n}\\n\\nButtonWithdrawContainer = BindToChainState(ButtonWithdrawContainer);\\n\\nclass CitadelBridgeDepositRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        initial_deposit_input_coin_type: PropTypes.string,\\n        initial_deposit_output_coin_type: PropTypes.string,\\n        initial_deposit_estimated_input_amount: PropTypes.string,\\n        initial_withdraw_input_coin_type: PropTypes.string,\\n        initial_withdraw_output_coin_type: PropTypes.string,\\n        initial_withdraw_estimated_input_amount: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.refresh_interval = 2 * 60 * 1000; // update deposit limit/estimates every two minutes\\n\\n        this.deposit_address_cache = new CitadelDepositAddressCache();\\n\\n        this.coin_info_request_states = {\\n            request_in_progress: 0,\\n            request_complete: 1,\\n            request_failed: 2\\n        };\\n\\n        this.estimation_directions = {\\n            output_from_input: 0,\\n            input_from_output: 1\\n        };\\n\\n        this.state = {\\n            isModalVisible: false,\\n            coin_symbol: \\\"xmr\\\",\\n            key_for_withdrawal_dialog: \\\"xmr\\\",\\n            supports_output_memos: \\\"\\\",\\n            url: citadelAPIs.BASE,\\n            error: null,\\n\\n            // things that get displayed for deposits\\n            deposit_input_coin_type: null,\\n            deposit_output_coin_type: null,\\n            input_address_and_memo: null,\\n            deposit_estimated_input_amount:\\n                this.props.initial_deposit_estimated_input_amount || \\\"1.0\\\",\\n            deposit_estimated_output_amount: null,\\n            deposit_limit: null,\\n            deposit_error: null,\\n            failed_calculate_deposit: null,\\n\\n            // things that get displayed for withdrawals\\n            withdraw_input_coin_type: null,\\n            withdraw_output_coin_type: null,\\n            withdraw_estimated_input_amount:\\n                this.props.initial_withdraw_estimated_input_amount || \\\"1.0\\\",\\n            withdraw_estimated_output_amount: null,\\n            withdraw_limit: null,\\n            withdraw_error: null,\\n            failed_calculate_withdraw: null,\\n\\n            // input address-related\\n            coin_info_request_state: this.coin_info_request_states\\n                .request_in_progress,\\n            input_address_requests_in_progress: {},\\n\\n            // estimate-related\\n            deposit_estimate_direction: this.estimation_directions\\n                .output_from_input,\\n\\n            // deposit limit-related\\n            deposit_limit_cache: {},\\n            deposit_limit_requests_in_progress: {},\\n\\n            // generic data from BlockTrades\\n            coins_by_type: null,\\n            allowed_mappings_for_deposit: null,\\n            allowed_mappings_for_withdraw: null,\\n\\n            // announcements data\\n            announcements: []\\n        };\\n\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    urlConnection(checkUrl, state_coin_info) {\\n        this.setState({\\n            url: checkUrl\\n        });\\n\\n        // get basic data from citadel\\n        let coin_types_url = checkUrl + \\\"/coins\\\";\\n        let coin_types_promise = fetch(coin_types_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let wallet_types_url = checkUrl + \\\"/wallets\\\";\\n        let wallet_types_promise = fetch(wallet_types_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let trading_pairs_url = checkUrl + \\\"/trading-pairs\\\";\\n        let trading_pairs_promise = fetch(trading_pairs_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        let active_wallets_url = checkUrl + \\\"/active-wallets\\\";\\n        let active_wallets_promise = fetch(active_wallets_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n\\n        Promise.all([\\n            coin_types_promise,\\n            wallet_types_promise,\\n            trading_pairs_promise,\\n            active_wallets_promise\\n        ])\\n            .then(json_responses => {\\n                let [\\n                    coin_types,\\n                    wallet_types_reply,\\n                    trading_pairs,\\n                    active_wallets\\n                ] = json_responses;\\n\\n                // get quick access to coins by their types\\n                let coins_by_type = {};\\n                coin_types.forEach(\\n                    coin_type => (coins_by_type[coin_type.coinType] = coin_type)\\n                );\\n\\n                // determine which mappings we will display for deposits and withdrawals\\n                let allowed_mappings_for_deposit = {}; // all non-bts to bts\\n                let allowed_mappings_for_withdraw = {}; // all bts to non-bts\\n                trading_pairs.forEach(pair => {\\n                    let input_coin_info = coins_by_type[pair.inputCoinType];\\n                    let output_coin_info = coins_by_type[pair.outputCoinType];\\n\\n                    // filter out pairs where one asset is a backed asset and the other is a backing asset,\\n                    // those pairs rightly belong under the gateway section, not under the bridge section.\\n                    if (\\n                        input_coin_info.backingCoinType !=\\n                            pair.outputCoinType ||\\n                        (output_coin_info.backingCoinType !=\\n                            pair.inputCoinType &&\\n                            input_coin_info.restricted == false &&\\n                            output_coin_info.restricted == false)\\n                    ) {\\n                        // filter out mappings where one of the wallets is offline\\n                        if (\\n                            active_wallets.indexOf(\\n                                input_coin_info.walletType\\n                            ) != -1 &&\\n                            active_wallets.indexOf(\\n                                output_coin_info.walletType\\n                            ) != -1\\n                        ) {\\n                            if (\\n                                input_coin_info.walletType != \\\"bitshares2\\\" &&\\n                                output_coin_info.walletType == \\\"bitshares2\\\"\\n                            ) {\\n                                allowed_mappings_for_deposit[\\n                                    pair.inputCoinType\\n                                ] =\\n                                    allowed_mappings_for_deposit[\\n                                        pair.inputCoinType\\n                                    ] || [];\\n                                allowed_mappings_for_deposit[\\n                                    pair.inputCoinType\\n                                ].push(pair.outputCoinType);\\n                            } else {\\n                                allowed_mappings_for_withdraw[\\n                                    pair.inputCoinType\\n                                ] =\\n                                    allowed_mappings_for_withdraw[\\n                                        pair.inputCoinType\\n                                    ] || [];\\n                                allowed_mappings_for_withdraw[\\n                                    pair.inputCoinType\\n                                ].push(pair.outputCoinType);\\n                            }\\n                        }\\n                    }\\n                });\\n\\n                // we can now set the input and output coin types\\n                let deposit_input_coin_type = null;\\n                let deposit_output_coin_type = null;\\n                let allowed_deposit_coin_types = Object.keys(\\n                    allowed_mappings_for_deposit\\n                );\\n                allowed_deposit_coin_types.forEach(deposit_coin_type => {\\n                    allowed_mappings_for_deposit[deposit_coin_type].sort();\\n                });\\n\\n                if (allowed_deposit_coin_types.length) {\\n                    if (\\n                        this.props.initial_deposit_input_coin_type &&\\n                        this.props.initial_deposit_input_coin_type in\\n                            allowed_mappings_for_deposit\\n                    )\\n                        deposit_input_coin_type = this.props\\n                            .initial_deposit_input_coin_type;\\n                    else\\n                        deposit_input_coin_type = allowed_deposit_coin_types[0];\\n                    let output_coin_types_for_this_input =\\n                        allowed_mappings_for_deposit[deposit_input_coin_type];\\n                    if (\\n                        this.props.initial_deposit_output_coin_type &&\\n                        output_coin_types_for_this_input.indexOf(\\n                            this.props.initial_deposit_output_coin_type\\n                        ) != -1\\n                    )\\n                        deposit_output_coin_type = this.props\\n                            .initial_deposit_output_coin_type;\\n                    else\\n                        deposit_output_coin_type =\\n                            output_coin_types_for_this_input[0];\\n                }\\n\\n                let withdraw_input_coin_type = null;\\n                let withdraw_output_coin_type = null;\\n                let allowed_withdraw_coin_types = Object.keys(\\n                    allowed_mappings_for_withdraw\\n                );\\n                allowed_withdraw_coin_types.forEach(withdraw_coin_type => {\\n                    allowed_mappings_for_withdraw[withdraw_coin_type].sort();\\n                });\\n\\n                if (allowed_withdraw_coin_types.length) {\\n                    if (\\n                        this.props.initial_withdraw_input_coin_type &&\\n                        this.props.initial_withdraw_input_coin_type in\\n                            allowed_mappings_for_withdraw\\n                    )\\n                        withdraw_input_coin_type = this.props\\n                            .initial_withdraw_input_coin_type;\\n                    else\\n                        withdraw_input_coin_type =\\n                            allowed_withdraw_coin_types[0];\\n                    let output_coin_types_for_this_input =\\n                        allowed_mappings_for_withdraw[withdraw_input_coin_type];\\n                    if (\\n                        this.props.initial_withdraw_output_coin_type &&\\n                        output_coin_types_for_this_input.indexOf(\\n                            this.props.initial_withdraw_output_coin_type\\n                        ) != -1\\n                    )\\n                        withdraw_output_coin_type = this.props\\n                            .initial_withdraw_output_coin_type;\\n                    else\\n                        withdraw_output_coin_type =\\n                            output_coin_types_for_this_input[0];\\n                }\\n\\n                let input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type\\n                );\\n\\n                let deposit_limit = this.getCachedOrFreshDepositLimit(\\n                    \\\"deposit\\\",\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type\\n                );\\n                let deposit_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"deposit\\\",\\n                    deposit_input_coin_type,\\n                    deposit_output_coin_type,\\n                    this.state.deposit_estimated_input_amount\\n                );\\n\\n                let withdraw_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"withdraw\\\",\\n                    withdraw_input_coin_type,\\n                    withdraw_output_coin_type,\\n                    this.state.withdraw_estimated_input_amount\\n                );\\n                let withdraw_limit = this.getCachedOrFreshDepositLimit(\\n                    \\\"withdraw\\\",\\n                    withdraw_input_coin_type,\\n                    withdraw_output_coin_type\\n                );\\n\\n                if (this.unMounted) return;\\n\\n                this.setState({\\n                    coin_info_request_state: this.coin_info_request_states\\n                        .request_complete,\\n                    coins_by_type: coins_by_type,\\n                    allowed_mappings_for_deposit: allowed_mappings_for_deposit,\\n                    allowed_mappings_for_withdraw: allowed_mappings_for_withdraw,\\n                    deposit_input_coin_type: deposit_input_coin_type,\\n                    deposit_output_coin_type: deposit_output_coin_type,\\n                    input_address_and_memo: input_address_and_memo,\\n                    deposit_limit: deposit_limit,\\n                    deposit_estimated_output_amount: deposit_estimated_output_amount,\\n                    deposit_estimate_direction: this.estimation_directions\\n                        .output_from_input,\\n                    withdraw_input_coin_type: withdraw_input_coin_type,\\n                    withdraw_output_coin_type: withdraw_output_coin_type,\\n                    withdraw_limit: withdraw_limit,\\n                    withdraw_estimated_output_amount: withdraw_estimated_output_amount,\\n                    withdraw_estimate_direction: this.estimation_directions\\n                        .output_from_input,\\n                    supports_output_memos:\\n                        coins_by_type[\\\"xmr\\\"].supportsOutputMemos\\n                });\\n            })\\n            .catch(error => {\\n                this.setState({\\n                    coin_info_request_state: state_coin_info,\\n                    coins_by_type: null,\\n                    allowed_mappings_for_deposit: null,\\n                    allowed_mappings_for_withdraw: null\\n                });\\n            });\\n    }\\n\\n    // functions for periodically updating our deposit limit and estimates\\n    updateEstimates() {\\n        if (\\n            this.state.deposit_input_coin_type &&\\n            this.state.deposit_output_coin_type\\n        ) {\\n            // input address won't usually need refreshing unless there was an error\\n            // generating it last time around\\n            let new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                this.state.deposit_input_coin_type,\\n                this.state.deposit_output_coin_type\\n            );\\n\\n            let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n                \\\"deposit\\\",\\n                this.state.deposit_input_coin_type,\\n                this.state.deposit_output_coin_type\\n            );\\n            let new_deposit_estimated_input_amount = this.state\\n                .deposit_estimated_input_amount;\\n            let new_deposit_estimated_output_amount = this.state\\n                .deposit_estimated_output_amount;\\n\\n            if (\\n                this.state.deposit_estimate_direction ==\\n                this.estimation_directions.output_from_input\\n            )\\n                new_deposit_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"deposit\\\",\\n                    this.state.deposit_input_coin_type,\\n                    this.state.deposit_output_coin_type,\\n                    new_deposit_estimated_input_amount\\n                );\\n            else\\n                new_deposit_estimated_input_amount = this.getAndUpdateInputEstimate(\\n                    \\\"deposit\\\",\\n                    this.state.deposit_input_coin_type,\\n                    this.state.deposit_output_coin_type,\\n                    new_deposit_estimated_output_amount\\n                );\\n\\n            let new_withdraw_limit = this.getCachedOrFreshDepositLimit(\\n                \\\"withdraw\\\",\\n                this.state.withdraw_input_coin_type,\\n                this.state.withdraw_output_coin_type\\n            );\\n            let new_withdraw_estimated_input_amount = this.state\\n                .withdraw_estimated_input_amount;\\n            let new_withdraw_estimated_output_amount = this.state\\n                .withdraw_estimated_output_amount;\\n\\n            if (\\n                this.state.withdraw_estimate_direction ==\\n                this.estimation_directions.output_from_input\\n            )\\n                new_withdraw_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n                    \\\"withdraw\\\",\\n                    this.state.withdraw_input_coin_type,\\n                    this.state.withdraw_output_coin_type,\\n                    new_withdraw_estimated_input_amount\\n                );\\n            else\\n                new_withdraw_estimated_input_amount = this.getAndUpdateinputEstimate(\\n                    \\\"withdraw\\\",\\n                    this.state.withdraw_input_coin_type,\\n                    this.state.withdraw_output_coin_type,\\n                    new_withdraw_estimated_output_amount\\n                );\\n\\n            this.setState({\\n                input_address_and_memo: new_input_address_and_memo,\\n                deposit_limit: new_deposit_limit,\\n                deposit_estimated_input_amount: new_deposit_estimated_input_amount,\\n                deposit_estimated_output_amount: new_deposit_estimated_output_amount,\\n                withdraw_limit: new_withdraw_limit,\\n                withdraw_estimated_input_amount: new_withdraw_estimated_input_amount,\\n                withdraw_estimated_output_amount: new_withdraw_estimated_output_amount,\\n                key_for_withdrawal_dialog: new_withdraw_estimated_input_amount\\n            });\\n        }\\n    }\\n\\n    componentWillMount() {\\n        // check\\n        let checkUrl = this.state.url;\\n        this.urlConnection(checkUrl, 0);\\n        let coin_types_promisecheck = fetch(checkUrl + \\\"/coins\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        let trading_pairs_promisecheck = fetch(checkUrl + \\\"/trading-pairs\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        let active_wallets_promisecheck = fetch(checkUrl + \\\"/active-wallets\\\", {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        Promise.all([\\n            coin_types_promisecheck,\\n            trading_pairs_promisecheck,\\n            active_wallets_promisecheck\\n        ])\\n            .then(json_responses => {\\n                let [\\n                    coin_types,\\n                    trading_pairs,\\n                    active_wallets\\n                ] = json_responses;\\n                let coins_by_type = {};\\n                coin_types.forEach(\\n                    coin_type => (coins_by_type[coin_type.coinType] = coin_type)\\n                );\\n                trading_pairs.forEach(pair => {\\n                    let input_coin_info = coins_by_type[pair.inputCoinType];\\n                    let output_coin_info = coins_by_type[pair.outputCoinType];\\n                    if (\\n                        input_coin_info.backingCoinType !=\\n                            pair.outputCoinType &&\\n                        output_coin_info.backingCoinType != pair.inputCoinType\\n                    ) {\\n                        if (\\n                            active_wallets.indexOf(\\n                                input_coin_info.walletType\\n                            ) != -1 &&\\n                            active_wallets.indexOf(\\n                                output_coin_info.walletType\\n                            ) != -1\\n                        ) {\\n                        }\\n                    }\\n                });\\n            })\\n            .catch(error => {\\n                this.urlConnection(\\\"https://citadel.li/trade\\\", 2);\\n                this.setState({\\n                    coin_info_request_state: 0,\\n                    coins_by_type: null,\\n                    allowed_mappings_for_deposit: null,\\n                    allowed_mappings_for_withdraw: null\\n                });\\n            });\\n    }\\n\\n    componentDidMount() {\\n        this.update_timer = setInterval(\\n            this.updateEstimates.bind(this),\\n            this.refresh_interval\\n        );\\n    }\\n\\n    componentWillUnmount() {\\n        clearInterval(this.update_timer);\\n        this.unMounted = true;\\n    }\\n\\n    // functions for managing input addresses\\n    getCachedInputAddress(input_coin_type, output_coin_type, memo) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        return this.deposit_address_cache.getCachedInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n    }\\n\\n    cacheInputAddress(input_coin_type, output_coin_type, address, memo) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        this.deposit_address_cache.cacheInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type,\\n            address,\\n            memo\\n        );\\n    }\\n\\n    getCachedOrGeneratedInputAddress(input_coin_type, output_coin_type) {\\n        // if we already have an address, just return it\\n        let cached_input_address_and_memo = this.getCachedInputAddress(\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        if (cached_input_address_and_memo) {\\n            return cached_input_address_and_memo;\\n        }\\n\\n        // if we've already asked for this address, return null, it will trigger a refresh when it completes\\n        this.state.input_address_requests_in_progress[input_coin_type] =\\n            this.state.input_address_requests_in_progress[input_coin_type] ||\\n            {};\\n        if (\\n            this.state.input_address_requests_in_progress[input_coin_type][\\n                output_coin_type\\n            ]\\n        )\\n            return null;\\n\\n        // else, no active request for this mapping, kick one off\\n        let body = JSON.stringify({\\n            inputCoinType: input_coin_type,\\n            outputCoinType: output_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\")\\n        });\\n\\n        this.state.input_address_requests_in_progress[input_coin_type][\\n            output_coin_type\\n        ] = true;\\n\\n        fetch(this.state.url + \\\"/simple-api/initiate-trade\\\", {\\n            method: \\\"post\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            }),\\n            body: body\\n        }).then(\\n            reply => {\\n                reply.json().then(\\n                    json => {\\n                        console.assert(\\n                            json.inputCoinType == input_coin_type,\\n                            \\\"unexpected reply from initiate-trade\\\"\\n                        );\\n                        console.assert(\\n                            json.outputCoinType == output_coin_type,\\n                            \\\"unexpected reply from initiate-trade\\\"\\n                        );\\n                        if (\\n                            json.inputCoinType != input_coin_type ||\\n                            json.outputCoinType != output_coin_type\\n                        )\\n                            throw Error(\\\"unexpected reply from initiate-trade\\\");\\n                        this.cacheInputAddress(\\n                            json.inputCoinType,\\n                            json.outputCoinType,\\n                            json.inputAddress,\\n                            json.inputMemo\\n                        );\\n                        delete this.state.input_address_requests_in_progress[\\n                            input_coin_type\\n                        ][output_coin_type];\\n                        if (\\n                            this.state.deposit_input_coin_type ==\\n                                json.inputCoinType &&\\n                            this.state.deposit_output_coin_type ==\\n                                json.outputCoinType\\n                        )\\n                            this.setState({\\n                                input_address_and_memo: {\\n                                    address: json.inputAddress,\\n                                    memo: json.inputMemo\\n                                }\\n                            });\\n                    },\\n                    error => {\\n                        delete this.state.input_address_requests_in_progress[\\n                            input_coin_type\\n                        ][output_coin_type];\\n                        if (\\n                            this.state.deposit_input_coin_type ==\\n                                input_coin_type &&\\n                            this.state.deposit_output_coin_type ==\\n                                output_coin_type\\n                        )\\n                            this.setState({\\n                                input_address_and_memo: {\\n                                    address: \\\"error generating address\\\",\\n                                    memo: null\\n                                }\\n                            });\\n                    }\\n                );\\n            },\\n            error => {\\n                delete this.state.input_address_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n                if (\\n                    this.state.deposit_input_coin_type == input_coin_type &&\\n                    this.state.deposit_output_coin_type == output_coin_type\\n                )\\n                    this.setState({\\n                        input_address_and_memo: {\\n                            address: \\\"error generating address\\\",\\n                            memo: null\\n                        }\\n                    });\\n            }\\n        );\\n        return null;\\n    }\\n\\n    // functions for managing deposit limits\\n    getCachedDepositLimit(input_coin_type, output_coin_type) {\\n        this.state.deposit_limit_cache[input_coin_type] =\\n            this.state.deposit_limit_cache[input_coin_type] || {};\\n        if (this.state.deposit_limit_cache[input_coin_type][output_coin_type]) {\\n            let deposit_limit_record = this.state.deposit_limit_cache[\\n                input_coin_type\\n            ][output_coin_type];\\n            let cache_age = new Date() - deposit_limit_record.timestamp;\\n            if (cache_age < this.refresh_interval) return deposit_limit_record;\\n            delete this.state.deposit_limit_cache[input_coin_type][\\n                output_coin_type\\n            ];\\n        }\\n        return null;\\n    }\\n\\n    cacheDepositLimit(input_coin_type, output_coin_type, deposit_limit_record) {\\n        deposit_limit_record.timestamp = new Date();\\n        this.state.deposit_limit_cache[input_coin_type] =\\n            this.state.deposit_limit_cache[input_coin_type] || {};\\n        this.state.deposit_limit_cache[input_coin_type][\\n            output_coin_type\\n        ] = deposit_limit_record;\\n    }\\n\\n    getCachedOrFreshDepositLimit(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let deposit_limit_record = this.getCachedDepositLimit(\\n            input_coin_type,\\n            output_coin_type\\n        );\\n\\n        if (deposit_limit_record) return deposit_limit_record;\\n\\n        this.state.deposit_limit_requests_in_progress[input_coin_type] =\\n            this.state.input_address_requests_in_progress[input_coin_type] ||\\n            {};\\n        this.state.deposit_limit_requests_in_progress[input_coin_type][\\n            output_coin_type\\n        ] = true;\\n\\n        let deposit_limit_url =\\n            this.state.url +\\n            \\\"/deposit-limits?inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n\\n        let deposit_limit_promise = fetch(deposit_limit_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        deposit_limit_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n                console.assert(\\n                    reply.inputCoinType == input_coin_type &&\\n                        reply.outputCoinType == output_coin_type,\\n                    \\\"unexpected reply from deposit-limits\\\"\\n                );\\n                if (\\n                    reply.inputCoinType != input_coin_type ||\\n                    reply.outputCoinType != output_coin_type\\n                )\\n                    throw Error(\\\"unexpected reply from deposit-limits\\\");\\n                let new_deposit_limit_record = {\\n                    timestamp: new Date(),\\n                    limit: reply.depositLimit\\n                };\\n                this.cacheDepositLimit(\\n                    input_coin_type,\\n                    output_coin_type,\\n                    new_deposit_limit_record\\n                );\\n                delete this.state.deposit_limit_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n                if (\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                    ] == input_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                    ] == output_coin_type\\n                )\\n                    this.setState({\\n                        [deposit_withdraw_or_convert +\\n                        \\\"_limit\\\"]: new_deposit_limit_record\\n                    });\\n            },\\n            error => {\\n                delete this.state.deposit_limit_requests_in_progress[\\n                    input_coin_type\\n                ][output_coin_type];\\n            }\\n        );\\n        return null;\\n    }\\n\\n    getAndUpdateOutputEstimate(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type,\\n        input_amount\\n    ) {\\n        if (this.unMounted) return;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n            this.setState({failed_calculate_deposit: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            this.setState({failed_calculate_withdraw: null});\\n        }\\n\\n        let estimate_output_url =\\n            this.state.url +\\n            \\\"/estimate-output-amount?inputAmount=\\\" +\\n            encodeURIComponent(input_amount) +\\n            \\\"&inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n\\n        let estimate_output_promise = fetch(estimate_output_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        estimate_output_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n                if (reply.error) {\\n                    if (\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                        ] == input_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                        ] == output_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert +\\n                                \\\"_estimated_input_amount\\\"\\n                        ] == input_amount &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                        ] == this.estimation_directions.output_from_input\\n                    ) {\\n                        let user_message = reply.error.message;\\n\\n                        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n                            this.setState({\\n                                failed_calculate_deposit: \\\"Failed to calculate\\\"\\n                            });\\n                        }\\n                        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n                            this.setState({\\n                                failed_calculate_withdraw: \\\"Failed to calculate\\\"\\n                            });\\n                        }\\n\\n                        let expected_prefix = \\\"Internal Server Error: \\\";\\n                        if (user_message.startsWith(expected_prefix))\\n                            user_message = user_message.substr(\\n                                expected_prefix.length\\n                            );\\n\\n                        this.setState({\\n                            [deposit_withdraw_or_convert +\\n                            \\\"_error\\\"]: user_message\\n                        });\\n                    }\\n                } else {\\n                    console.assert(\\n                        reply.inputCoinType == input_coin_type &&\\n                            reply.outputCoinType == output_coin_type &&\\n                            reply.inputAmount == input_amount,\\n                        \\\"unexpected reply from estimate-output-amount\\\"\\n                    );\\n                    if (\\n                        reply.inputCoinType != input_coin_type ||\\n                        reply.outputCoinType != output_coin_type ||\\n                        reply.inputAmount != input_amount\\n                    ) {\\n                        this.setState({\\n                            [deposit_withdraw_or_convert +\\n                            \\\"_estimated_output_amount\\\"]: reply.outputAmount,\\n                            [deposit_withdraw_or_convert + \\\"_error\\\"]: null\\n                        });\\n                    }\\n                    if (\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                        ] == input_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                        ] == output_coin_type &&\\n                        this.state[\\n                            deposit_withdraw_or_convert +\\n                                \\\"_estimated_input_amount\\\"\\n                        ] == input_amount &&\\n                        this.state[\\n                            deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                        ] == this.estimation_directions.output_from_input\\n                    ) {\\n                        this.setState({\\n                            [deposit_withdraw_or_convert +\\n                            \\\"_estimated_output_amount\\\"]: reply.outputAmount,\\n                            [deposit_withdraw_or_convert + \\\"_error\\\"]: null\\n                        });\\n                    }\\n                }\\n            },\\n            error => {}\\n        );\\n\\n        return null;\\n    }\\n\\n    getAndUpdateInputEstimate(\\n        deposit_withdraw_or_convert,\\n        input_coin_type,\\n        output_coin_type,\\n        output_amount\\n    ) {\\n        if (this.unMounted) return;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n            this.setState({failed_calculate_deposit: null});\\n        }\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            this.setState({failed_calculate_withdraw: null});\\n        }\\n\\n        let estimate_input_url =\\n            this.state.url +\\n            \\\"/estimate-input-amount?outputAmount=\\\" +\\n            encodeURIComponent(output_amount) +\\n            \\\"&inputCoinType=\\\" +\\n            encodeURIComponent(input_coin_type) +\\n            \\\"&outputCoinType=\\\" +\\n            encodeURIComponent(output_coin_type);\\n        let estimate_input_promise = fetch(estimate_input_url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"})\\n        }).then(response => response.json());\\n        estimate_input_promise.then(\\n            reply => {\\n                if (this.unMounted) return;\\n\\n                console.assert(\\n                    reply.inputCoinType == input_coin_type &&\\n                        reply.outputCoinType == output_coin_type &&\\n                        reply.outputAmount == output_amount,\\n                    \\\"unexpected reply from estimate-input-amount\\\"\\n                );\\n                if (\\n                    reply.inputCoinType != input_coin_type ||\\n                    reply.outputCoinType != output_coin_type ||\\n                    reply.outputAmount != output_amount\\n                ) {\\n                    if (deposit_withdraw_or_convert == \\\"deposit\\\") {\\n                        this.setState({\\n                            failed_calculate_deposit: \\\"Failed to calculate\\\"\\n                        });\\n                    }\\n                    if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n                        this.setState({\\n                            failed_calculate_withdraw: \\\"Failed to calculate\\\"\\n                        });\\n                    }\\n                }\\n\\n                if (\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_input_coin_type\\\"\\n                    ] == input_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n                    ] == output_coin_type &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                    ] == output_amount &&\\n                    this.state[\\n                        deposit_withdraw_or_convert + \\\"_estimate_direction\\\"\\n                    ] == this.estimation_directions.input_from_output\\n                )\\n                    this.setState({\\n                        [deposit_withdraw_or_convert +\\n                        \\\"_estimated_input_amount\\\"]: reply.inputAmount,\\n                        key_for_withdrawal_dialog: reply.inputAmount\\n                    });\\n            },\\n            error => {}\\n        );\\n\\n        return null;\\n    }\\n\\n    onInputAmountChanged(deposit_withdraw_or_convert, event) {\\n        let new_estimated_input_amount = event.target.value;\\n        if (new_estimated_input_amount == \\\"\\\") {\\n            new_estimated_input_amount = \\\"0\\\";\\n        }\\n\\n        let new_estimated_output_amount = this.getAndUpdateOutputEstimate(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"],\\n            new_estimated_input_amount\\n        );\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_input_amount\\\"]: new_estimated_input_amount,\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_output_amount\\\"]: new_estimated_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input,\\n            key_for_withdrawal_dialog: new_estimated_input_amount\\n        });\\n    }\\n\\n    onOutputAmountChanged(deposit_withdraw_or_convert, event) {\\n        let new_estimated_output_amount = event.target.value;\\n        if (new_estimated_output_amount == \\\"\\\") {\\n            new_estimated_output_amount = \\\"0\\\";\\n        }\\n\\n        let new_estimated_input_amount = this.getAndUpdateInputEstimate(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"],\\n            new_estimated_output_amount\\n        );\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_output_amount\\\"]: new_estimated_output_amount,\\n            [deposit_withdraw_or_convert +\\n            \\\"_estimated_input_amount\\\"]: new_estimated_input_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.input_from_output\\n        });\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"withdraw_asset_\\\" + this.props.gateway + \\\"_bridge\\\";\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    onInputCoinTypeChanged(deposit_withdraw_or_convert, event) {\\n        let estimated_input_output_amount = null;\\n        let estimated_input_output_amount_state = \\\"_estimated_output_amount\\\";\\n        let new_input_coin_type = event.target.value;\\n        let possible_output_coin_types = this.state[\\n            \\\"allowed_mappings_for_\\\" + deposit_withdraw_or_convert\\n        ][new_input_coin_type];\\n        let new_output_coin_type = possible_output_coin_types[0];\\n\\n        if (\\n            possible_output_coin_types.indexOf(\\n                this.state[deposit_withdraw_or_convert + \\\"_output_coin_type\\\"]\\n            ) != -1\\n        )\\n            new_output_coin_type = this.state[\\n                deposit_withdraw_or_convert + \\\"_output_coin_type\\\"\\n            ];\\n\\n        let new_input_address_and_memo = this.state.input_address_and_memo;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\")\\n            new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                new_input_coin_type,\\n                new_output_coin_type\\n            );\\n        let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n            deposit_withdraw_or_convert,\\n            new_input_coin_type,\\n            new_output_coin_type\\n        );\\n\\n        if (\\n            !this.state[deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"]\\n        ) {\\n            estimated_input_output_amount = this.getAndUpdateInputEstimate(\\n                deposit_withdraw_or_convert,\\n                new_input_coin_type,\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                ]\\n            );\\n            estimated_input_output_amount_state = \\\"_estimated_input_amount\\\";\\n        } else {\\n            estimated_input_output_amount = this.getAndUpdateOutputEstimate(\\n                deposit_withdraw_or_convert,\\n                new_input_coin_type,\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"\\n                ]\\n            );\\n        }\\n\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            possible_output_coin_types.forEach(\\n                allowed_withdraw_output_coin_type => {\\n                    if (\\n                        new_output_coin_type ===\\n                        allowed_withdraw_output_coin_type\\n                    ) {\\n                        this.setState({\\n                            coin_symbol: new_input_coin_type + \\\"input\\\",\\n                            supports_output_memos: this.state.coins_by_type[\\n                                allowed_withdraw_output_coin_type\\n                            ].supportsOutputMemos\\n                        });\\n                    }\\n                }\\n            );\\n        }\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_input_coin_type\\\"]: new_input_coin_type,\\n            [deposit_withdraw_or_convert +\\n            \\\"_output_coin_type\\\"]: new_output_coin_type,\\n            input_address_and_memo: new_input_address_and_memo,\\n            [deposit_withdraw_or_convert + \\\"_limit\\\"]: new_deposit_limit,\\n            [deposit_withdraw_or_convert +\\n            estimated_input_output_amount_state]: estimated_input_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input\\n        });\\n    }\\n\\n    onOutputCoinTypeChanged(deposit_withdraw_or_convert, event) {\\n        let estimated_input_output_amount = null;\\n        let estimated_input_output_amount_state = \\\"_estimated_output_amount\\\";\\n        let new_output_coin_type = event.target.value;\\n        let withdraw_output_coin_types = this.state\\n            .allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type];\\n\\n        if (deposit_withdraw_or_convert == \\\"withdraw\\\") {\\n            withdraw_output_coin_types.forEach(\\n                allowed_withdraw_output_coin_type => {\\n                    if (\\n                        new_output_coin_type ===\\n                        allowed_withdraw_output_coin_type\\n                    ) {\\n                        this.setState({\\n                            coin_symbol: new_output_coin_type + \\\"output\\\",\\n                            supports_output_memos: this.state.coins_by_type[\\n                                allowed_withdraw_output_coin_type\\n                            ].supportsOutputMemos,\\n                            key_for_withdrawal_dialog: new_output_coin_type\\n                        });\\n                    }\\n                }\\n            );\\n        }\\n\\n        let new_input_address_and_memo = this.state.input_address_and_memo;\\n        if (deposit_withdraw_or_convert == \\\"deposit\\\")\\n            new_input_address_and_memo = this.getCachedOrGeneratedInputAddress(\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type\\n            );\\n        let new_deposit_limit = this.getCachedOrFreshDepositLimit(\\n            deposit_withdraw_or_convert,\\n            this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n            new_output_coin_type\\n        );\\n\\n        if (\\n            !this.state[deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"]\\n        ) {\\n            estimated_input_output_amount = this.getAndUpdateInputEstimate(\\n                deposit_withdraw_or_convert,\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_output_amount\\\"\\n                ]\\n            );\\n            estimated_input_output_amount_state = \\\"_estimated_input_amount\\\";\\n        } else {\\n            estimated_input_output_amount = this.getAndUpdateOutputEstimate(\\n                deposit_withdraw_or_convert,\\n                this.state[deposit_withdraw_or_convert + \\\"_input_coin_type\\\"],\\n                new_output_coin_type,\\n                this.state[\\n                    deposit_withdraw_or_convert + \\\"_estimated_input_amount\\\"\\n                ]\\n            );\\n        }\\n\\n        this.setState({\\n            [deposit_withdraw_or_convert +\\n            \\\"_output_coin_type\\\"]: new_output_coin_type,\\n            input_address_and_memo: new_input_address_and_memo,\\n            [deposit_withdraw_or_convert + \\\"_limit\\\"]: new_deposit_limit,\\n            [deposit_withdraw_or_convert +\\n            estimated_input_output_amount_state]: estimated_input_output_amount,\\n            [deposit_withdraw_or_convert + \\\"_estimate_direction\\\"]: this\\n                .estimation_directions.output_from_input\\n        });\\n    }\\n\\n    render() {\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.gateway\\n        )\\n            return <div />;\\n\\n        let announcements,\\n            deposit_body,\\n            deposit_header,\\n            withdraw_body,\\n            withdraw_header,\\n            conversion_body,\\n            conversion_header,\\n            withdraw_modal_id,\\n            conversion_modal_id;\\n\\n        if (\\n            this.state.coin_info_request_state ==\\n            this.coin_info_request_states.request_failed\\n        ) {\\n            return (\\n                <div>\\n                    <p>\\n                        Error connecting to citadel.li, please try again later\\n                    </p>\\n                </div>\\n            );\\n        } else if (\\n            this.state.coin_info_request_state ==\\n                this.coin_info_request_states.never_requested ||\\n            this.state.coin_info_request_state ==\\n                this.coin_info_request_states.request_in_progress\\n        ) {\\n            return (\\n                <div>\\n                    <p>Retrieving current trade data from citadel.li</p>\\n                </div>\\n            );\\n        } else {\\n            // depending on what wallets are online, we might support deposits, withdrawals, conversions, all, or neither at any given time.\\n            let deposit_table = null;\\n            let withdraw_table = null;\\n            let amount_to_withdraw = null;\\n\\n            let calcTextDeposit = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_deposit != null) {\\n                calcTextDeposit = this.state.failed_calculate_deposit;\\n            }\\n            let calcTextWithdraw = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_withdraw != null) {\\n                calcTextWithdraw = this.state.failed_calculate_withdraw;\\n            }\\n            let calcTextConversion = <Translate content=\\\"gateway.calc\\\" />;\\n            if (this.state.failed_calculate_conversion != null) {\\n                calcTextConversion = this.state.failed_calculate_conversion;\\n            }\\n\\n            if (\\n                Object.getOwnPropertyNames(\\n                    this.state.allowed_mappings_for_deposit\\n                ).length > 0\\n            ) {\\n                // deposit\\n                let deposit_input_coin_type_options = [];\\n                Object.keys(this.state.allowed_mappings_for_deposit)\\n                    .sort()\\n                    .forEach(allowed_deposit_input_coin_type => {\\n                        deposit_input_coin_type_options.push(\\n                            <option\\n                                key={allowed_deposit_input_coin_type}\\n                                value={allowed_deposit_input_coin_type || \\\"\\\"}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_deposit_input_coin_type\\n                                    ].symbol\\n                                }\\n                            </option>\\n                        );\\n                    });\\n                let deposit_input_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"external-coin-types\\\"\\n                        value={this.state.deposit_input_coin_type || \\\"\\\"}\\n                        onChange={this.onInputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    >\\n                        {deposit_input_coin_type_options}\\n                    </select>\\n                );\\n\\n                let deposit_output_coin_type_options = [];\\n                let deposit_output_coin_types = this.state\\n                    .allowed_mappings_for_deposit[\\n                    this.state.deposit_input_coin_type\\n                ];\\n                deposit_output_coin_types.forEach(\\n                    allowed_deposit_output_coin_type => {\\n                        deposit_output_coin_type_options.push(\\n                            <option\\n                                key={allowed_deposit_output_coin_type}\\n                                value={allowed_deposit_output_coin_type || \\\"\\\"}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_deposit_output_coin_type\\n                                    ].walletSymbol\\n                                }\\n                            </option>\\n                        );\\n                    }\\n                );\\n                let deposit_output_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"native-coin-types\\\"\\n                        value={this.state.deposit_output_coin_type || \\\"\\\"}\\n                        onChange={this.onOutputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    >\\n                        {deposit_output_coin_type_options}\\n                    </select>\\n                );\\n\\n                let input_address_and_memo = this.state.input_address_and_memo\\n                    ? this.state.input_address_and_memo\\n                    : {address: \\\"unknown\\\", memo: null};\\n\\n                let estimated_input_amount_text = this.state\\n                    .deposit_estimated_input_amount;\\n                let estimated_output_amount_text = this.state\\n                    .deposit_estimated_output_amount;\\n\\n                let deposit_input_amount_edit_box = estimated_input_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_input_amount_text || \\\"\\\"}\\n                        onChange={this.onInputAmountChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextDeposit\\n                );\\n                let deposit_output_amount_edit_box = estimated_output_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_output_amount_text || \\\"\\\"}\\n                        onChange={this.onOutputAmountChanged.bind(\\n                            this,\\n                            \\\"deposit\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextDeposit\\n                );\\n\\n                let deposit_limit_element = <span>updating</span>;\\n                if (this.state.deposit_limit) {\\n                    if (this.state.deposit_limit.limit)\\n                        deposit_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">\\n                                    <Translate\\n                                        content=\\\"gateway.limit\\\"\\n                                        amount={utils.format_number(\\n                                            this.state.deposit_limit.limit,\\n                                            8\\n                                        )}\\n                                        symbol={\\n                                            this.state.coins_by_type[\\n                                                this.state\\n                                                    .deposit_input_coin_type\\n                                            ].walletSymbol\\n                                        }\\n                                    />\\n                                </span>\\n                            </div>\\n                        );\\n                    else deposit_limit_element = null;\\n                    //else\\n                    //    deposit_limit_element = <span>no limit</span>;\\n                }\\n\\n                let deposit_error_element = null;\\n                if (this.state.deposit_error)\\n                    deposit_error_element = (\\n                        <div>{this.state.deposit_error}</div>\\n                    );\\n\\n                deposit_header = (\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                <Translate content=\\\"gateway.deposit\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate content=\\\"gateway.balance\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate\\n                                    content=\\\"gateway.deposit_to\\\"\\n                                    asset={this.state.deposit_input_coin_type}\\n                                />\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                );\\n\\n                let deposit_address_and_memo_element = null;\\n                if (input_address_and_memo.memo)\\n                    deposit_address_and_memo_element = (\\n                        <Translate\\n                            unsafe\\n                            content=\\\"gateway.address_with_memo\\\"\\n                            address={input_address_and_memo.address}\\n                            memo={input_address_and_memo.memo}\\n                        />\\n                    );\\n                else\\n                    deposit_address_and_memo_element = (\\n                        <span>{input_address_and_memo.address}</span>\\n                    );\\n                //<span><span className=\\\"blocktrades-with-memo\\\">with memo</span> {input_address_and_memo.memo}</span>;\\n\\n                deposit_body = (\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div\\n                                    className=\\\"blocktrades-bridge\\\"\\n                                    style={{\\n                                        display: \\\"flex\\\",\\n                                        alignItems: \\\"center\\\"\\n                                    }}\\n                                >\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {deposit_input_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {deposit_input_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    &rarr;\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {deposit_output_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {deposit_output_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    <div>{deposit_error_element}</div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <AccountBalance\\n                                    account={this.props.account.get(\\\"name\\\")}\\n                                    asset={\\n                                        this.state.coins_by_type[\\n                                            this.state.deposit_output_coin_type\\n                                        ].walletSymbol\\n                                    }\\n                                />\\n                            </td>\\n                            <td style={{wordBreak: \\\"break-all\\\"}}>\\n                                {deposit_address_and_memo_element}\\n                                <br />\\n                                {deposit_limit_element}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                );\\n            }\\n\\n            if (\\n                Object.getOwnPropertyNames(\\n                    this.state.allowed_mappings_for_withdraw\\n                ).length > 0\\n            ) {\\n                withdraw_modal_id = this.getWithdrawModalId();\\n                let withdraw_asset_symbol = this.state.coins_by_type[\\n                    this.state.withdraw_input_coin_type\\n                ].symbol;\\n\\n                // withdrawal\\n\\n                amount_to_withdraw = this.state.withdraw_estimated_input_amount;\\n\\n                let withdraw_input_coin_type_options = [];\\n                Object.keys(this.state.allowed_mappings_for_withdraw)\\n                    .sort()\\n                    .forEach(allowed_withdraw_input_coin_type => {\\n                        withdraw_input_coin_type_options.push(\\n                            <option\\n                                key={allowed_withdraw_input_coin_type}\\n                                value={allowed_withdraw_input_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_withdraw_input_coin_type\\n                                    ].walletSymbol\\n                                }\\n                            </option>\\n                        );\\n                    });\\n                let withdraw_input_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"native-coin-types\\\"\\n                        value={this.state.withdraw_input_coin_type}\\n                        onChange={this.onInputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    >\\n                        {withdraw_input_coin_type_options}\\n                    </select>\\n                );\\n\\n                let withdraw_output_coin_type_options = [];\\n                let withdraw_output_coin_types = this.state\\n                    .allowed_mappings_for_withdraw[\\n                    this.state.withdraw_input_coin_type\\n                ];\\n                withdraw_output_coin_types.forEach(\\n                    allowed_withdraw_output_coin_type => {\\n                        withdraw_output_coin_type_options.push(\\n                            <option\\n                                key={allowed_withdraw_output_coin_type}\\n                                value={allowed_withdraw_output_coin_type}\\n                            >\\n                                {\\n                                    this.state.coins_by_type[\\n                                        allowed_withdraw_output_coin_type\\n                                    ].symbol\\n                                }\\n                            </option>\\n                        );\\n                    }\\n                );\\n                let withdraw_output_coin_type_select = (\\n                    <select\\n                        style={{width: \\\"11rem\\\"}}\\n                        className=\\\"external-coin-types\\\"\\n                        value={this.state.withdraw_output_coin_type}\\n                        onChange={this.onOutputCoinTypeChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    >\\n                        {withdraw_output_coin_type_options}\\n                    </select>\\n                );\\n\\n                let estimated_input_amount_text = this.state\\n                    .withdraw_estimated_input_amount;\\n\\n                let withdraw_input_amount_edit_box = estimated_input_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_input_amount_text || \\\"\\\"}\\n                        onChange={this.onInputAmountChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextWithdraw\\n                );\\n\\n                let estimated_output_amount_text = this.state\\n                    .withdraw_estimated_output_amount;\\n\\n                let withdraw_output_amount_edit_box = estimated_output_amount_text ? (\\n                    <input\\n                        style={{width: \\\"11rem\\\"}}\\n                        type=\\\"text\\\"\\n                        value={estimated_output_amount_text || \\\"\\\"}\\n                        onChange={this.onOutputAmountChanged.bind(\\n                            this,\\n                            \\\"withdraw\\\"\\n                        )}\\n                    />\\n                ) : (\\n                    calcTextWithdraw\\n                );\\n\\n                let withdraw_button = (\\n                    <ButtonWithdrawContainer\\n                        showModal={this.showModal}\\n                        hideModal={this.hideModal}\\n                        visible={this.state.isModalVisible}\\n                        key={this.state.key_for_withdrawal_dialog}\\n                        account={this.props.account.get(\\\"name\\\")}\\n                        issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                        asset={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_input_coin_type\\n                            ].walletSymbol\\n                        }\\n                        output_coin_name={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].name\\n                        }\\n                        output_coin_symbol={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].symbol\\n                        }\\n                        output_coin_type={this.state.withdraw_output_coin_type}\\n                        output_supports_memos={this.state.supports_output_memos}\\n                        amount_to_withdraw={amount_to_withdraw}\\n                        url={this.state.url}\\n                        gateway={this.props.gateway}\\n                        output_wallet_type={\\n                            this.state.coins_by_type[\\n                                this.state.withdraw_output_coin_type\\n                            ].walletType\\n                        }\\n                    />\\n                );\\n\\n                let withdraw_error_element = null;\\n                if (this.state.withdraw_error)\\n                    withdraw_error_element = (\\n                        <div>{this.state.withdraw_error}</div>\\n                    );\\n\\n                let withdraw_limit_element = <span>...</span>;\\n                if (this.state.withdraw_limit) {\\n                    if (this.state.withdraw_limit.limit)\\n                        withdraw_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">\\n                                    <Translate\\n                                        content=\\\"gateway.limit\\\"\\n                                        amount={utils.format_number(\\n                                            this.state.withdraw_limit.limit,\\n                                            8\\n                                        )}\\n                                        symbol={\\n                                            this.state.coins_by_type[\\n                                                this.state\\n                                                    .withdraw_input_coin_type\\n                                            ].walletSymbol\\n                                        }\\n                                    />\\n                                </span>\\n                            </div>\\n                        );\\n                    else\\n                        withdraw_limit_element = (\\n                            <div className=\\\"blocktrades-bridge\\\">\\n                                <span className=\\\"deposit-limit\\\">no limit</span>\\n                            </div>\\n                        );\\n                }\\n\\n                withdraw_header = (\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                <Translate content=\\\"gateway.withdraw\\\" />\\n                            </th>\\n                            <th>\\n                                <Translate content=\\\"gateway.balance\\\" />\\n                            </th>\\n                            <th />\\n                        </tr>\\n                    </thead>\\n                );\\n\\n                withdraw_body = (\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div className=\\\"blocktrades-bridge\\\">\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {withdraw_input_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {withdraw_input_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    &rarr;\\n                                    <div className=\\\"inline-block\\\">\\n                                        <div>\\n                                            {withdraw_output_coin_type_select}\\n                                        </div>\\n                                        <div>\\n                                            {withdraw_output_amount_edit_box}\\n                                        </div>\\n                                    </div>\\n                                    <div>{withdraw_error_element}</div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <AccountBalance\\n                                    account={this.props.account.get(\\\"name\\\")}\\n                                    asset={\\n                                        this.state.coins_by_type[\\n                                            this.state.withdraw_input_coin_type\\n                                        ].walletSymbol\\n                                    }\\n                                />\\n                            </td>\\n                            <td>\\n                                {withdraw_button}\\n                                <br />\\n                                {withdraw_limit_element}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                );\\n            }\\n\\n            if (this.state.announcements.length > 0) {\\n                announcements = (\\n                    <div className=\\\"blocktrades-announcements-container\\\">\\n                        {this.state.announcements.map(function(data, index) {\\n                            let add_color = \\\"txtann info\\\";\\n\\n                            if (data.status === 10) {\\n                                add_color = \\\"txtann error\\\";\\n                            } else if (data.status === 20) {\\n                                add_color = \\\"txtann warning\\\";\\n                            } else if (data.status === 30) {\\n                                add_color = \\\"txtann success\\\";\\n                            } else if (data.status === 40) {\\n                                add_color = \\\"txtann info\\\";\\n                            }\\n\\n                            if (data.format === 1) {\\n                                data.message.replace(/\\\\r\\\\n|\\\\r|\\\\n/g, \\\"<br />\\\");\\n                            }\\n\\n                            return (\\n                                <div\\n                                    className={\\n                                        \\\"blocktrades-announcements \\\" + add_color\\n                                    }\\n                                    key={index}\\n                                >\\n                                    {data.message}\\n                                </div>\\n                            );\\n                        }, this)}\\n                    </div>\\n                );\\n            }\\n\\n            return (\\n                <div>\\n                    <div style={{paddingBottom: 15}}>\\n                        <Translate\\n                            component=\\\"h5\\\"\\n                            content=\\\"gateway.bridge_text\\\"\\n                        />\\n                    </div>\\n                    {announcements}\\n                    <table className=\\\"table\\\">\\n                        {deposit_header}\\n                        {deposit_body}\\n                        {withdraw_header}\\n                        {withdraw_body}\\n                    </table>\\n                </div>\\n            );\\n        }\\n    }\\n} // CitadelBridgeDepositRequest\\n\\nexport default BindToChainState(CitadelBridgeDepositRequest);\\n\",\"import WalletDb from \\\"stores/WalletDb\\\";\\n\\nclass RuDexDepositAddressCache {\\n    constructor() {\\n        // increment this to force generating new addresses for all mappings\\n        this.current_rudex_address_cache_version_string = \\\"1\\\";\\n    }\\n\\n    getIndexForDepositKeyInExchange(\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let args = [\\n            this.current_rudex_address_cache_version_string,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        ];\\n        return args.reduce(function(previous, current) {\\n            return previous.concat(\\\"[\\\", current, \\\"]\\\");\\n        }, \\\"\\\");\\n    }\\n\\n    // returns {\\\"address\\\": address, \\\"memo\\\": memo}, with a null memo if not applicable\\n    getCachedInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let wallet = WalletDb.getWallet();\\n        if (!wallet) return null;\\n        wallet.deposit_keys = wallet.deposit_keys || {};\\n        wallet.deposit_keys[exchange_name] =\\n            wallet.deposit_keys[exchange_name] || {};\\n        let index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        wallet.deposit_keys[exchange_name][index] =\\n            wallet.deposit_keys[exchange_name][index] || [];\\n\\n        let number_of_keys = wallet.deposit_keys[exchange_name][index].length;\\n        if (number_of_keys)\\n            return wallet.deposit_keys[exchange_name][index][\\n                number_of_keys - 1\\n            ];\\n        return null;\\n    }\\n\\n    cacheInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type,\\n        address,\\n        memo\\n    ) {\\n        let wallet = WalletDb.getWallet();\\n        if (!wallet) return null;\\n        wallet.deposit_keys = wallet.deposit_keys || {};\\n        wallet.deposit_keys[exchange_name] =\\n            wallet.deposit_keys[exchange_name] || {};\\n        let index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        wallet.deposit_keys[exchange_name][index] =\\n            wallet.deposit_keys[exchange_name][index] || [];\\n        wallet.deposit_keys[exchange_name][index].push({\\n            address: address,\\n            memo: memo\\n        });\\n        WalletDb._updateWallet();\\n    }\\n} // RuDexDepositAddressCache\\n\\nexport default RuDexDepositAddressCache;\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport DisableCopyText from \\\"../DisableCopyText\\\";\\nimport RuDexWithdrawModal from \\\"./RuDexWithdrawModal\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport RuDexDepositAddressCache from \\\"common/RuDexDepositAddressCache\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport utils from \\\"common/utils\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport CopyToClipboard from \\\"react-copy-to-clipboard\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass RuDexGatewayDepositRequest extends React.Component {\\n    static propTypes = {\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired,\\n        min_amount: PropTypes.number,\\n        asset_precision: PropTypes.number\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.deposit_address_cache = new RuDexDepositAddressCache();\\n\\n        this.state = {\\n            isModalVisible: false,\\n            receive_address: null\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _getDepositObject() {\\n        return {\\n            inputCoinType: this.props.deposit_coin_type,\\n            outputCoinType: this.props.receive_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\"),\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    // componentWillMount() {\\n    //     let account_name = this.props.account.get(\\\"name\\\");\\n    //     let receive_address = this.deposit_address_cache.getCachedInputAddress(this.props.gateway, account_name, this.props.deposit_coin_type, this.props.receive_coin_type);\\n    // }\\n\\n    addDepositAddress(receive_address) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        this.deposit_address_cache.cacheInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            this.props.deposit_coin_type,\\n            this.props.receive_coin_type,\\n            receive_address.address,\\n            receive_address.memo\\n        );\\n        this.setState({receive_address});\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    render() {\\n        let emptyRow = <div style={{display: \\\"none\\\", minHeight: 150}} />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        // let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        // let account_balances = account_balances_object.toJS();\\n        // let asset_types = Object.keys(account_balances);\\n        // if (asset_types.length > 0) {\\n        //     let current_asset_id = this.props.receive_asset.get(\\\"id\\\");\\n        //     if( current_asset_id )\\n        //     {\\n        //         balance = (<span><Translate component=\\\"span\\\" content=\\\"transfer.available\\\"/>: <BalanceComponent balance={account_balances[current_asset_id]}/></span>);\\n        //     }\\n        // }\\n\\n        let receive_address = this.state.receive_address;\\n        if (!receive_address) {\\n            let account_name = this.props.account.get(\\\"name\\\");\\n            receive_address = this.deposit_address_cache.getCachedInputAddress(\\n                this.props.gateway,\\n                account_name,\\n                this.props.deposit_coin_type,\\n                this.props.receive_coin_type\\n            );\\n        }\\n\\n        // if( !receive_address ) {\\n        //     requestDepositAddress(this._getDepositObject());\\n        //     return emptyRow;\\n        // }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let deposit_memo = null;\\n        // if (this.props.deprecated_in_favor_of)\\n        // {\\n        //     deposit_address_fragment = <span>please use {this.props.deprecated_in_favor_of.get(\\\"symbol\\\")} instead. <span data-tip={this.props.deprecated_message} data-place=\\\"right\\\" data-html={true}><Icon name=\\\"question-circle\\\" title=\\\"icons.question_circle\\\" /></span><ReactTooltip /></span>;\\n        // }\\n        // else\\n        // {\\n        let clipboardText = \\\"\\\";\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            clipboardText = this.props.deposit_account;\\n            memoText = \\\"dex:\\\" + this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{memoText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        if (this.props.action === \\\"deposit\\\") {\\n            return (\\n                <div className=\\\"rudex__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"left-label\\\">\\n                            <b>\\n                                <Translate\\n                                    content=\\\"gateway.rudex.min_amount\\\"\\n                                    minAmount={utils.format_number(\\n                                        this.props.min_amount /\\n                                            utils.get_asset_precision(\\n                                                this.props.asset_precision\\n                                            ),\\n                                        this.props.asset_precision,\\n                                        false\\n                                    )}\\n                                    symbol={this.props.deposit_coin_type}\\n                                />\\n                            </b>\\n                        </label>\\n                        <div style={{padding: \\\"10px 0\\\", fontSize: \\\"1.1rem\\\"}}>\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            ADDRESS:{\\\" \\\"}\\n                                            <b>\\n                                                <DisableCopyText\\n                                                    replaceCopyText={counterpart.translate(\\n                                                        \\\"gateway.use_copy_button\\\"\\n                                                    )}\\n                                                >\\n                                                    {deposit_address_fragment}\\n                                                </DisableCopyText>\\n                                            </b>\\n                                        </td>\\n                                    </tr>\\n                                    {deposit_memo ? (\\n                                        <tr>\\n                                            <td>\\n                                                <DisableCopyText\\n                                                    replaceCopyText={counterpart.translate(\\n                                                        \\\"gateway.use_copy_button\\\"\\n                                                    )}\\n                                                >\\n                                                    MEMO: <b>{deposit_memo}</b>\\n                                                </DisableCopyText>\\n                                            </td>\\n                                        </tr>\\n                                    ) : null}\\n                                </tbody>\\n                            </table>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <CopyToClipboard text={clipboardText}>\\n                                        <div className=\\\"button\\\">\\n                                            Copy address\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <CopyToClipboard text={memoText}>\\n                                        <div className=\\\"button\\\">Copy memo</div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"rudex__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                    >\\n                        <RuDexWithdrawModal\\n                            hideModal={this.hideModal}\\n                            showModal={this.showModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            min_amount={this.props.min_amount}\\n                            asset_precision={this.props.asset_precision}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(RuDexGatewayDepositRequest);\\n\",\"import React from \\\"react\\\";\\nimport RuDexGatewayDepositRequest from \\\"./RuDexGatewayDepositRequest\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {\\n    RecentTransactions,\\n    TransactionWrapper\\n} from \\\"components/Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport cnames from \\\"classnames\\\";\\nimport LoadingIndicator from \\\"../../LoadingIndicator\\\";\\n\\nclass RuDexGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        this.state = {\\n            activeCoin: this._getActiveCoin(props, {action: \\\"deposit\\\"}),\\n            action: props.viewSettings.get(`rudexAction`, \\\"deposit\\\")\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_rudex_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"PPY\\\";\\n        }\\n        if (state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"PPY\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.provider !== this.props.provider) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_rudex_${this.state.action}`] = e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({[`rudexAction`]: type});\\n    }\\n\\n    render() {\\n        let {coins, account} = this.props;\\n        let {activeCoin, action} = this.state;\\n\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoin.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoin.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n\\n        let isDeposit = this.state.action === \\\"deposit\\\";\\n\\n        let supportUrl = \\\"https://rudex.freshdesk.com\\\";\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />:{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <RuDexGatewayDepositRequest\\n                                key={`${coin.symbol}`}\\n                                gateway={coin.gatewayWallet}\\n                                issuer_account={coin.issuer}\\n                                account={account}\\n                                deposit_asset={coin.backingCoin.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoin.toLowerCase()}\\n                                deposit_account={coin.gatewayWallet}\\n                                deposit_wallet_type={coin.walletType}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.memoSupport}\\n                                min_amount={coin.minAmount}\\n                                asset_precision={coin.precision}\\n                                action={this.state.action}\\n                            />\\n                            <label className=\\\"left-label\\\">Support</label>\\n                            <div>\\n                                <Translate content=\\\"gateway.rudex.support_block\\\" />\\n                                <br />\\n                                <br />\\n                                <a\\n                                    href={supportUrl}\\n                                    target=\\\"_blank\\\"\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                >\\n                                    {supportUrl}\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        {coin && coin.symbol ? (\\n                            <TransactionWrapper\\n                                asset={coin.symbol}\\n                                fromAccount={\\n                                    isDeposit\\n                                        ? coin.issuerId\\n                                        : this.props.account.get(\\\"id\\\")\\n                                }\\n                                to={\\n                                    isDeposit\\n                                        ? this.props.account.get(\\\"id\\\")\\n                                        : coin.issuerId\\n                                }\\n                            >\\n                                {({asset, to, fromAccount}) => {\\n                                    return (\\n                                        <RecentTransactions\\n                                            accountsList={Immutable.List([\\n                                                this.props.account.get(\\\"id\\\")\\n                                            ])}\\n                                            limit={10}\\n                                            compactView={true}\\n                                            fullHeight={true}\\n                                            filter=\\\"transfer\\\"\\n                                            title={\\n                                                <Translate\\n                                                    content={\\n                                                        \\\"gateway.recent_\\\" +\\n                                                        this.state.action\\n                                                    }\\n                                                />\\n                                            }\\n                                            customFilter={{\\n                                                fields: [\\n                                                    \\\"to\\\",\\n                                                    \\\"from\\\",\\n                                                    \\\"asset_id\\\"\\n                                                ],\\n                                                values: {\\n                                                    to: to.get(\\\"id\\\"),\\n                                                    from: fromAccount.get(\\\"id\\\"),\\n                                                    asset_id: asset.get(\\\"id\\\")\\n                                                }\\n                                            }}\\n                                        />\\n                                    );\\n                                }}\\n                            </TransactionWrapper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(RuDexGateway, {\\n    listenTo() {\\n        return [SettingsStore];\\n    },\\n    getProps() {\\n        return {\\n            viewSettings: SettingsStore.getState().viewSettings\\n        };\\n    }\\n});\\n\",\"import ls from \\\"./localStorage\\\";\\nimport {bitsparkAPIs} from \\\"api/apiConfig\\\";\\nimport {availableGateways} from \\\"common/gateways\\\";\\nconst bitsparkStorage = new ls(\\\"\\\");\\n\\nlet fetchInProgess = {};\\nlet fetchCache = {};\\nlet clearIntervals = {};\\nconst fetchCacheTTL = 30000;\\nfunction setCacheClearTimer(key) {\\n    clearIntervals[key] = setTimeout(() => {\\n        delete fetchCache[key];\\n        delete clearIntervals[key];\\n    }, fetchCacheTTL);\\n}\\n\\nexport function fetchCoins(url = bitsparkAPIs.BASE + bitsparkAPIs.COINS_LIST) {\\n    const key = \\\"fetchCoins_\\\" + url;\\n    let currentPromise = fetchInProgess[key];\\n    if (fetchCache[key]) {\\n        return Promise.resolve(fetchCache[key]);\\n    } else if (!currentPromise) {\\n        fetchInProgess[key] = currentPromise = fetch(url)\\n            .then(reply =>\\n                reply.json().then(result => {\\n                    // throw new Error(\\\"Test\\\");\\n                    return result;\\n                })\\n            )\\n            .catch(err => {\\n                console.log(`fetchCoins error from ${url}: ${err}`);\\n                throw err;\\n            });\\n    }\\n    return new Promise((res, rej) => {\\n        currentPromise\\n            .then(result => {\\n                fetchCache[key] = result;\\n                res(result);\\n                delete fetchInProgess[key];\\n                if (!clearIntervals[key]) setCacheClearTimer(key);\\n            })\\n            .catch(rej);\\n    });\\n}\\n\\nexport function getDepositAddress({coin, account, stateCallback}) {\\n    let body = {\\n        coin,\\n        account\\n    };\\n\\n    let body_string = JSON.stringify(body);\\n\\n    fetch(bitsparkAPIs.BASE + \\\"/simple-api/get-last-address\\\", {\\n        method: \\\"POST\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: body_string\\n    })\\n        .then(\\n            data => {\\n                data.json().then(\\n                    json => {\\n                        let address = {\\n                            address: json.address,\\n                            memo: json.memo || null,\\n                            error: json.error || null,\\n                            loading: false\\n                        };\\n                        if (stateCallback) stateCallback(address);\\n                    },\\n                    error => {\\n                        console.log(\\\"error: \\\", error);\\n                        if (stateCallback)\\n                            stateCallback({address: error.message, memo: null});\\n                    }\\n                );\\n            },\\n            error => {\\n                console.log(\\\"error: \\\", error);\\n                if (stateCallback)\\n                    stateCallback({address: error.message, memo: null});\\n            }\\n        )\\n        .catch(err => {\\n            console.log(\\\"fetch error:\\\", err);\\n        });\\n}\\n\\nlet depositRequests = {};\\nexport function requestDepositAddress({\\n    inputCoinType,\\n    outputCoinType,\\n    outputAddress,\\n    url = bitsparkAPIs.BASE,\\n    stateCallback,\\n    selectedGateway\\n}) {\\n    let gatewayStatus = availableGateways[selectedGateway];\\n\\n    let body = {\\n        inputCoinType,\\n        outputCoinType,\\n        outputAddress\\n    };\\n\\n    let body_string = JSON.stringify(body);\\n    if (depositRequests[body_string]) return;\\n    depositRequests[body_string] = true;\\n    fetch(url + \\\"/simple-api/initiate-trade\\\", {\\n        method: \\\"post\\\",\\n        headers: new Headers({\\n            Accept: \\\"application/json\\\",\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }),\\n        body: body_string\\n    })\\n        .then(\\n            reply => {\\n                reply.json().then(\\n                    json => {\\n                        delete depositRequests[body_string];\\n                        // console.log( \\\"reply: \\\", json );\\n                        let address = {\\n                            address: json.inputAddress || \\\"unknown\\\",\\n                            memo: json.inputMemo,\\n                            error: json.error || null\\n                        };\\n                        if (stateCallback) stateCallback(address);\\n                    },\\n                    error => {\\n                        console.log(\\\"error: \\\", error);\\n                        delete depositRequests[body_string];\\n                        if (stateCallback) stateCallback(null);\\n                    }\\n                );\\n            },\\n            error => {\\n                console.log(\\\"error: \\\", error);\\n                delete depositRequests[body_string];\\n                if (stateCallback) stateCallback(null);\\n            }\\n        )\\n        .catch(err => {\\n            console.log(\\\"fetch error:\\\", err);\\n            delete depositRequests[body_string];\\n        });\\n}\\n\\nexport function validateAddress({\\n    url = bitsparkAPIs.BASE,\\n    walletType,\\n    newAddress,\\n    output_coin_type = null,\\n    method = null\\n}) {\\n    if (!newAddress) return new Promise(res => res());\\n\\n    if (!method || method == \\\"GET\\\") {\\n        url +=\\n            \\\"/wallets/\\\" +\\n            walletType +\\n            \\\"/address-validator?address=\\\" +\\n            encodeURIComponent(newAddress);\\n        if (output_coin_type) {\\n            url += \\\"&outputCoinType=\\\" + output_coin_type;\\n        }\\n        return fetch(url, {\\n            method: \\\"get\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            })\\n        })\\n            .then(reply => reply.json().then(json => json.isValid))\\n            .catch(err => {\\n                console.log(\\\"validate error:\\\", err);\\n            });\\n    } else if (method == \\\"POST\\\") {\\n        return fetch(url + \\\"/wallets/\\\" + walletType + \\\"/check-address\\\", {\\n            method: \\\"post\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            }),\\n            body: JSON.stringify({address: newAddress})\\n        })\\n            .then(reply => reply.json().then(json => json.isValid))\\n            .catch(err => {\\n                console.log(\\\"validate error:\\\", err);\\n            });\\n    }\\n}\\n\\nfunction hasWithdrawalAddress(wallet) {\\n    return bitsparkStorage.has(`history_address_${wallet}`);\\n}\\n\\nfunction setWithdrawalAddresses({wallet, addresses}) {\\n    bitsparkStorage.set(`history_address_${wallet}`, addresses);\\n}\\n\\nfunction getWithdrawalAddresses(wallet) {\\n    return bitsparkStorage.get(`history_address_${wallet}`, []);\\n}\\n\\nfunction setLastWithdrawalAddress({wallet, address}) {\\n    bitsparkStorage.set(`history_address_last_${wallet}`, address);\\n}\\n\\nfunction getLastWithdrawalAddress(wallet) {\\n    return bitsparkStorage.get(`history_address_last_${wallet}`, \\\"\\\");\\n}\\n\\nexport const WithdrawAddresses = {\\n    has: hasWithdrawalAddress,\\n    set: setWithdrawalAddresses,\\n    get: getWithdrawalAddresses,\\n    setLast: setLastWithdrawalAddress,\\n    getLast: getLastWithdrawalAddress\\n};\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport BitsparkWithdrawModal from \\\"./BitsparkWithdrawModal\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport {requestDepositAddress, getDepositAddress} from \\\"common/BitsparkMethods\\\";\\nimport {bitsparkAPIs} from \\\"api/apiConfig\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass BitsparkGatewayDepositRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            isModalVisible: false,\\n            receive_address: null,\\n            url: props.url || bitsparkAPIs.BASE,\\n            loading: false,\\n            emptyAddressDeposit: false\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n        this._copy = this._copy.bind(this);\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n\\n        document.addEventListener(\\\"copy\\\", this._copy);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _copy(e) {\\n        try {\\n            if (this.state.clipboardText)\\n                e.clipboardData.setData(\\\"text/plain\\\", this.state.clipboardText);\\n            else\\n                e.clipboardData.setData(\\n                    \\\"text/plain\\\",\\n                    counterpart\\n                        .translate(\\\"gateway.use_copy_button\\\")\\n                        .toUpperCase()\\n                );\\n            e.preventDefault();\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    _getDepositObject() {\\n        return {\\n            inputCoinType: this.props.deposit_coin_type,\\n            outputCoinType: this.props.receive_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\"),\\n            url: this.state.url,\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    componentWillMount() {\\n        getDepositAddress({\\n            coin: this.props.receive_coin_type,\\n            account: this.props.account.get(\\\"name\\\"),\\n            stateCallback: this.addDepositAddress\\n        });\\n    }\\n\\n    componentWillUnmount() {\\n        document.removeEventListener(\\\"copy\\\", this._copy);\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (np.account !== this.props.account) {\\n            getDepositAddress({\\n                coin: np.receive_coin_type,\\n                account: np.account.get(\\\"name\\\"),\\n                stateCallback: this.addDepositAddress\\n            });\\n        }\\n    }\\n\\n    addDepositAddress(receive_address) {\\n        if (receive_address.error) {\\n            receive_address.error.message === \\\"no_address\\\"\\n                ? this.setState({emptyAddressDeposit: true})\\n                : this.setState({emptyAddressDeposit: false});\\n        }\\n\\n        this.setState({receive_address});\\n        this.setState({\\n            loading: false\\n        });\\n        this.setState({receive_address});\\n    }\\n\\n    requestDepositAddressLoad() {\\n        this.setState({\\n            loading: true,\\n            emptyAddressDeposit: false\\n        });\\n        requestDepositAddress(this._getDepositObject());\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    toClipboard(clipboardText) {\\n        try {\\n            this.setState({clipboardText}, () => {\\n                document.execCommand(\\\"copy\\\");\\n            });\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    render() {\\n        const isDeposit = this.props.action === \\\"deposit\\\";\\n        let emptyRow = <LoadingIndicator />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        const {gateFee} = this.props;\\n\\n        let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        let receive_address = this.state.receive_address;\\n        let {emptyAddressDeposit} = this.state;\\n        let indicatorButtonAddr = this.state.loading;\\n\\n        if (!receive_address) {\\n            return (\\n                <div style={{margin: \\\"3rem\\\"}}>\\n                    <LoadingIndicator type=\\\"three-bounce\\\" />\\n                </div>\\n            );\\n        }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let deposit_memo = null;\\n        let clipboardText = \\\"\\\";\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            clipboardText =\\n                this.props.receive_coin_type +\\n                \\\":\\\" +\\n                this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{clipboardText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        if (\\n            !this.props.isAvailable ||\\n            ((isDeposit && !this.props.deposit_account && !receive_address) ||\\n                (receive_address && receive_address.address === \\\"unknown\\\"))\\n        ) {\\n            return (\\n                <div>\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        if (isDeposit) {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"fz_12 left-label\\\">\\n                            <Translate content=\\\"gateway.deposit_notice_delay\\\" />\\n                        </label>\\n                        <div>\\n                            {emptyAddressDeposit ? (\\n                                <Translate content=\\\"gateway.please_generate_address\\\" />\\n                            ) : (\\n                                deposit_address_fragment\\n                            )}\\n                            <div>\\n                                {deposit_memo && (\\n                                    <span>memo: {deposit_memo}</span>\\n                                )}\\n                            </div>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <div\\n                                        className=\\\"button\\\"\\n                                        onClick={this.toClipboard.bind(\\n                                            this,\\n                                            clipboardText\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.copy_address\\\" />\\n                                    </div>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <div\\n                                        className=\\\"button\\\"\\n                                        onClick={this.toClipboard.bind(\\n                                            this,\\n                                            memoText\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.copy_memo\\\" />\\n                                    </div>\\n                                ) : null}\\n                                <button\\n                                    className={\\\"button spinner-button-circle\\\"}\\n                                    onClick={this.requestDepositAddressLoad.bind(\\n                                        this\\n                                    )}\\n                                >\\n                                    {indicatorButtonAddr ? (\\n                                        <LoadingIndicator type=\\\"circle\\\" />\\n                                    ) : null}\\n                                    <Translate content=\\\"gateway.generate_new\\\" />\\n                                </button>\\n                            </div>\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_amount\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_asset\\\"\\n                                minDeposit={this.props.gateFee * 2}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                        id={withdraw_modal_id}\\n                        overlay={true}\\n                    >\\n                        <BitsparkWithdrawModal\\n                            hideModal={this.hideModal}\\n                            showModal={this.showModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            url={this.state.url}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            gateFee={gateFee}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(BitsparkGatewayDepositRequest);\\n\",\"import React from \\\"react\\\";\\nimport BitsparkGatewayDepositRequest from \\\"./BitsparkGatewayDepositRequest\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {\\n    RecentTransactions,\\n    TransactionWrapper\\n} from \\\"components/Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport LoadingIndicator from \\\"../../LoadingIndicator\\\";\\n\\nclass BitsparkGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        const action = props.viewSettings.get(\\n            `${props.provider}Action`,\\n            \\\"deposit\\\"\\n        );\\n        this.state = {\\n            activeCoin: this._getActiveCoin(props, {action}),\\n            action\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_${props.provider}_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"BTC\\\";\\n        }\\n        if (state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"SPARKDEX.BTC\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.provider !== this.props.provider) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_${this.props.provider}_${this.state.action}`] =\\n            e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            [`${this.props.provider}Action`]: type\\n        });\\n    }\\n\\n    render() {\\n        let {coins, account, provider} = this.props;\\n        let {activeCoin, action} = this.state;\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoinType.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoinType.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n\\n        let issuers = {\\n            bitspark: {\\n                name: coin.intermediateAccount,\\n                id: \\\"1.2.1070206\\\",\\n                support: \\\"info@bitspark.io\\\"\\n            }\\n        };\\n\\n        let issuer = issuers[provider];\\n\\n        let isDeposit = this.state.action === \\\"deposit\\\";\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />\\n                                :{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <BitsparkGatewayDepositRequest\\n                                key={`${provider}.${coin.symbol}`}\\n                                gateway={provider}\\n                                issuer_account={issuer.name}\\n                                account={account}\\n                                deposit_asset={coin.backingCoinType.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoinType.toLowerCase()}\\n                                deposit_account={coin.depositAccount}\\n                                deposit_wallet_type={coin.walletType}\\n                                gateFee={coin.gateFee}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.supportsMemos}\\n                                isAvailable={coin.isAvailable}\\n                                action={this.state.action}\\n                            />\\n                            <label className=\\\"left-label\\\">Support</label>\\n                            <div>\\n                                <Translate content=\\\"gateway.bitspark.support_block\\\" />\\n                                <br />\\n                                <br />\\n                                <a\\n                                    href={\\n                                        (issuer.support.indexOf(\\\"@\\\") === -1\\n                                            ? \\\"\\\"\\n                                            : \\\"mailto:\\\") + issuer.support\\n                                    }\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                >\\n                                    {issuer.support}\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        {coin && coin.symbol ? (\\n                            <TransactionWrapper\\n                                asset={coin.symbol}\\n                                fromAccount={\\n                                    isDeposit\\n                                        ? issuer.id\\n                                        : this.props.account.get(\\\"id\\\")\\n                                }\\n                                to={\\n                                    isDeposit\\n                                        ? this.props.account.get(\\\"id\\\")\\n                                        : issuer.id\\n                                }\\n                            >\\n                                {({asset, to, fromAccount}) => {\\n                                    return (\\n                                        <RecentTransactions\\n                                            accountsList={Immutable.List([\\n                                                this.props.account.get(\\\"id\\\")\\n                                            ])}\\n                                            limit={10}\\n                                            compactView={true}\\n                                            fullHeight={true}\\n                                            filter=\\\"transfer\\\"\\n                                            title={\\n                                                <Translate\\n                                                    content={\\n                                                        \\\"gateway.recent_\\\" +\\n                                                        this.state.action\\n                                                    }\\n                                                />\\n                                            }\\n                                            customFilter={{\\n                                                fields: [\\n                                                    \\\"to\\\",\\n                                                    \\\"from\\\",\\n                                                    \\\"asset_id\\\"\\n                                                ],\\n                                                values: {\\n                                                    to: to.get(\\\"id\\\"),\\n                                                    from: fromAccount.get(\\\"id\\\"),\\n                                                    asset_id: asset.get(\\\"id\\\")\\n                                                }\\n                                            }}\\n                                        />\\n                                    );\\n                                }}\\n                            </TransactionWrapper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(\\n    BitsparkGateway,\\n    {\\n        listenTo() {\\n            return [SettingsStore];\\n        },\\n        getProps() {\\n            return {\\n                viewSettings: SettingsStore.getState().viewSettings\\n            };\\n        }\\n    }\\n);\\n\",\"import ls from \\\"./localStorage\\\";\\nimport {gdexAPIs} from \\\"api/apiConfig\\\";\\n\\nconst gdexStorage = new ls(\\\"\\\");\\n\\nlet assetsRequest = {};\\nlet REQUEST_TIMEOUT = 10000;\\n\\nexport function fetchWithdrawRule(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.WITHDRAW_RULE,\\n        timeout\\n    );\\n}\\n\\nexport function userAgreement(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.USER_AGREEMENT,\\n        timeout\\n    );\\n}\\n\\nexport function fetchAssets(reqBody, timeout = -1) {\\n    if (!reqBody.requestType) reqBody.requestType = 0;\\n    if (!reqBody.assetType) reqBody.assetType = 0;\\n    if (!reqBody.version) reqBody.version = \\\"1.1\\\";\\n    return requestSimple(reqBody, gdexAPIs.BASE + gdexAPIs.ASSET_LIST, timeout);\\n}\\n\\n//\\\"userAccount\\\"\\nexport function fetchUserInfo(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.GET_USER_INFO,\\n        timeout\\n    );\\n}\\n\\nexport function validateAddress(reqBody, timeout = -1) {\\n    if (!reqBody.address) return new Promise(res => res());\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.CHECK_WITHDRAY_ADDRESS,\\n        timeout\\n    );\\n}\\n\\nexport function requestDepositAddress(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.GET_DEPOSIT_ADDRESS,\\n        timeout\\n    );\\n}\\n\\nexport function getTransactionRecordList(reqBody, type, timeout = -1) {\\n    if (type == 1) return getDepositRecordList(reqBody, timeout);\\n    else if (type == 2) return getWithdrawRecordList(reqBody, timeout);\\n    else return new Promise(res => res());\\n}\\n\\nexport function getDepositRecordList(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.DEPOSIT_RECORD_LIST,\\n        timeout\\n    );\\n}\\n\\nexport function getWithdrawRecordList(reqBody, timeout = -1) {\\n    return requestSimple(\\n        reqBody,\\n        gdexAPIs.BASE + gdexAPIs.WITHDRAW_RECORD_LIST,\\n        timeout\\n    );\\n}\\n\\nfunction requestSimple(reqBody, reqUrl, timeout = -1) {\\n    if (timeout == -1) {\\n        return requestWithTimeout(reqBody, reqUrl, REQUEST_TIMEOUT);\\n    } else if (timeout == 0) {\\n        return requestWithoutTimeout(reqBody, reqUrl);\\n    } else {\\n        return requestWithTimeout(reqBody, reqUrl, timeout);\\n    }\\n}\\n\\nfunction requestWithTimeout(reqBody, reqUrl, timeout) {\\n    if (!reqBody.requestChannel) reqBody.requestChannel = 0;\\n    if (!reqBody.version) reqBody.version = \\\"1.0\\\";\\n    if (!reqBody.timestamp) reqBody.timestamp = new Date().getTime();\\n    if (!reqBody.outerChannel) reqBody.outerChannel = \\\"Bitshares\\\";\\n    let body_string = JSON.stringify(reqBody);\\n    if (assetsRequest[body_string]) return;\\n    assetsRequest[body_string] = true;\\n    return Promise.race([\\n        new Promise((resolve, reject) => {\\n            fetch(reqUrl, {\\n                method: \\\"post\\\",\\n                headers: new Headers({\\n                    Accept: \\\"application/json\\\",\\n                    \\\"Content-Type\\\": \\\"application/json\\\"\\n                }),\\n                body: body_string\\n                // mode: \\\"no-cors\\\"\\n            }).then(reply => {\\n                reply\\n                    .json()\\n                    .then(json => {\\n                        delete assetsRequest[body_string];\\n                        if (json.code !== 0) {\\n                            console.log(json);\\n                            reject({code: json.code, message: json.message});\\n                        }\\n                        resolve(json.data);\\n                    })\\n                    .catch(err => {\\n                        delete assetsRequest[body_string];\\n                        reject({code: -1, message: err.message});\\n                    });\\n            });\\n        }),\\n        new Promise(function(resolve, reject) {\\n            setTimeout(() => {\\n                reject({code: -2, message: \\\"Request timeout.\\\"});\\n            }, timeout);\\n        })\\n    ]);\\n}\\n\\nfunction requestWithoutTimeout(reqBody, reqUrl) {\\n    if (!reqBody.requestChannel) reqBody.requestChannel = 0;\\n    if (!reqBody.version) reqBody.version = \\\"1.0\\\";\\n    if (!reqBody.timestamp) reqBody.timestamp = new Date().getTime();\\n    if (!reqBody.outerChannel) reqBody.outerChannel = \\\"Bitshares\\\";\\n    let body_string = JSON.stringify(reqBody);\\n    if (assetsRequest[body_string]) return;\\n    assetsRequest[body_string] = true;\\n    new Promise((resolve, reject) => {\\n        fetch(reqUrl, {\\n            method: \\\"post\\\",\\n            headers: new Headers({\\n                Accept: \\\"application/json\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            }),\\n            body: body_string\\n        }).then(reply => {\\n            reply\\n                .json()\\n                .then(json => {\\n                    delete assetsRequest[body_string];\\n                    if (json.code !== 0) {\\n                        console.log(json);\\n                        reject({code: json.code, message: json.message});\\n                    }\\n                    resolve(json.data);\\n                })\\n                .catch(err => {\\n                    delete assetsRequest[body_string];\\n                    reject({code: -1, message: err.message});\\n                });\\n        });\\n    });\\n}\\n\\nfunction hasWithdrawalAddress(wallet) {\\n    return gdexStorage.has(`gdex_history_address_${wallet}`);\\n}\\n\\nfunction setWithdrawalAddresses({wallet, addresses}) {\\n    gdexStorage.set(`gdex_history_address_${wallet}`, addresses);\\n}\\n\\nfunction getWithdrawalAddresses(wallet) {\\n    return gdexStorage.get(`gdex_history_address_${wallet}`, []);\\n}\\n\\nfunction setLastWithdrawalAddress({wallet, address}) {\\n    gdexStorage.set(`gdex_history_address_last_${wallet}`, address);\\n}\\n\\nfunction getLastWithdrawalAddress(wallet) {\\n    return gdexStorage.get(`gdex_history_address_last_${wallet}`, \\\"\\\");\\n}\\n\\nexport const WithdrawAddresses = {\\n    has: hasWithdrawalAddress,\\n    set: setWithdrawalAddresses,\\n    get: getWithdrawalAddresses,\\n    setLast: setLastWithdrawalAddress,\\n    getLast: getLastWithdrawalAddress\\n};\\n\",\"import ss from \\\"common/localStorage\\\";\\n\\nconst session = new ss(\\\"__gdex__user_\\\");\\n\\nclass GdexCache {\\n    constructor() {\\n        this.current_gdex_address_cache_version_string = \\\"1\\\";\\n        this.day = 86400;\\n    }\\n\\n    getUserInfo(user_account) {\\n        let user_info = session.get(user_account, null);\\n        if (!user_info) return null;\\n        let cur_time = Math.floor(new Date().getTime() / 1000);\\n        // User info expire time set to 1 day\\n        if (Math.abs(user_info.ctime - cur_time) > this.day) {\\n            session.remove(user_account);\\n            return null;\\n        }\\n        return user_info;\\n    }\\n\\n    cacheUserInfo(user_account, user_id, status) {\\n        let user_info = session.get(user_account, {});\\n        if (user_info != {}) {\\n            user_info = {\\n                user_id: user_id,\\n                status: status,\\n                ctime: Math.floor(new Date().getTime() / 1000)\\n            };\\n            session.set(user_account, user_info);\\n        }\\n    }\\n\\n    delUserInfo(user_account) {\\n        if (session.has(user_account)) session.del(user_account);\\n    }\\n\\n    getIndexForDepositKey(account_name, input_coin_type, output_coin_type) {\\n        let args = [\\n            this.current_gdex_address_cache_version_string,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        ];\\n        return args.reduce(function(previous, current) {\\n            return previous.concat(\\\"[\\\", current, \\\"]\\\");\\n        }, \\\"\\\");\\n    }\\n\\n    getCachedInputAddress(account_name, input_coin_type, output_coin_type) {\\n        const index = this.getIndexForDepositKey(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        let deposit_keys = session.get(\\\"deposit_keys\\\", {});\\n        let result = deposit_keys[index] || null;\\n        if (!result) return;\\n        if (result.address) {\\n            // cache deposit address for 1 week\\n            let cur_time = Math.floor(new Date().getTime() / 1000);\\n            if (Math.abs(result.ctime - cur_time) > this.day) {\\n                this.clearInputAddress(\\n                    account_name,\\n                    input_coin_type,\\n                    output_coin_type\\n                );\\n                return null;\\n            }\\n            return result;\\n        }\\n        return null;\\n    }\\n\\n    cacheInputAddress(\\n        account_name,\\n        input_coin_type,\\n        output_coin_type,\\n        address,\\n        memo\\n    ) {\\n        const index = this.getIndexForDepositKey(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        let deposit_keys = session.get(\\\"deposit_keys\\\", {});\\n        deposit_keys[index] = {\\n            address: address,\\n            memo: memo,\\n            ctime: Math.floor(new Date().getTime() / 1000)\\n        };\\n        session.set(\\\"deposit_keys\\\", deposit_keys);\\n    }\\n\\n    clearInputAddress(account_name, input_coin_type, output_coin_type) {\\n        const index = this.getIndexForDepositKey(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        let deposit_keys = session.get(\\\"deposit_keys\\\", null);\\n        if (!deposit_keys) return;\\n        if (!deposit_keys[index]) {\\n            // Deposit key is empty, no need to clear\\n            return;\\n        }\\n        deposit_keys[index] = {address: null, memo: null, ctime: null};\\n        session.set(\\\"deposit_keys\\\", deposit_keys);\\n    }\\n}\\n\\nexport default GdexCache;\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport utils from \\\"common/utils\\\";\\nimport BalanceComponent from \\\"components/Utility/BalanceComponent\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport AmountSelector from \\\"components/Utility/AmountSelector\\\";\\nimport AccountActions from \\\"actions/AccountActions\\\";\\nimport {validateAddress, WithdrawAddresses} from \\\"common/gdexMethods\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport {checkFeeStatusAsync, checkBalance} from \\\"common/trxHelper\\\";\\nimport {Asset, Price} from \\\"common/MarketClasses\\\";\\nimport {debounce} from \\\"lodash-es\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Button, Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass GdexWithdrawModal extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        issuer: ChainTypes.ChainAccount.isRequired,\\n        asset: ChainTypes.ChainAsset.isRequired,\\n        memo_rule: PropTypes.string.isRequired,\\n        balance: ChainTypes.ChainObject,\\n        output_supports_memos: PropTypes.bool.isRequired\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            isConfirmationModalVisible: false,\\n            withdraw_amount: this.props.amount_to_withdraw,\\n            withdraw_address: WithdrawAddresses.getLast(props.output_coin_name),\\n            withdraw_address_check_in_progress: true,\\n            withdraw_address_is_valid: null,\\n            options_is_valid: false,\\n            withdraw_address_selected: WithdrawAddresses.getLast(\\n                props.output_coin_name\\n            ),\\n            memo: \\\"\\\",\\n            withdraw_address_first: true,\\n            empty_withdraw_value: false,\\n            below_minumum_withdraw_value: false,\\n            precision_error: false,\\n            memo_error: false,\\n            memo_length_error: false,\\n            from_account: props.account,\\n            fee_asset_id: \\\"1.3.0\\\",\\n            feeStatus: {},\\n            withdraw_address_error_code: null,\\n            withdraw_address_error_message: null\\n        };\\n\\n        this._validateAddress(this.state.withdraw_address, props);\\n\\n        this._checkBalance = this._checkBalance.bind(this);\\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\\n\\n        this.showConfirmationModal = this.showConfirmationModal.bind(this);\\n        this.hideConfirmationModal = this.hideConfirmationModal.bind(this);\\n    }\\n\\n    componentWillMount() {\\n        this._updateFee();\\n        this._checkFeeStatus();\\n    }\\n\\n    componentWillUnmount() {\\n        this.unMounted = true;\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (np.output_coin_name != this.props.output_coin_name) {\\n            this.setState({\\n                withdraw_address: WithdrawAddresses.getLast(\\n                    np.output_coin_name\\n                ),\\n                withdraw_address_selected: WithdrawAddresses.getLast(\\n                    np.output_coin_name\\n                )\\n            });\\n        }\\n        if (\\n            np.account !== this.state.from_account &&\\n            np.account !== this.props.account\\n        ) {\\n            this.setState(\\n                {\\n                    from_account: np.account,\\n                    feeStatus: {},\\n                    fee_asset_id: \\\"1.3.0\\\",\\n                    feeAmount: new Asset({amount: 0})\\n                },\\n                () => {\\n                    this._updateFee();\\n                    this._checkFeeStatus();\\n                }\\n            );\\n        }\\n    }\\n\\n    showConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: true\\n        });\\n    }\\n\\n    hideConfirmationModal() {\\n        this.setState({\\n            isConfirmationModalVisible: false\\n        });\\n    }\\n\\n    _assembleMemo() {\\n        let memo_rule = this.props.memo_rule;\\n        let memo_message = \\\"\\\";\\n        try {\\n            if (memo_rule) {\\n                memo_rule.split(\\\";\\\").forEach(item => {\\n                    switch (item[0]) {\\n                        case \\\"C\\\":\\n                            memo_message += item.slice(2);\\n                            break;\\n                        case \\\"D\\\":\\n                            memo_message += this.state.withdraw_address;\\n                            break;\\n                        case \\\"B\\\":\\n                            memo_message += item.slice(2);\\n                            break;\\n                        case \\\"S\\\":\\n                            memo_message += this.state.memo;\\n                            break;\\n                    }\\n                });\\n                if (memo_message.length > 100) {\\n                    this.setState({memo_length_error: true});\\n                    return null;\\n                } else {\\n                    this.setState({memo_length_error: false});\\n                }\\n                this.setState({memo_error: false});\\n                return memo_message;\\n            }\\n        } catch (err) {\\n            console.log(err);\\n        }\\n        this.setState({memo_error: true});\\n        return null;\\n    }\\n\\n    _updateFee(state = this.state) {\\n        let {fee_asset_id, from_account} = state;\\n        const {fee_asset_types} = this._getAvailableAssets(state);\\n        if (\\n            fee_asset_types.length === 1 &&\\n            fee_asset_types[0] !== fee_asset_id\\n        ) {\\n            fee_asset_id = fee_asset_types[0];\\n        }\\n\\n        if (!from_account) return null;\\n        checkFeeStatusAsync({\\n            accountID: from_account.get(\\\"id\\\"),\\n            feeID: fee_asset_id,\\n            options: [\\\"price_per_kbyte\\\"],\\n            data: {\\n                type: \\\"memo\\\",\\n                content: this._assembleMemo()\\n            }\\n        }).then(({fee, hasBalance, hasPoolBalance}) => {\\n            if (this.unMounted) return;\\n\\n            this.setState(\\n                {\\n                    feeAmount: fee,\\n                    hasBalance,\\n                    hasPoolBalance,\\n                    error: !hasBalance || !hasPoolBalance\\n                },\\n                this._checkBalance\\n            );\\n        });\\n    }\\n\\n    _checkFeeStatus(state = this.state) {\\n        let account = state.from_account;\\n        if (!account) return;\\n\\n        const {fee_asset_types: assets} = this._getAvailableAssets(state);\\n        // const assets = [\\\"1.3.0\\\", this.props.asset.get(\\\"id\\\")];\\n        let feeStatus = {};\\n        let p = [];\\n        assets.forEach(a => {\\n            p.push(\\n                checkFeeStatusAsync({\\n                    accountID: account.get(\\\"id\\\"),\\n                    feeID: a,\\n                    options: [\\\"price_per_kbyte\\\"],\\n                    data: {\\n                        type: \\\"memo\\\",\\n                        content:\\n                            this.props.output_coin_name +\\n                            \\\":\\\" +\\n                            state.withdraw_address +\\n                            (state.memo ? \\\":\\\" + state.memo : \\\"\\\")\\n                    }\\n                })\\n            );\\n        });\\n        Promise.all(p)\\n            .then(status => {\\n                assets.forEach((a, idx) => {\\n                    feeStatus[a] = status[idx];\\n                });\\n                if (!utils.are_equal_shallow(state.feeStatus, feeStatus)) {\\n                    this.setState({\\n                        feeStatus\\n                    });\\n                }\\n                this._checkBalance();\\n            })\\n            .catch(err => {\\n                console.error(err);\\n            });\\n    }\\n\\n    onMemoChanged(e) {\\n        this.setState({memo: e.target.value}, this._updateFee);\\n    }\\n\\n    onWithdrawAmountChange({amount}) {\\n        this.setState(\\n            {\\n                withdraw_amount: amount,\\n                empty_withdraw_value:\\n                    amount !== undefined && !parseFloat(amount)\\n            },\\n            this._checkBalance\\n        );\\n    }\\n\\n    onSelectChanged(index) {\\n        let new_withdraw_address = WithdrawAddresses.get(\\n            this.props.output_coin_symbol\\n        )[index];\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_coin_symbol,\\n            address: new_withdraw_address\\n        });\\n\\n        this.setState(\\n            {\\n                withdraw_address_selected: new_withdraw_address,\\n                options_is_valid: false,\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    onWithdrawAddressChanged(e) {\\n        let new_withdraw_address = e.target.value.trim();\\n\\n        this.setState(\\n            {\\n                withdraw_address: new_withdraw_address,\\n                withdraw_address_check_in_progress: true,\\n                withdraw_address_selected: new_withdraw_address,\\n                withdraw_address_is_valid: null\\n            },\\n            this._updateFee\\n        );\\n        this._validateAddress(new_withdraw_address);\\n    }\\n\\n    _validateAddress(new_withdraw_address, props = this.props) {\\n        validateAddress({\\n            assetId: props.output_coin_id,\\n            assetName: props.output_coin_name,\\n            address: new_withdraw_address\\n        })\\n            .then(data => {\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: data.valid,\\n                    withdraw_address_error_code: null,\\n                    withdraw_address_error_message: null\\n                });\\n            })\\n            .catch(err => {\\n                let message = err.message;\\n                let code = err.code;\\n                if (code < 0) message = \\\"System error: please try again later\\\";\\n                this.setState({\\n                    withdraw_address_check_in_progress: false,\\n                    withdraw_address_is_valid: null,\\n                    withdraw_address_error_code: err.code,\\n                    withdraw_address_error_message: message\\n                });\\n            });\\n    }\\n    _checkPrecision() {\\n        let {withdraw_amount} = this.state;\\n        let {output_coin_precision} = this.props;\\n        if (output_coin_precision === \\\"undefined\\\") return;\\n        if (typeof withdraw_amount !== \\\"string\\\")\\n            withdraw_amount = withdraw_amount.toString();\\n        withdraw_amount = withdraw_amount.trim();\\n        if (withdraw_amount.indexOf(\\\".\\\") === -1) {\\n            this.setState({precision_error: false});\\n            return;\\n        }\\n        if (\\n            withdraw_amount.length - withdraw_amount.indexOf(\\\".\\\") - 1 >\\n            output_coin_precision\\n        ) {\\n            this.setState({precision_error: true});\\n        } else {\\n            this.setState({precision_error: false});\\n        }\\n    }\\n\\n    _checkBalance() {\\n        let {feeAmount, withdraw_amount} = this.state;\\n        let {asset, balance, minWithdrawAmount} = this.props;\\n        if (!balance) {\\n            // does not own any asset\\n            this.setState({balanceError: true});\\n            return;\\n        }\\n        if (!feeAmount) return;\\n        const hasBalance = checkBalance(\\n            withdraw_amount,\\n            asset,\\n            feeAmount,\\n            balance\\n        );\\n        // balance is zero\\n        if (hasBalance === null) return;\\n        this.setState({balanceError: !hasBalance});\\n\\n        if (typeof withdraw_amount === \\\"string\\\")\\n            withdraw_amount = parseFloat(\\n                String.prototype.replace.call(withdraw_amount, /,/g, \\\"\\\")\\n            );\\n        if (typeof minWithdrawAmount === \\\"string\\\")\\n            minWithdrawAmount = parseFloat(\\n                String.prototype.replace.call(minWithdrawAmount, /,/g, \\\"\\\")\\n            );\\n        if (withdraw_amount < minWithdrawAmount) {\\n            this.setState({below_minumum_withdraw_value: true});\\n            return;\\n        } else {\\n            this.setState({below_minumum_withdraw_value: false});\\n        }\\n        this._checkPrecision();\\n        return hasBalance;\\n    }\\n\\n    onSubmit() {\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address &&\\n                this.state.withdraw_address.length) &&\\n            this.state.withdraw_amount !== null\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                this.showConfirmationModal();\\n            } else if (parseFloat(this.state.withdraw_amount) > 0) {\\n                if (!WithdrawAddresses.has(this.props.output_coin_symbol)) {\\n                    let withdrawals = [];\\n                    withdrawals.push(this.state.withdraw_address);\\n                    WithdrawAddresses.set({\\n                        wallet: this.props.output_coin_symbol,\\n                        addresses: withdrawals\\n                    });\\n                } else {\\n                    let withdrawals = WithdrawAddresses.get(\\n                        this.props.output_coin_symbol\\n                    );\\n                    if (\\n                        withdrawals.indexOf(this.state.withdraw_address) == -1\\n                    ) {\\n                        withdrawals.push(this.state.withdraw_address);\\n                        WithdrawAddresses.set({\\n                            wallet: this.props.output_coin_symbol,\\n                            addresses: withdrawals\\n                        });\\n                    }\\n                }\\n                WithdrawAddresses.setLast({\\n                    wallet: this.props.output_coin_symbol,\\n                    address: this.state.withdraw_address\\n                });\\n                let asset = this.props.asset;\\n\\n                const {feeAmount} = this.state;\\n\\n                let amount = parseFloat(\\n                    String.prototype.replace.call(\\n                        this.state.withdraw_amount,\\n                        /,/g,\\n                        \\\"\\\"\\n                    )\\n                );\\n\\n                let sendAmount = new Asset({\\n                    asset_id: asset.get(\\\"id\\\"),\\n                    precision: asset.get(\\\"precision\\\"),\\n                    real: amount\\n                });\\n                AccountActions.transfer(\\n                    this.props.account.get(\\\"id\\\"),\\n                    this.props.issuer.get(\\\"id\\\"),\\n                    sendAmount.getAmount(),\\n                    asset.get(\\\"id\\\"),\\n                    this._assembleMemo(),\\n                    null,\\n                    feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n                );\\n\\n                this.setState({\\n                    empty_withdraw_value: false\\n                });\\n            } else {\\n                this.setState({\\n                    empty_withdraw_value: true\\n                });\\n            }\\n        }\\n    }\\n\\n    onSubmitConfirmation() {\\n        this.hideConfirmationModal();\\n\\n        if (!WithdrawAddresses.has(this.props.output_coin_symbol)) {\\n            let withdrawals = [];\\n            withdrawals.push(this.state.withdraw_address);\\n            WithdrawAddresses.set({\\n                wallet: this.props.output_coin_symbol,\\n                addresses: withdrawals\\n            });\\n        } else {\\n            let withdrawals = WithdrawAddresses.get(\\n                this.props.output_coin_symbol\\n            );\\n            if (withdrawals.indexOf(this.state.withdraw_address) == -1) {\\n                withdrawals.push(this.state.withdraw_address);\\n                WithdrawAddresses.set({\\n                    wallet: this.props.output_coin_symbol,\\n                    addresses: withdrawals\\n                });\\n            }\\n        }\\n        WithdrawAddresses.setLast({\\n            wallet: this.props.output_coin_symbol,\\n            address: this.state.withdraw_address\\n        });\\n        let asset = this.props.asset;\\n        let precision = utils.get_asset_precision(asset.get(\\\"precision\\\"));\\n        let amount = String.prototype.replace.call(\\n            this.state.withdraw_amount,\\n            /,/g,\\n            \\\"\\\"\\n        );\\n\\n        const {feeAmount} = this.state;\\n\\n        AccountActions.transfer(\\n            this.props.account.get(\\\"id\\\"),\\n            this.props.issuer.get(\\\"id\\\"),\\n            parseInt(amount * precision, 10),\\n            asset.get(\\\"id\\\"),\\n            this._assembleMemo(),\\n            null,\\n            feeAmount ? feeAmount.asset_id : \\\"1.3.0\\\"\\n        );\\n    }\\n\\n    onDropDownList() {\\n        if (WithdrawAddresses.has(this.props.output_coin_symbol)) {\\n            if (this.state.options_is_valid === false) {\\n                this.setState({options_is_valid: true});\\n                this.setState({withdraw_address_first: false});\\n            }\\n\\n            if (this.state.options_is_valid === true) {\\n                this.setState({options_is_valid: false});\\n            }\\n        }\\n    }\\n\\n    getWithdrawModalId() {\\n        return \\\"confirmation\\\";\\n    }\\n\\n    onAccountBalance() {\\n        const {feeAmount} = this.state;\\n        if (\\n            Object.keys(this.props.account.get(\\\"balances\\\").toJS()).includes(\\n                this.props.asset.get(\\\"id\\\")\\n            )\\n        ) {\\n            let total = new Asset({\\n                amount: this.props.balance.get(\\\"balance\\\"),\\n                asset_id: this.props.asset.get(\\\"id\\\"),\\n                precision: this.props.asset.get(\\\"precision\\\")\\n            });\\n\\n            // Subtract the fee if it is using the same asset\\n            if (total.asset_id === feeAmount.asset_id) {\\n                total.minus(feeAmount);\\n            }\\n\\n            this.setState(\\n                {\\n                    withdraw_amount: total.getAmount({real: true}),\\n                    empty_withdraw_value: false\\n                },\\n                this._checkBalance\\n            );\\n        }\\n    }\\n\\n    setNestedRef(ref) {\\n        this.nestedRef = ref;\\n    }\\n\\n    onFeeChanged({asset}) {\\n        this.setState(\\n            {\\n                fee_asset_id: asset.get(\\\"id\\\")\\n            },\\n            this._updateFee\\n        );\\n    }\\n\\n    _getAvailableAssets(state = this.state) {\\n        const {from_account, feeStatus} = state;\\n        function hasFeePoolBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasPoolBalance;\\n        }\\n\\n        function hasBalance(id) {\\n            if (feeStatus[id] === undefined) return true;\\n            return feeStatus[id] && feeStatus[id].hasBalance;\\n        }\\n\\n        let fee_asset_types = [];\\n        if (!(from_account && from_account.get(\\\"balances\\\"))) {\\n            return {fee_asset_types};\\n        }\\n        let account_balances = state.from_account.get(\\\"balances\\\").toJS();\\n        fee_asset_types = Object.keys(account_balances).sort(utils.sortID);\\n        for (let key in account_balances) {\\n            let asset = ChainStore.getObject(key);\\n            let balanceObject = ChainStore.getObject(account_balances[key]);\\n            if (balanceObject && balanceObject.get(\\\"balance\\\") === 0) {\\n                if (fee_asset_types.indexOf(key) !== -1) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n\\n            if (asset) {\\n                // Remove any assets that do not have valid core exchange rates\\n                let priceIsValid = false,\\n                    p;\\n                try {\\n                    p = new Price({\\n                        base: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"base\\\"\\n                                ])\\n                                .toJS()\\n                        ),\\n                        quote: new Asset(\\n                            asset\\n                                .getIn([\\n                                    \\\"options\\\",\\n                                    \\\"core_exchange_rate\\\",\\n                                    \\\"quote\\\"\\n                                ])\\n                                .toJS()\\n                        )\\n                    });\\n                    priceIsValid = p.isValid();\\n                } catch (err) {\\n                    priceIsValid = false;\\n                }\\n\\n                if (asset.get(\\\"id\\\") !== \\\"1.3.0\\\" && !priceIsValid) {\\n                    fee_asset_types.splice(fee_asset_types.indexOf(key), 1);\\n                }\\n            }\\n        }\\n\\n        fee_asset_types = fee_asset_types.filter(a => {\\n            return hasFeePoolBalance(a) && hasBalance(a);\\n        });\\n\\n        return {fee_asset_types};\\n    }\\n\\n    render() {\\n        let {withdraw_address_selected, memo} = this.state;\\n        let storedAddress = WithdrawAddresses.get(\\n            this.props.output_coin_symbol\\n        );\\n        let balance = null;\\n\\n        let account_balances = this.props.account.get(\\\"balances\\\").toJS();\\n        let asset_types = Object.keys(account_balances);\\n\\n        let withdrawModalId = this.getWithdrawModalId();\\n        let invalid_address_message = null;\\n        let options = null;\\n        let confirmation = null;\\n\\n        if (this.state.options_is_valid) {\\n            options = (\\n                <div\\n                    className={\\n                        !storedAddress.length\\n                            ? \\\"blocktrades-disabled-options\\\"\\n                            : \\\"blocktrades-options\\\"\\n                    }\\n                >\\n                    {storedAddress.map(function(name, index) {\\n                        return (\\n                            <a\\n                                key={index}\\n                                onClick={this.onSelectChanged.bind(this, index)}\\n                            >\\n                                {name}\\n                            </a>\\n                        );\\n                    }, this)}\\n                </div>\\n            );\\n        }\\n\\n        if (\\n            !this.state.withdraw_address_check_in_progress &&\\n            (this.state.withdraw_address && this.state.withdraw_address.length)\\n        ) {\\n            if (!this.state.withdraw_address_is_valid) {\\n                if (this.state.withdraw_address_error_code) {\\n                    invalid_address_message = (\\n                        <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                            {this.state.withdraw_address_error_code}:{\\\" \\\"}\\n                            {this.state.withdraw_address_error_message}\\n                        </div>\\n                    );\\n                } else {\\n                    invalid_address_message = (\\n                        <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                            <Translate\\n                                content=\\\"gateway.valid_address\\\"\\n                                coin_type={this.props.output_coin_name}\\n                            />\\n                        </div>\\n                    );\\n                }\\n\\n                confirmation = (\\n                    <Modal\\n                        closable={false}\\n                        footer={[\\n                            <Button\\n                                key=\\\"submit\\\"\\n                                type=\\\"primary\\\"\\n                                onClick={this.onSubmitConfirmation.bind(this)}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.accept\\\"\\n                                )}\\n                            </Button>,\\n                            <Button\\n                                key=\\\"cancel\\\"\\n                                style={{marginLeft: \\\"8px\\\"}}\\n                                onClick={this.hideConfirmationModal}\\n                            >\\n                                {counterpart.translate(\\n                                    \\\"modal.confirmation.cancel\\\"\\n                                )}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isConfirmationModalVisible}\\n                        onCancel={this.hideConfirmationModal}\\n                    >\\n                        <label>\\n                            <Translate content=\\\"modal.confirmation.title\\\" />\\n                        </label>\\n                    </Modal>\\n                );\\n            }\\n        }\\n\\n        let tabIndex = 1;\\n        let withdraw_memo = null;\\n\\n        if (this.props.output_supports_memos) {\\n            withdraw_memo = (\\n                <div className=\\\"content-block\\\">\\n                    <label>\\n                        <Translate component=\\\"span\\\" content=\\\"transfer.memo\\\" />\\n                    </label>\\n                    <textarea\\n                        rows=\\\"3\\\"\\n                        value={memo}\\n                        tabIndex={tabIndex++}\\n                        onChange={this.onMemoChanged.bind(this)}\\n                    />\\n                    {this.state.memo_error ? (\\n                        <p\\n                            className=\\\"has-error no-margin\\\"\\n                            style={{paddingTop: 10}}\\n                        >\\n                            <Translate content=\\\"transfer.errors.memo_error\\\" />\\n                        </p>\\n                    ) : null}\\n                    {this.state.memo_length_error ? (\\n                        <p\\n                            className=\\\"has-error no-margin\\\"\\n                            style={{paddingTop: 10}}\\n                        >\\n                            <Translate content=\\\"transfer.errors.memo_length_error\\\" />\\n                        </p>\\n                    ) : null}\\n                </div>\\n            );\\n        }\\n\\n        // Estimate fee VARIABLES\\n        let {fee_asset_types} = this._getAvailableAssets();\\n\\n        if (asset_types.length > 0) {\\n            let current_asset_id = this.props.asset.get(\\\"id\\\");\\n            if (current_asset_id) {\\n                let current = account_balances[current_asset_id];\\n                balance = (\\n                    <span\\n                        style={{\\n                            borderBottom: \\\"#A09F9F 1px dotted\\\",\\n                            cursor: \\\"pointer\\\"\\n                        }}\\n                    >\\n                        <Translate\\n                            component=\\\"span\\\"\\n                            content=\\\"transfer.available\\\"\\n                        />\\n                        &nbsp;:&nbsp;\\n                        <span\\n                            className=\\\"set-cursor\\\"\\n                            onClick={this.onAccountBalance.bind(this)}\\n                        >\\n                            {current ? (\\n                                <BalanceComponent\\n                                    balance={account_balances[current_asset_id]}\\n                                />\\n                            ) : (\\n                                0\\n                            )}\\n                        </span>\\n                    </span>\\n                );\\n            } else balance = \\\"No funds\\\";\\n        } else {\\n            balance = \\\"No funds\\\";\\n        }\\n\\n        const disableSubmit =\\n            this.state.below_minumum_withdraw_value ||\\n            this.state.memo_error ||\\n            this.state.memo_length_error ||\\n            this.state.error ||\\n            this.state.balanceError ||\\n            this.state.precision_error;\\n\\n        return (\\n            <form\\n                className=\\\"grid-block vertical full-width-content\\\"\\n                style={{paddingTop: \\\"0\\\"}}\\n            >\\n                <div className=\\\"grid-container\\\">\\n                    {/* Withdraw amount */}\\n                    <div className=\\\"content-block\\\">\\n                        <AmountSelector\\n                            label=\\\"modal.withdraw.amount\\\"\\n                            amount={this.state.withdraw_amount}\\n                            asset={this.props.asset.get(\\\"id\\\")}\\n                            assets={[this.props.asset.get(\\\"id\\\")]}\\n                            placeholder=\\\"0.0\\\"\\n                            onChange={this.onWithdrawAmountChange.bind(this)}\\n                            display_balance={balance}\\n                        />\\n                        {this.state.empty_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.valid\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.balanceError ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate content=\\\"transfer.errors.insufficient\\\" />\\n                            </p>\\n                        ) : null}\\n                        {this.state.below_minumum_withdraw_value ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate\\n                                    content=\\\"transfer.errors.minimum_amount\\\"\\n                                    amount={this.props.minWithdrawAmount}\\n                                    symbol={this.props.asset.get(\\\"symbol\\\")}\\n                                />\\n                            </p>\\n                        ) : null}\\n                        {this.state.precision_error ? (\\n                            <p\\n                                className=\\\"has-error no-margin\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                <Translate\\n                                    content=\\\"transfer.errors.precision\\\"\\n                                    precision={this.props.output_coin_precision}\\n                                />\\n                            </p>\\n                        ) : null}\\n                    </div>\\n\\n                    {/* Fee selection */}\\n                    {this.state.feeAmount ? (\\n                        <div className=\\\"content-block gate_fee\\\">\\n                            <AmountSelector\\n                                refCallback={this.setNestedRef.bind(this)}\\n                                label=\\\"transfer.fee\\\"\\n                                disabled={true}\\n                                amount={this.state.feeAmount.getAmount({\\n                                    real: true\\n                                })}\\n                                onChange={this.onFeeChanged.bind(this)}\\n                                asset={this.state.feeAmount.asset_id}\\n                                assets={fee_asset_types}\\n                                tabIndex={tabIndex++}\\n                            />\\n                            {!this.state.hasBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noFeeBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                            {!this.state.hasPoolBalance ? (\\n                                <p\\n                                    className=\\\"has-error no-margin\\\"\\n                                    style={{paddingTop: 10}}\\n                                >\\n                                    <Translate content=\\\"transfer.errors.noPoolBalance\\\" />\\n                                </p>\\n                            ) : null}\\n                        </div>\\n                    ) : null}\\n\\n                    {/* Gate fee */}\\n                    {this.props.gateFee ? (\\n                        <div\\n                            className=\\\"amount-selector right-selector\\\"\\n                            style={{paddingBottom: 20}}\\n                        >\\n                            <label className=\\\"left-label\\\">\\n                                <Translate content=\\\"gateway.fee\\\" />\\n                            </label>\\n                            <div className=\\\"inline-label input-wrapper\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    disabled\\n                                    value={this.props.gateFee}\\n                                />\\n\\n                                <div className=\\\"form-label select floating-dropdown\\\">\\n                                    <div className=\\\"dropdown-wrapper inactive\\\">\\n                                        <div>\\n                                            {this.props.output_coin_symbol}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    ) : null}\\n                    <div className=\\\"content-block\\\">\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                component=\\\"span\\\"\\n                                content=\\\"modal.withdraw.address\\\"\\n                            />\\n                        </label>\\n                        <div className=\\\"blocktrades-select-dropdown\\\">\\n                            <div className=\\\"inline-label\\\">\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    value={withdraw_address_selected}\\n                                    tabIndex=\\\"4\\\"\\n                                    onChange={this.onWithdrawAddressChanged.bind(\\n                                        this\\n                                    )}\\n                                    autoComplete=\\\"off\\\"\\n                                />\\n                                <span onClick={this.onDropDownList.bind(this)}>\\n                                    &#9660;\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <div className=\\\"blocktrades-position-options\\\">\\n                            {options}\\n                        </div>\\n                        {invalid_address_message}\\n                    </div>\\n\\n                    {/* Memo input */}\\n                    {withdraw_memo}\\n\\n                    {/* Withdraw/Cancel buttons */}\\n                    <div>\\n                        <Button\\n                            type=\\\"primary\\\"\\n                            disabled={disableSubmit}\\n                            onClick={this.onSubmit.bind(this)}\\n                        >\\n                            {counterpart.translate(\\\"modal.withdraw.submit\\\")}\\n                        </Button>\\n\\n                        <Button\\n                            onClick={this.props.hideModal}\\n                            style={{marginLeft: \\\"8px\\\"}}\\n                        >\\n                            {counterpart.translate(\\\"account.perm.cancel\\\")}\\n                        </Button>\\n                    </div>\\n                    {confirmation}\\n                </div>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(GdexWithdrawModal);\\n\",\"import React from \\\"react\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport AssetName from \\\"../../Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"../../Utility/LinkToAccountById\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport ChainTypes from \\\"../../Utility/ChainTypes\\\";\\nimport GdexCache from \\\"../../../lib/common/GdexCache\\\";\\nimport {requestDepositAddress} from \\\"../../../lib/common/gdexMethods\\\";\\nimport QRCode from \\\"qrcode.react\\\";\\nimport GdexWithdrawModal from \\\"./GdexWithdrawModal\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport {Modal, Button} from \\\"bitshares-ui-style-guide\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass GdexGatewayInfo extends React.Component {\\n    static propTypes = {\\n        // inner_asset_name:               PropTypes.string,\\n        // outer_asset_name:           PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        gateway: PropTypes.string,\\n        btsCoin: ChainTypes.ChainAsset,\\n        memo_rule: PropTypes.string\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    constructor() {\\n        super();\\n        this.state = {\\n            isQrModalVisible: false,\\n            isModalVisible: false,\\n            receive_address: null,\\n            isAvailable: true,\\n            qrcode: \\\"\\\"\\n        };\\n        this.deposit_address_cache = new GdexCache();\\n        this._copy = this._copy.bind(this);\\n        document.addEventListener(\\\"copy\\\", this._copy);\\n\\n        this.showQrModal = this.showQrModal.bind(this);\\n        this.hideQrModal = this.hideQrModal.bind(this);\\n\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    showQrModal() {\\n        this.setState({\\n            isQrModalVisible: true\\n        });\\n    }\\n\\n    hideQrModal() {\\n        this.setState({\\n            isQrModalVisible: false\\n        });\\n    }\\n\\n    getDepositAddress() {\\n        this._getDepositAddress(\\n            this.props.user_id,\\n            this.props.account.get(\\\"name\\\"),\\n            this.props.coin,\\n            this.props.action\\n        );\\n    }\\n\\n    _getDepositAddress(user_id, user_name, coin, action) {\\n        // The coin can only support withdraw sometime, no need to call get deposit address\\n        if (action != \\\"deposit\\\") return;\\n\\n        let cached_receive_address = this.deposit_address_cache.getCachedInputAddress(\\n            user_name,\\n            coin.outerSymbol,\\n            coin.innerSymbol\\n        );\\n        if (\\n            cached_receive_address &&\\n            cached_receive_address != this.state.receive_address\\n        ) {\\n            this.setState({receive_address: cached_receive_address});\\n            return;\\n        }\\n        // Get address from server side\\n        var _this = this;\\n        requestDepositAddress({\\n            btsAssetId: coin.innerAssetId,\\n            outAssetId: coin.outerAssetId,\\n            uid: user_id,\\n            userAccount: user_name\\n        })\\n            .then(data => {\\n                if (data.address && data.address.address) {\\n                    var receive_address = {\\n                        address: data.address.address,\\n                        memo: data.address.memo\\n                    };\\n                    _this.deposit_address_cache.cacheInputAddress(\\n                        user_name,\\n                        coin.outerSymbol,\\n                        coin.innerSymbol,\\n                        receive_address.address,\\n                        receive_address.memo\\n                    );\\n                    _this.setState({receive_address: receive_address});\\n                } else {\\n                    _this.setState({receive_address: null});\\n                }\\n            })\\n            .catch(err => {\\n                _this.setState({receive_address: null});\\n                console.log(err);\\n            });\\n    }\\n\\n    componentWillMount() {\\n        this.getDepositAddress();\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        if (\\n            np.user_id !== this.props.user_id ||\\n            np.action !== this.props.action ||\\n            np.coin != this.props.coin\\n        ) {\\n            this._getDepositAddress(\\n                np.user_id,\\n                np.account.get(\\\"name\\\"),\\n                np.coin,\\n                np.action\\n            );\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        document.removeEventListener(\\\"copy\\\", this._copy);\\n    }\\n\\n    getWithdrawModalId() {\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.coin.innerSymbol\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    onShowQrcode(text) {\\n        this.setState({qrcode: text}, () => {\\n            this.showQrModal();\\n        });\\n    }\\n\\n    _copy(e) {\\n        try {\\n            if (this.state.clipboardText)\\n                e.clipboardData.setData(\\\"text/plain\\\", this.state.clipboardText);\\n            else\\n                e.clipboardData.setData(\\n                    \\\"text/plain\\\",\\n                    counterpart\\n                        .translate(\\\"gateway.use_copy_button\\\")\\n                        .toUpperCase()\\n                );\\n            e.preventDefault();\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    toClipboard(clipboardText) {\\n        try {\\n            this.setState({clipboardText}, () => {\\n                document.execCommand(\\\"copy\\\");\\n            });\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    render() {\\n        let emptyRow = <div style={{display: \\\"none\\\", minHeight: 150}} />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.coin\\n        )\\n            return emptyRow;\\n        const {coin, btsCoin} = this.props;\\n        // asset is not loaded\\n        if (!btsCoin) return emptyRow;\\n        let receive_address = this.state.receive_address;\\n        let qrcode = this.state.qrcode;\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let clipboardText = \\\"\\\";\\n        let memoText = \\\"\\\";\\n        let deposit_memo_fragment = null;\\n\\n        var withdraw_memo_prefix = coin.outerSymbol + \\\":\\\";\\n        if (this.props.action === \\\"deposit\\\") {\\n            if (receive_address) {\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                clipboardText = receive_address.address;\\n                if (receive_address.memo) {\\n                    deposit_memo_fragment = <span>{receive_address.memo}</span>;\\n                    memoText = receive_address.memo;\\n                }\\n            }\\n            withdraw_memo_prefix = \\\"\\\";\\n        }\\n        let balance = null;\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        if (account_balances_object)\\n            balance = account_balances_object.toJS()[btsCoin.get(\\\"id\\\")];\\n\\n        if (this.props.action === \\\"deposit\\\") {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {coin.outerSymbol}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={coin.innerSymbol}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={coin.innerSymbol}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={coin.outerSymbol}\\n                            />\\n                            :\\n                        </label>\\n                        <p style={{color: \\\"red\\\"}}>\\n                            <Translate\\n                                content=\\\"gateway.deposit_warning\\\"\\n                                asset={coin.outerSymbol}\\n                            />\\n                        </p>\\n                        {memoText ? (\\n                            <p style={{color: \\\"red\\\"}}>\\n                                <Translate\\n                                    content=\\\"gateway.deposit_warning_memo\\\"\\n                                    asset={coin.outerSymbol}\\n                                />\\n                            </p>\\n                        ) : null}\\n                        <div>\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.address\\\" />\\n                                            :\\n                                        </td>\\n                                        <td>{deposit_address_fragment}</td>\\n                                        <td>\\n                                            <div\\n                                                style={{width: \\\"125px\\\"}}\\n                                                className=\\\"button\\\"\\n                                                onClick={this.toClipboard.bind(\\n                                                    this,\\n                                                    clipboardText\\n                                                )}\\n                                            >\\n                                                <Translate content=\\\"transfer.copy_address\\\" />\\n                                            </div>\\n                                        </td>\\n                                        <td>\\n                                            <div\\n                                                className=\\\"button\\\"\\n                                                onClick={this.onShowQrcode.bind(\\n                                                    this,\\n                                                    clipboardText\\n                                                )}\\n                                            >\\n                                                <Translate content=\\\"modal.qrcode.label\\\" />\\n                                            </div>\\n                                        </td>\\n                                    </tr>\\n                                    {memoText ? (\\n                                        <tr>\\n                                            <td>\\n                                                <Translate content=\\\"gateway.memo\\\" />\\n                                                :\\n                                            </td>\\n                                            <td>{memoText}</td>\\n                                            <td>\\n                                                <div\\n                                                    style={{width: \\\"125px\\\"}}\\n                                                    className=\\\"button\\\"\\n                                                    onClick={this.toClipboard.bind(\\n                                                        this,\\n                                                        memoText\\n                                                    )}\\n                                                >\\n                                                    <Translate content=\\\"transfer.copy_memo\\\" />\\n                                                </div>\\n                                            </td>\\n                                            <td>\\n                                                <div\\n                                                    className=\\\"button\\\"\\n                                                    onClick={this.onShowQrcode.bind(\\n                                                        this,\\n                                                        memoText\\n                                                    )}\\n                                                >\\n                                                    <Translate content=\\\"modal.qrcode.label\\\" />\\n                                                </div>\\n                                            </td>\\n                                        </tr>\\n                                    ) : null}\\n                                </tbody>\\n                            </table>\\n                            <Modal\\n                                footer={[\\n                                    <Button\\n                                        key=\\\"close\\\"\\n                                        type=\\\"primary\\\"\\n                                        onClick={this.hideQrModal}\\n                                    >\\n                                        {counterpart.translate(\\\"modal.close\\\")}\\n                                    </Button>\\n                                ]}\\n                                visible={this.state.isQrModalVisible}\\n                                onCancel={this.hideQrModal}\\n                            >\\n                                {/*<div className=\\\"gdex-gateway\\\">abc</div>*/}\\n                                <DepositQrCodeModal text={qrcode} />\\n                            </Modal>\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={coin.innerSymbol}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {coin.outerSymbol}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={coin.innerSymbol}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: coin.outerAssetName,\\n                            symbol: coin.outerSymbol\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                    >\\n                        <GdexWithdrawModal\\n                            hideModal={this.hideModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={coin.innerSymbol}\\n                            output_coin_name={coin.outerAssetName}\\n                            gateFee={coin.gateFee}\\n                            output_coin_id={coin.outerAssetId}\\n                            output_coin_symbol={coin.outerSymbol}\\n                            output_supports_memos={coin.needMemo == 1}\\n                            minWithdrawAmount={coin.minTransactionAmount}\\n                            output_coin_precision={coin.relationPrecision}\\n                            memo_prefix={withdraw_memo_prefix}\\n                            memo_rule={this.props.memo_rule}\\n                            modal_id={withdraw_modal_id}\\n                            balance={balance}\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nclass DepositQrCodeModal extends React.Component {\\n    constructor(props) {\\n        super(props);\\n    }\\n\\n    render() {\\n        let text = this.props.text;\\n        return (\\n            <div className=\\\"small-12\\\" style={{textAlign: \\\"center\\\"}}>\\n                <QRCode size={200} value={text} />\\n                <br />\\n                <br />\\n                <label style={{textTransform: \\\"none\\\"}}>{text}</label>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(GdexGatewayInfo);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport utils from \\\"common/utils\\\";\\nimport Icon from \\\"../../Icon/Icon\\\";\\nimport {getTransactionRecordList} from \\\"../../../lib/common/gdexMethods\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nconst DEPOSIT_STATUS = {\\n    1: \\\"confirming\\\",\\n    2: \\\"waiting\\\",\\n    3: \\\"transfering\\\",\\n    4: \\\"success\\\",\\n    5: \\\"fail\\\"\\n};\\nconst WITHDRAW_STATUS = {\\n    1: \\\"confirming\\\",\\n    2: \\\"auditing\\\",\\n    3: \\\"audited\\\",\\n    4: \\\"refused\\\",\\n    5: \\\"transfering\\\",\\n    6: \\\"success\\\",\\n    7: \\\"fail\\\"\\n};\\n\\nclass GdexHistory extends React.Component {\\n    static propTypes = {\\n        compactView: PropTypes.bool,\\n        maxHeight: PropTypes.number,\\n        fullHeight: PropTypes.bool,\\n        userId: PropTypes.number,\\n        assetId: PropTypes.number,\\n        assetName: PropTypes.string,\\n        recordType: PropTypes.number,\\n        userAccount: PropTypes.string\\n    };\\n\\n    static defaultProps = {\\n        maxHeight: 500,\\n        fullHeight: false,\\n        pageSize: 10\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            headerHeight: 85,\\n            pageNum: 0,\\n            totalNum: 0,\\n            nextPageEnabled: false,\\n            allData: {},\\n            historyStatusType:\\n                props.recordType == 1\\n                    ? \\\"deposit_history_status\\\"\\n                    : \\\"withdraw_history_status\\\",\\n            historyStatusValue:\\n                props.recordType == 1 ? DEPOSIT_STATUS : WITHDRAW_STATUS\\n        };\\n    }\\n\\n    componentWillMount() {\\n        this.getTransactionHistory();\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (\\n            this.props.recordType != nextProps.recordType ||\\n            this.props.assetId != nextProps.assetId ||\\n            this.props.assetName != nextProps.assetName ||\\n            this.props.userId != nextProps.userId ||\\n            this.props.userAccount != nextProps.userAccount\\n        ) {\\n            this._getTransactionHistory(\\n                nextProps.userId,\\n                nextProps.assetId,\\n                nextProps.assetName,\\n                nextProps.recordType,\\n                nextProps.userAccount,\\n                true\\n            );\\n        }\\n    }\\n\\n    shouldComponentUpdate(nextProps, nextState) {\\n        if (!utils.are_equal_shallow(this.props.userId, nextProps.userId)) {\\n            return true;\\n        }\\n        if (this.state.allData != nextState.allData) {\\n            return true;\\n        }\\n        if (this.state.pageNum != nextState.pageNum) return true;\\n        return false;\\n    }\\n\\n    _getTransactionHistory(\\n        userId,\\n        assetId,\\n        assetName,\\n        recordType,\\n        userAccount,\\n        force = false\\n    ) {\\n        let pageSize = this.props.pageSize;\\n        let {\\n            pageNum,\\n            allData,\\n            historyStatusValue,\\n            historyStatusType\\n        } = this.state;\\n        if (force == true) {\\n            pageNum = 1;\\n            allData = {};\\n            historyStatusType =\\n                recordType == 1\\n                    ? \\\"deposit_history_status\\\"\\n                    : \\\"withdraw_history_status\\\";\\n            historyStatusValue =\\n                recordType == 1 ? DEPOSIT_STATUS : WITHDRAW_STATUS;\\n        } else {\\n            pageNum += 1;\\n        }\\n\\n        var _this = this;\\n        getTransactionRecordList(\\n            {\\n                uid: userId,\\n                assetId: assetId,\\n                pageNum: pageNum,\\n                pageSize: pageSize,\\n                userAccount: userAccount\\n            },\\n            recordType\\n        )\\n            .then(res => {\\n                if (res.records) {\\n                    res.records.forEach(item => {\\n                        allData[item.txid] = {\\n                            txid: item.txid,\\n                            amount: item.amount,\\n                            time: item.ctime,\\n                            unixtime: Date.parse(item.ctime),\\n                            status: [\\n                                \\\"gateway\\\",\\n                                historyStatusType,\\n                                historyStatusValue[item.status]\\n                            ].join(\\\".\\\"),\\n                            failReason: item.failReason,\\n                            assetName: assetName\\n                        };\\n                    });\\n\\n                    _this.setState({\\n                        totalNum: res.total,\\n                        nextPageEnabled: res.total > pageNum * pageSize,\\n                        allData: allData,\\n                        pageNum: pageNum,\\n                        historyStatusType: historyStatusType,\\n                        historyStatusValue: historyStatusValue\\n                    });\\n                }\\n            })\\n            .catch(() => {\\n                _this.setState({\\n                    totalNum: 0,\\n                    nextPageEnabled: false,\\n                    allData: {},\\n                    pageNum: 0\\n                });\\n            });\\n    }\\n    getTransactionHistory() {\\n        let {userId, assetId, assetName, recordType, userAccount} = this.props;\\n        this._getTransactionHistory(\\n            userId,\\n            assetId,\\n            assetName,\\n            recordType,\\n            userAccount,\\n            false\\n        );\\n    }\\n\\n    render() {\\n        let {assetName, compactView, style, maxHeight} = this.props;\\n        let {headerHeight, allData} = this.state;\\n\\n        let history = [];\\n        Object.keys(allData).forEach(item => {\\n            history.push(allData[item]);\\n        });\\n        history.sort((a, b) => {\\n            return b.unixtime - a.unixtime;\\n        });\\n        style = style ? style : {};\\n        style.width = \\\"100%\\\";\\n        style.height = \\\"100%\\\";\\n\\n        if (allData.length == 0) {\\n        }\\n        let display_history = history.length\\n            ? history.map(o => {\\n                  return (\\n                      <tr key={o.txid}>\\n                          <td\\n                              style={{textAlign: \\\"left\\\"}}\\n                              className=\\\"left-td column-hide-tiny\\\"\\n                          >\\n                              <Translate content={o.status} />\\n                          </td>\\n                          <td\\n                              style={{\\n                                  padding: \\\"8px 5px\\\",\\n                                  textAlign: \\\"left\\\",\\n                                  fontSize: 14\\n                              }}\\n                          >\\n                              <Translate\\n                                  content=\\\"gateway.transaction_history_info\\\"\\n                                  amount={o.amount}\\n                                  assetName={assetName}\\n                                  txid={o.txid}\\n                              />\\n                          </td>\\n                          <td>{o.time}</td>\\n                      </tr>\\n                  );\\n              })\\n            : [\\n                  <tr key=\\\"no_recent\\\">\\n                      <td colSpan={compactView ? \\\"2\\\" : \\\"3\\\"}>\\n                          <Translate content=\\\"operation.no_recent\\\" />\\n                      </td>\\n                  </tr>\\n              ];\\n        display_history.push(\\n            <tr className=\\\"total-value\\\" key=\\\"total_value\\\">\\n                <td className=\\\"column-hide-tiny\\\" />\\n                <td />\\n                <td style={{textAlign: \\\"center\\\"}}>\\n                    &nbsp;{this.state.nextPageEnabled ? (\\n                        <a onClick={this.getTransactionHistory.bind(this)}>\\n                            <Icon\\n                                name=\\\"chevron-down\\\"\\n                                title=\\\"icons.chevron_down.transactions\\\"\\n                                className=\\\"icon-14px\\\"\\n                            />\\n                        </a>\\n                    ) : null}\\n                </td>\\n            </tr>\\n        );\\n\\n        return (\\n            <div className=\\\"recent-transactions no-overflow\\\" style={style}>\\n                <div className=\\\"generic-bordered-box\\\">\\n                    {this.props.dashboard ? null : (\\n                        <div ref=\\\"header\\\">\\n                            <div className=\\\"block-content-header\\\">\\n                                <span>\\n                                    {this.props.title ? (\\n                                        this.props.title\\n                                    ) : (\\n                                        <Translate content=\\\"account.recent\\\" />\\n                                    )}\\n                                </span>\\n                            </div>\\n                        </div>\\n                    )}\\n\\n                    <div\\n                        className=\\\"box-content grid-block no-margin\\\"\\n                        style={\\n                            !this.props.fullHeight\\n                                ? {\\n                                      maxHeight: maxHeight - headerHeight\\n                                  }\\n                                : null\\n                        }\\n                        ref=\\\"transactions\\\"\\n                    >\\n                        <table\\n                            className={\\n                                \\\"table\\\" +\\n                                (compactView ? \\\" compact\\\" : \\\"\\\") +\\n                                (this.props.dashboard ? \\\" dashboard-table\\\" : \\\"\\\")\\n                            }\\n                        >\\n                            <thead>\\n                                <tr key=\\\"history_header\\\">\\n                                    <th>\\n                                        <Translate content=\\\"gateway.status\\\" />\\n                                    </th>\\n                                    <th>\\n                                        <Translate content=\\\"gateway.info\\\" />\\n                                    </th>\\n                                    <th>\\n                                        <Translate content=\\\"gateway.time\\\" />\\n                                    </th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>{display_history}</tbody>\\n                        </table>\\n                        {/*<buton name=\\\"下一页\\\"  />*/}\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default GdexHistory;\\n\",\"import React from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"../../../stores/SettingsStore\\\";\\nimport Ps from \\\"perfect-scrollbar\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass GdexAgreementModal extends React.Component {\\n    static propTypes = {\\n        locale: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            locale: props.settings.get(\\\"locale\\\", \\\"en\\\")\\n        };\\n    }\\n\\n    componentDidMount() {\\n        // console.log(this.refs);\\n        if (this.refs.agreement) {\\n            let item = this.refs.agreement;\\n            // console.log(item);\\n            Ps.initialize(item);\\n        }\\n    }\\n\\n    componentDidUpdate() {\\n        // console.log(this.refs);\\n        if (this.refs.agreement) {\\n            let item = this.refs.agreement;\\n            // console.log(item);\\n            Ps.update(item);\\n        }\\n    }\\n\\n    _getAgreement(locale) {\\n        switch (locale) {\\n            case \\\"zh\\\":\\n            case \\\"cn\\\":\\n                return (\\n                    <div\\n                        className=\\\"container\\\"\\n                        ref=\\\"agreement\\\"\\n                        style={{\\n                            height: \\\"500px\\\",\\n                            overflow: \\\"auto\\\",\\n                            position: \\\"relative\\\"\\n                        }}\\n                    >\\n                        <h2 style={{textAlign: \\\"center\\\"}}>用户服务协议</h2>\\n                        <p>\\n                            OBSIDIAN TECHNOLOGY CO. PTE. LTD.\\n                            是一家根据新加坡共和国法律成立的公司，GDEX是由该公司运营的比特股网关(以下称“GDEX”或“本网关”)，主访问入口为https://www.gdex.io，GDEX是一个在比特股平台为用户提供数字资产充提服务（以下称“该服务”或“服务”）的平台。为了本协议表述之方便，公司和该网关在本协议中合称使用“我们”或其他第一人称称呼。使用该服务的自然人或其他主体均为本网关的用户，本协议为表述之便利，以下使用“您”或其他第二人称。我们和您在本协议中合称为“双方”，我们或您单称为“一方”。\\n                        </p>\\n                        <p>重要提示：</p>\\n                        <p>我们在此特别提醒您：</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1. 数字资产本身不由任何金融机构或公司或本网关发行；\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            2.\\n                            数字资产市场是全新的、未经确认的，而且可能不会增长；\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.\\n                            数字资产主要由投机者大量使用，零售和商业市场使用相对较少，数字资产交易存在极高风险，其全天不间断交易，没有涨跌限制，价格容易受庄家、全球政府政策的影响而大幅波动；\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            4.\\n                            因各国法律、法规和规范性文件的制定或者修改，数字资产交易随时可能被暂停或被禁止。\\n                        </p>\\n                        <p>\\n                            数字资产交易有极高风险，并不适合绝大部分人士。您了解和理解此投资有可能导致部分损失或全部损失，所以您应该以能承受的损失程度来决定投资的金额。您了解和理解数字资产会产生衍生风险，所以如有任何疑问，建议先寻求理财顾问的协助。此外，除了上述提及过的风险以外，还会有未能预测的风险存在。您应慎重考虑并用清晰的判断能力去评估自己的财政状况及上述各项风险而作出任何买卖数字资产的决定，并承担由此产生的全部损失，我们对此不承担任何责任。\\n                        </p>\\n                        <p>敬告您：</p>\\n                        <p>\\n                            1.您了解比特股是基于区块链的去中心化交易平台，其基础账号服务和交易撮合服务都由比特股平台提供。亦有其它机构或个人在比特股平台上发行资产及／或提供服务。您了解本网关仅作为您向比特股平台充提数字资产的工具。本网关只对自身发行的交易代币资产（名称以GDEX.为前缀）负责，不对比特股上其它机构或个人发行的资产负责，本网关不参与您的任何交易，您应自行谨慎判断确定相关数字资产及/或信息的真实性、合法性和有效性，并自行承担因此产生的责任与损失。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            2.\\n                            比特股去中心化交易系统存有风险，包括但不限于软件，硬件和互联网链结的失败，用户账户系统的安全风险等。由于我们不能控制互联网以及比特股平台的可靠性和可用性，我们不会对上述风险造成的用户损失承担任何责任。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.\\n                            禁止使用本网关从事洗钱、走私、商业贿赂等一切非法交易活动，若发现此类事件，本网关将采取各种可使用之手段，包括但不限于中止提供服务，通知相关权力机关等，我们不承担由此产生的所有责任并保留向相关人士追究责任的权利。\\n                        </p>\\n                        <p>一、总则</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.1\\n                            您在使用本网关提供的服务之前，应仔细阅读本协议，如有不理解之处或其他必要，请咨询专业律师。如您不同意本协议及/或随时对其的修改，请您立即停止使用本网关提供的服务。使用本网关的任何服务即表示您已了解并完全同意本协议各项内容，包括本网关对本协议随时所做的任何修改。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2\\n                            使用本网关提供的服务和功能，您将被视为已阅读，理解并：\\n                        </p>\\n                        <p> 1.2.1 接受本协议所有条款及条件的约束。</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2.2\\n                            您确认您已年满21周岁或根据不同的可适用的法律规定的具有可订立合同的法定年龄，并有充分的能力接受这些条款，并订立交易，使用本网关进行数字资产交易。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2.3\\n                            您保证交易中涉及到的属于您的数字资产均为合法取得并所有。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2.4\\n                            您同意您为您自身的交易或非交易行为承担全部责任和任何收益或亏损。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2.5\\n                            您同意遵守任何有关法律的规定，就税务目的而言，包括报告任何交易利润。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            1.2.6\\n                            本协议只是就您与我们之间达成的权利义务关系进行约束，而并不涉及本网关用户之间或其他网关和您之间因数字资产交易而产生的法律关系及法律纠纷。\\n                        </p>\\n                        <p>二、协议修订</p>\\n                        <p>\\n                            我们保留不时修订本协议、并以公示的方式进行公告、不再单独通知您的权利，变更后的协议会在本协议首页标注变更时间，一经在公布，立即自动生效。您应不时浏览及关注本协议的更新变更时间及更新内容，如您不同意相关变更，应当立即停止使用本网关服务；您继续使用本网关服务，即表示您接受并同意经修订的协议的约束。\\n                        </p>\\n                        <p>三、服务</p>\\n                        <p>\\n                            本网关只为您提供向比特股平台冲入和提取数字资产的服务，本网关并不作为买家或卖家参与买卖数字资产行为本身；本网关不提供任何国家法定货币充入和提取的相关服务。\\n                        </p>\\n                        <p> 3.1 服务内容</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.1.1\\n                            您有权通过本网关向比特股平台冲入或提取数字资产。\\n                        </p>\\n                        <p> 3.1.2 本网关承诺为您提供的其他服务。</p>\\n                        <p> 3.2.服务规则</p>\\n                        <p> 您承诺遵守下列本网关服务规则：</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.2.1\\n                            您应当遵守法律法规、规章、及政策要求的规定，保证账户中所有数字资产来源的合法性，不得在本网关或利用本网关服务从事非法或其他损害本网关或第三方权益的活动，如发送或接收任何违法、违规、侵犯他人权益的信息，发送或接收传销材料或存在其他危害的信息或言论，未经本网关授权使用或伪造本网关电子邮件题头信息等。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.2.2\\n                            您在使用本网关服务之前应充分了解比特股账号的使用常识，做好相应账号的备份及密码保存工作，对于比特股账户安全问题造成的损失，本网关不承担任何责任。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.2.3\\n                            您在使用本网关提供的服务过程中，所产生的应纳税赋，以及一切硬件、软件、服务及其它方面的费用，均由您独自承担。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            3.2.4\\n                            您应当遵守本网关不时发布和更新的本协议以及其他服务条款和操作规则，有权随时终止使用本网关提供的服务。\\n                        </p>\\n                        <p>四、本网关的权利和义务</p>\\n                        <p>\\n                            4.1\\n                            本网关有权在发现本网关上显示的任何信息存在明显错误时，对信息予以更正。\\n                        </p>\\n                        <p>\\n                            4.2\\n                            本网关保留随时修改、中止或终止本网关服务的权利，本网关行使修改或中止服务的权利不需事先告知您；本网关终止本网关一项或多项服务的，终止自本网关在网关上发布终止公告之日生效。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            4.3\\n                            本网关应当采取必要的技术手段和管理措施保障本网关的正常运行。\\n                        </p>\\n                        <p>五、赔偿</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            5.1\\n                            在任何情况下，我们对您的直接损害的赔偿责任均不会超过您从使用本网关服务产生的为期三（\\n                            3）个月的总费用。\\n                        </p>\\n                        <p>六、寻求禁令救济的权利</p>\\n                        <p>\\n                            我们和您均承认普通法对违约或可能违约情况的救济措施是可能是不足以弥补我们遭受的全部损失的，故非违约方有权在违约或可能违约情况下寻求禁令救济以及普通法或衡平法允许的其他所有的补救措施。\\n                        </p>\\n                        <p>七、责任限制与免责</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.1\\n                            您了解并同意，在任何情况下，我们不就以下各事项承担责任：\\n                        </p>\\n                        <p> 7.1.1 收入的损失；</p>\\n                        <p> 7.1.2 交易利润或合同损失；</p>\\n                        <p> 7.1.3 业务中断</p>\\n                        <p> 7.1.4 预期可节省的货币的损失；</p>\\n                        <p> 7.1.5 信息的损失；</p>\\n                        <p> 7.1.6 机会、商誉或声誉的损失；</p>\\n                        <p> 7.1.7 数据的损坏或损失；</p>\\n                        <p> 7.1.8 购买替代产品或服务的成本；</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.1.9\\n                            任何由于侵权（包括过失）、违约或其他任何原因产生的间接的、特殊的或附带性的损失或损害，不论这种损失或损害是否可以为我们合理预见；不论我们是否事先被告知存在此种损\\n                            失或损害的可能性。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.2\\n                            您了解并同意，我们不对因下述任一情况而导致您的任何损害赔偿承担责任：\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.2.1\\n                            我们有合理的理由认为您的具体交易事项可能存在重大违法或违约情形。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.2.2\\n                            我们有合理的理由认为您在本网关的行为涉嫌违法或不当。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.2.3\\n                            通过本网关服务购买或获取任何数据、信息或进行交易等行为或替代行为产生的费用及损失。\\n                        </p>\\n                        <p> 7.2.4 您对本网关服务的误解。</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.2.5\\n                            任何非因我们的原因而引起的与本网关提供的服务有关的其它损失。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.3\\n                            我们对由于信息网络设备维护、信息网络连接故障、电脑、通讯或其他系统的故障、电力故障、天气原因、意外事故、罢工、劳动争议、暴乱、起义、骚乱、生产力或生产资料不足、火灾、洪水、风暴、爆炸、战争、银行或其他合作方原因、数字资产市场崩溃、政府行为、\\n                            司法或行政机关的命令、其他不在我们可控范围内或我们无能力控制的行为或第三方的原因而造成的不能服务或延迟服务，以及造成的您的损失，我们不承担任何责任。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.4\\n                            我们不能保证本网关包含的全部信息、程序、文本等完全安全，不受任何病毒、木马等恶意程序的干扰和破坏，故您登陆、使用本网关任何服务或下载及使用该下载的任何程序、信息、数据等均是您个人的决定并自行承担风险及可能产生的损失。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.5\\n                            我们对本网关中链接的任何第三方网关的任何信息、产品及业务及其他任何形式的不属于我们的主体的内容等不做任何保证和承诺，您如果使用第三方网关提供的任何服务、信息及产品等均为您个人决定且承担由此产生的一切责任。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.6\\n                            我们对于您使用本网关服务不做任何明示或暗示的保证，包括但不限于本网关提供服务的适用性、没有错误或疏漏、持续性、准确性、可靠性、适用于某一特定用途。同时，我们也不对本网关提供的服务所涉及的技术及信息的有效性、准确性、正确性、可靠性、质量、稳定、完整和及时性作出任何承诺和保证。是否登陆或使用本网关提供的服务是您个人的决定且自行承担风险及可能产生的损失。我们对于数字资产的市场、价值及价格等不做任何明示或暗示的保证，您理解并了解数字资产市场是不稳定的，价格和价值随时会大幅波动或崩盘，交易数字资产是您个人的自由选择及决定且自行承担风险及可能产生的损失。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.7\\n                            本协议中规定的我们的保证和承诺是由我们就本协议和本网关提供的服务的唯一保证和陈述，并取代任何其他途径和方式产生的保证和承诺，无论是书面的或口头的，明示的或暗示的。所有这些保证和陈述仅仅代表我们自身的承诺和保证，并不保证任何第三方遵守本协议中的保证和承诺。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.8\\n                            我们并不放弃本协议中未提及的在法律适用的最大范围内我们享有的限制、免除或抵销我们损害赔偿责任的任何权利。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            7.9\\n                            使用本网关服务即表示认可我们按照本协议中规定的规则进行的任何操作，产生的任何风险均由您承担。\\n                        </p>\\n                        <p>八、知识产权</p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            8.1\\n                            本网关所包含的全部智力成果包括但不限于网关标志、数据库、网关设计、文字和图表、软件、照片、录像、音乐、声音及其前述组合，软件编译、相关源代码和软件\\n                            (包括小应用程序和脚本)\\n                            的知识产权权利均归本网关所有。您不得为商业目的复制、更改、拷贝、发送或使用前述任何材料或内容。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            8.2 本网关名称中包含的所有权利\\n                            (包括但不限于商誉和商标、标志) 均归公司所有。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            8.3\\n                            您接受本协议即视为您主动将其在本网关发表的任何形式的信息的著作权，\\n                            包括但不限于：复制权、发行权、出租权、展览权、表演权、放映权、广播权、信息网络传播权、摄制权、改编权、翻译权、汇编权\\n                            以及应当由著作权人享有的其他可转让权利无偿独家转让给本网关所有，本网关有权利就任何主体侵权单独提起诉讼并获得全部赔偿。\\n                            本协议效力及于您在本网关发布的任何受著作权法保护的作品内容，\\n                            无论该内容形成于本协议签订前还是本协议签订后。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            8.4\\n                            您在使用本网关服务过程中不得非法使用或处分本网关或他人的知识产权权利。您不得将已发表于本网关的信息以任何形式发布或授权其它网关（及媒体）使用。\\n                        </p>\\n                        <p>\\n                            {\\\" \\\"}\\n                            8.5\\n                            您使用本网关提供的任何服务均不视为我们向您转让任何知识产权。\\n                        </p>\\n                        <p>九、可分割性</p>\\n                        <p>\\n                            如本协议中的任何条款被任何有管辖权的法院认定为不可执行的，无效的或非法的，并不影响本协议的其余条款的效力。\\n                        </p>\\n                        <p>十、非代理关系</p>\\n                        <p>\\n                            本协议中的任何规定均不可被认为创造了、暗示了或以其他方式将我们视为您的代理人、受托人或其他代表人，本协议有其他规定的除外。\\n                        </p>\\n                        <p>十一、弃权</p>\\n                        <p>\\n                            我们或您任何一方对追究本协议约定的违约责任或其他责任的弃权并不能认定或解释为对其他违约责任的弃权；未行使任何权利或救济不得以任何方式被解释为对该等权利或救济的放弃。\\n                        </p>\\n                        <p>十二、标题</p>\\n                        <p>\\n                            所有标题仅供协议表述方便，并不用于扩大或限制该协议条款的内容或范围。\\n                        </p>\\n                        <p>十三、适用法律</p>\\n                        <p>\\n                            本协议全部内容均为根据新加坡共和国法律订立的合同，其成立、解释、内容及执行均适用新加坡共和国相关法律规定；任何因或与本协议约定的服务有关而产生的索赔或诉讼，都应依照新加坡共和国的法律进行管辖并加以解释和执行。为避免疑义，这一条款明确适用于任何针对我们的侵权索赔。任何针对我们或者是和我们有关的索赔或诉讼的管辖法院或诉讼地均在新加坡共和国。您无条件地获得在新加坡共和国法院进行诉讼和上诉的排他性的管辖权。您也无条件地同意与本协议款有关的争议或问题或产生的任何索赔请求和诉讼的发生地或法院均排他性得在新加坡共和国。不方便法院的原则不适用于根据本服务条款的选择的法院。\\n                        </p>\\n                        <p>十四、协议的生效和解释</p>\\n                        <p>\\n                            14.1\\n                            本协议于您点击本网关注册页面的同意注册并完成注册程序、获得本网关账号和密码时生效，对本网关和您均具有约束力。\\n                        </p>\\n                        <p>14.2 本协议的最终解释权归本网关所有。</p>\\n                    </div>\\n                );\\n                break;\\n            default:\\n                return (\\n                    <div\\n                        className=\\\"container\\\"\\n                        ref=\\\"agreement\\\"\\n                        style={{\\n                            height: \\\"500px\\\",\\n                            overflow: \\\"auto\\\",\\n                            position: \\\"relative\\\"\\n                        }}\\n                    >\\n                        <h2 style={{textAlign: \\\"center\\\"}}>Service Agreement</h2>\\n                        <p>\\n                            OBSIDIAN TECHNOLOGY CO. PTE. LTD. (hereinafter\\n                            referred to as the 'Company') is a company\\n                            incorporated under the laws in Singapore Republic,\\n                            GDEX (hereinafter referred to as 'GDEX' or 'the\\n                            Gateway') is a cryptocurrency gateway to Bitshares\\n                            which is operated by the company. The main access\\n                            point for GDEX is https://gdex.io, GDEX is a gateway\\n                            that provide cryptocurrency deposit and withdraw\\n                            service (hereinafter referred to as 'the Service')\\n                            to/from Bitshares. For the convenience of wording in\\n                            this Agreement, the Company and the Gateway are\\n                            referred to as 'We' or other applicable forms of\\n                            first person pronouns in this Agreement. All natural\\n                            persons or other subjects who use the Service shall\\n                            be users of the Gateway. For the convenience of\\n                            wording in this Agreement, the users are referred to\\n                            as 'You' or any other applicable forms of the\\n                            second-person pronouns. For the convenience of\\n                            wording in this Agreement, you and us are\\n                            collectively referred to as 'both parties', and\\n                            individually as 'one party'.\\n                        </p>\\n                        <p>Important reminder:</p>\\n                        <p>We hereby remind you that:</p>\\n                        <p>\\n                            1. The digital assets themselves are not offered by\\n                            any financial institution, corporation or the\\n                            Gateway;\\n                        </p>\\n                        <p>\\n                            2. The digital asset market is new and unconfirmed,\\n                            and will not necessarily expand;\\n                        </p>\\n                        <p>\\n                            3. Digital assets are primarily used by speculators,\\n                            and are used relatively less on retail and\\n                            commercial markets; digital asset transactions are\\n                            highly risky, due to the fact that they are traded\\n                            throughout 24-hour a day without limits on the rise\\n                            or fall in price, and market makers and global\\n                            government policies may cause major fluctuations in\\n                            their prices;\\n                        </p>\\n                        <p>\\n                            4. Digital asset transactions may be suspended or\\n                            prohibited at any time due to the enactment or\\n                            modification of national laws, regulations and\\n                            regulatory documents. Digital assets trading is\\n                            highly risky and therefore not suitable for the vast\\n                            majority of people. You acknowledge and understand\\n                            that investment in digital assets may result in\\n                            partial or total loss of your investment and\\n                            therefore you are advised to decide the amount of\\n                            your investment on the basis of your loss-bearing\\n                            capacity. You acknowledge and understand that\\n                            digital assets may generate derivative risks.\\n                            Therefore, if you have any doubt, you are advised to\\n                            seek assistance from a financial adviser first.\\n                            Furthermore, aside from the above-mentioned risks,\\n                            there may also be unpredictable risks. Therefore,\\n                            you are advised to carefully consider and use clear\\n                            judgment to assess your financial position and the\\n                            abovementioned risks before making any decisions on\\n                            buying and selling digital assets; any and all\\n                            losses arising therefrom will be borne by you and we\\n                            shall not be held liable in any manner whatsoever.\\n                        </p>\\n                        <p>\\n                            5. You understand that Bitshares is a decentralized\\n                            exchange based on blockchain, the basic account\\n                            service and the trade processing service are\\n                            provided by Bitshares, there are also other\\n                            institutions or single persons that issue assets\\n                            and/or provide service on Bitshares. You understand\\n                            that the Gateway is only used for you to\\n                            deposit/withdraw cryptocurrency to/from Bitshares.\\n                            The Gateway only undertake the due obligations for\\n                            the availability of own issued assets (with 'GDEX.'\\n                            as prefix of the name), do not undertake the due\\n                            obligations for the account service and the trade\\n                            processing service provided by Bitshares, do not\\n                            undertake the due obligations for availability of\\n                            the assets issued by other institutions or single\\n                            persons.{\\\" \\\"}\\n                        </p>\\n                        <p>\\n                            6. There are risk in both Internet and Bitshares,\\n                            include but not limit to failure for software,\\n                            hardware to connect to Internet, security risk for\\n                            Bitshares accounting system. As the availability and\\n                            reliability of Internet and Bitshares are not under\\n                            our control, we do not undertake obligations for the\\n                            loss caused by the risks mentioned above.\\n                        </p>\\n                        <p>\\n                            7.it is prohibited to use the Gateway for money\\n                            laundering, smuggling, bribery，if any user are\\n                            found relevant to these actions, the Gateway will\\n                            take various actions, include but not limited to\\n                            terminating the Service to the user, informing\\n                            relevant authority.\\n                        </p>\\n                    </div>\\n                );\\n        }\\n    }\\n    render() {\\n        let {locale} = this.props;\\n        let msg = this._getAgreement(locale);\\n        return msg;\\n    }\\n}\\n\\nexport default connect(GdexAgreementModal, {\\n    listenTo() {\\n        return [SettingsStore];\\n    },\\n    getProps() {\\n        return {\\n            settings: SettingsStore.getState().settings\\n        };\\n    }\\n});\\n\",\"import React from \\\"react\\\";\\nimport {fetchAssets, fetchUserInfo} from \\\"common/gdexMethods\\\";\\nimport LoadingIndicator from \\\"../../LoadingIndicator\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport GdexGatewayInfo from \\\"./GdexGatewayInfo\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport GdexCache from \\\"../../../lib/common/GdexCache\\\";\\nimport GdexHistory from \\\"./GdexHistory\\\";\\nimport GdexAgreementModal from \\\"./GdexAgreementModal\\\";\\nimport {Modal, Button} from \\\"bitshares-ui-style-guide\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport {\\n    fetchWithdrawRule,\\n    userAgreement\\n} from \\\"../../../lib/common/gdexMethods\\\";\\nvar NodeRSA = require(\\\"node-rsa\\\");\\nlet gdexPublicKey = new NodeRSA(\\n    \\\"-----BEGIN PUBLIC KEY-----\\\\n\\\" +\\n        \\\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCH+QtHPKcWxdL25xL4pCuu16tKh6yPx/TFnd/8\\\\n\\\" +\\n        \\\"cSt2TC+sPuYsD0h/sy4VKNxhBb7F7U/TLXjMxNcSfPVPjPM3X2LvOlmU9LOEcJGrmlmOOiyO/kws\\\\n\\\" +\\n        \\\"yKKOhR4UyZ1NghhfHjuyDBj6V8fCL+xBZTJWsh/X61Z0wLCwOzXcQCsNJwIDAQAB\\\\n\\\" +\\n        \\\"-----END PUBLIC KEY-----\\\"\\n);\\n\\nclass GdexGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n        const action = props.viewSettings.get(\\n            `${props.provider}Action`,\\n            \\\"deposit\\\"\\n        );\\n\\n        this.state = {\\n            isAgreementVisible: false,\\n            coins: null,\\n            activeCoinInfo: this._getActiveCoinInfo(props, {action}),\\n            action,\\n            down: false,\\n            isAvailable: true,\\n            user_info: null,\\n            isAgree: false,\\n            agreeChecked: true,\\n            agreeNotice: false,\\n            locale: props.viewSettings.get(\\\"locale\\\"),\\n            intermediate: null,\\n            memo_rule: null\\n        };\\n        this.user_info_cache = new GdexCache();\\n\\n        this.showAgreement = this.showAgreement.bind(this);\\n        this.hideAgreement = this.hideAgreement.bind(this);\\n    }\\n\\n    showAgreement() {\\n        this.setState({\\n            isAgreementVisible: true\\n        });\\n    }\\n\\n    hideAgreement() {\\n        this.setState({\\n            isAgreementVisible: false\\n        });\\n    }\\n\\n    _getActiveCoinInfo(props, state) {\\n        let cachedCoinName = props.viewSettings.get(\\n            `activeCoin_${props.provider}_${state.action}`,\\n            null\\n        );\\n        let cachedCoinId = props.viewSettings.get(\\n            `activeCoinId_${props.provider}`,\\n            null\\n        );\\n        let firstTimeCoinName = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoinName = \\\"BTC\\\";\\n        } else {\\n            firstTimeCoinName = \\\"GDEX.BTC\\\";\\n        }\\n        let firstTimeCoinId = 1002;\\n        let activeCoinName = cachedCoinName\\n            ? cachedCoinName\\n            : firstTimeCoinName;\\n        let activeCoinId = cachedCoinId ? cachedCoinId : firstTimeCoinId;\\n        this._getWithdrawRule(activeCoinId);\\n        return {name: activeCoinName, id: activeCoinId};\\n    }\\n\\n    _transformCoin(data) {\\n        var result = [];\\n        try {\\n            data.filter(asset => {\\n                return asset.status != 0;\\n            }).forEach(asset => {\\n                let coin = {};\\n                if (asset.type == 1) {\\n                    // inner asset\\n                    coin.innerAssetId = asset.assetId;\\n                    coin.innerAssetName = asset.assetName;\\n                    coin.innerSymbol = asset.assetSymbol;\\n                    coin.outerAssetId = asset.relationId;\\n                    coin.outerAssetName = asset.relationSymbol;\\n                    coin.outerSymbol = asset.relationSymbol;\\n                    coin.status = asset.withdrawStatus;\\n                    coin.gateFee = asset.withdrawFees;\\n                    coin.needMemo = asset.needMemo;\\n                    coin.minTransactionAmount = asset.minWithdrawAmount;\\n                    coin.type = asset.type;\\n                    coin.relationPrecision = asset.relationPrecision;\\n                } else if (asset.type == 2) {\\n                    // outer asset\\n                    coin.innerAssetId = asset.relationId;\\n                    coin.innerAssetName = asset.relationSymbol;\\n                    coin.innerSymbol = asset.relationSymbol;\\n                    coin.outerAssetId = asset.assetId;\\n                    coin.outerAssetName = asset.assetName;\\n                    coin.outerSymbol = asset.assetSymbol;\\n                    coin.status = asset.depositStatus;\\n                    coin.gateFee = asset.depositFees;\\n                    coin.needMemo = asset.needMemo;\\n                    coin.minTransactionAmount = asset.minDepositAmount;\\n                    coin.type = asset.type;\\n                    coin.relationPrecision = asset.relationPrecision;\\n                } else {\\n                    coin = null;\\n                }\\n                if (coin) result.push(coin);\\n            });\\n        } catch (err) {\\n            console.log(\\\"Transform coin failed: \\\", err);\\n        }\\n        return result;\\n    }\\n\\n    _getUserInfo(userName = null, isAgree = null) {\\n        if (!userName) userName = this.props.account.get(\\\"name\\\");\\n        if (!isAgree) isAgree = this.state.isAgree;\\n        //User must agree to the agreement\\n        if (!isAgree) return;\\n\\n        var result = fetchUserInfo({userAccount: userName, isAgree: isAgree});\\n        let _this = this;\\n        result.then(function(res) {\\n            var user = res.user;\\n            _this.setState({\\n                isAgree: true,\\n                user_info: {user_id: user.uid, status: user.status}\\n            });\\n            if (user.status == 0 && user.agreeAgreement) {\\n                _this.user_info_cache.cacheUserInfo(\\n                    userName,\\n                    user.uid,\\n                    user.status\\n                );\\n            } else {\\n                _this.user_info_cache.delUserInfo(userName);\\n            }\\n        });\\n        result.catch(err => {\\n            console.log(\\\"Exception in fetching user info: \\\" + err);\\n        });\\n    }\\n\\n    _getCoins() {\\n        var result = fetchAssets({userAccount: this.props.account.get(\\\"name\\\")});\\n\\n        let _this = this;\\n        result.then(\\n            function(data) {\\n                let trans_data = _this._transformCoin(data.assets);\\n                _this.setState({isAvailable: true, coins: trans_data});\\n            },\\n            function(errMsg) {\\n                console.log(\\\"fail\\\" + errMsg);\\n            }\\n        );\\n        result.catch(err => {\\n            console.log(err);\\n            _this.setState({isAvailable: false});\\n        });\\n    }\\n\\n    _checkIsAgree(userName = null) {\\n        if (!userName) userName = this.props.account.get(\\\"name\\\");\\n        var user_info = this.user_info_cache.getUserInfo(userName);\\n        if (user_info) {\\n            this.setState({user_info: user_info, isAgree: true});\\n            return;\\n        }\\n        var result = userAgreement({userAccount: userName});\\n        let _this = this;\\n        result.then(\\n            function(data) {\\n                if (data.agree) {\\n                    _this.setState({isAgree: true});\\n                    _this._getUserInfo(userName, true);\\n                } else {\\n                    _this.setState({isAgree: false});\\n                }\\n            },\\n            function(errMsg) {\\n                console.log(\\\"fail\\\" + errMsg);\\n            }\\n        );\\n        result.catch(err => {\\n            console.log(err);\\n            _this.setState({isAvailable: false});\\n        });\\n    }\\n\\n    componentWillMount() {\\n        this._checkIsAgree();\\n        this._getCoins();\\n    }\\n\\n    _getWithdrawAssetId(assetName) {\\n        let assetType = 1;\\n        let assetSymbol = \\\"innerSymbol\\\";\\n        if (this.state.action == \\\"deposit\\\") {\\n            assetType = 2;\\n            assetSymbol = \\\"outerSymbol\\\";\\n        }\\n        let assetId = this.state.coins.filter(coin => {\\n            return coin.type == assetType && coin[assetSymbol] == assetName;\\n        })[0].innerAssetId;\\n        return assetId;\\n    }\\n\\n    onSelectCoin(e) {\\n        let activeCoinInfo = this.state.activeCoinInfo;\\n        activeCoinInfo.name = e.target.value;\\n        let assetId = this._getWithdrawAssetId(e.target.value);\\n        activeCoinInfo.id = assetId;\\n        this.setState({\\n            activeCoinInfo: activeCoinInfo\\n        });\\n        this._getWithdrawRule(assetId);\\n        let setting = {};\\n        setting[`activeCoin_${this.props.provider}_${this.state.action}`] =\\n            e.target.value;\\n        setting[`activeCoinId_${this.props.provider}`] = assetId;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    _getWithdrawRule(assetId) {\\n        var result = fetchWithdrawRule({assetId: assetId});\\n        let _this = this;\\n        result.then(\\n            function(data) {\\n                var intermediate = gdexPublicKey.decryptPublic(\\n                    data.transferToAccount,\\n                    \\\"utf-8\\\"\\n                );\\n                _this.setState({\\n                    intermediate: intermediate,\\n                    memo_rule: data.memoRule\\n                });\\n            },\\n            function(errMsg) {\\n                console.log(\\\"fail\\\" + errMsg);\\n                _this.setState({intermediate: null});\\n            }\\n        );\\n        result.catch(err => {\\n            console.log(err);\\n            _this.setState({intermediate: null});\\n        });\\n    }\\n    changeAction(type) {\\n        let activeCoinInfo = this._getActiveCoinInfo(this.props, {\\n            action: type\\n        });\\n        this.setState({\\n            action: type,\\n            activeCoinInfo: activeCoinInfo\\n        });\\n        SettingsActions.changeViewSetting({\\n            [`${this.props.provider}Action`]: type\\n        });\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (this.props.account != nextProps.account) {\\n            this._checkIsAgree(nextProps.account.get(\\\"name\\\"));\\n        }\\n    }\\n\\n    _updateCheck() {\\n        this.setState({agreeChecked: !this.state.agreeChecked});\\n        this.setState({agreeNotice: false});\\n    }\\n\\n    _showUserAgreement() {\\n        this.showAgreement();\\n    }\\n\\n    _registerUser() {\\n        if (this.state.agreeChecked) {\\n            this._getUserInfo(null, true);\\n        } else {\\n            this.setState({agreeNotice: true});\\n        }\\n    }\\n    render() {\\n        let {account} = this.props;\\n        let {\\n            coins,\\n            activeCoinInfo,\\n            action,\\n            isAvailable,\\n            user_info,\\n            isAgree,\\n            agreeChecked,\\n            agreeNotice,\\n            intermediate,\\n            memo_rule\\n        } = this.state;\\n        let issuer = {\\n            ticket: \\\"https://support.gdex.io/\\\",\\n            qq: \\\"602573197\\\",\\n            telgram: \\\"https://t.me/GDEXer\\\"\\n        };\\n        let supportContent = (\\n            <div>\\n                {/*<label className=\\\"left-label\\\">Support</label>*/}\\n                <br />\\n                <br />\\n                <Translate content=\\\"gateway.support_gdex\\\" />\\n                <br />\\n                <br />\\n                <p>\\n                    Help:{\\\" \\\"}\\n                    <a\\n                        href={issuer.ticket}\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                    >\\n                        {issuer.ticket}\\n                    </a>\\n                </p>\\n                <p>\\n                    QQ:{\\\" \\\"}\\n                    <a\\n                        target=\\\"_blank\\\"\\n                        href=\\\"//shang.qq.com/wpa/qunwpa?idkey=5d192c325146762cf5a9256038fed9faef4fcace21a36882854354dd1d599f11\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                    >\\n                        {issuer.qq}\\n                    </a>\\n                </p>\\n                <p>\\n                    Telegram:{\\\" \\\"}\\n                    <a\\n                        href={issuer.telgram}\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                    >\\n                        {issuer.telgram}\\n                    </a>\\n                </p>\\n            </div>\\n        );\\n        if (!isAgree) {\\n            return (\\n                <div>\\n                    <span>\\n                        <input\\n                            type=\\\"checkbox\\\"\\n                            style={{marginRight: \\\"10px\\\"}}\\n                            checked={agreeChecked}\\n                            onChange={this._updateCheck.bind(this)}\\n                        />\\n                        <Translate\\n                            className=\\\"txtlabel\\\"\\n                            content=\\\"gateway.agreement.hint\\\"\\n                        />\\n                        <a onClick={this._showUserAgreement.bind(this)}>\\n                            {\\\" \\\"}\\n                            <Translate\\n                                className=\\\"txtlabel\\\"\\n                                content=\\\"gateway.agreement.name\\\"\\n                            />\\n                        </a>\\n                    </span>\\n                    {agreeNotice ? (\\n                        <div className=\\\"has-error\\\" style={{paddingTop: 10}}>\\n                            <Translate\\n                                className=\\\"txtlabel\\\"\\n                                content=\\\"gateway.agreement.notice\\\"\\n                            />\\n                        </div>\\n                    ) : null}\\n\\n                    <div className=\\\"buttonGroup\\\">\\n                        <span\\n                            style={{marginTop: \\\"20px\\\"}}\\n                            onClick={this._registerUser.bind(this)}\\n                            className=\\\" button\\\"\\n                        >\\n                            <Translate\\n                                className=\\\"txtlabel\\\"\\n                                content=\\\"gateway.agreement.register\\\"\\n                            />\\n                        </span>\\n                    </div>\\n                    <Modal\\n                        footer={[\\n                            <Button\\n                                type=\\\"primary\\\"\\n                                key=\\\"close\\\"\\n                                onClick={this.hideAgreement}\\n                            >\\n                                {counterpart.translate(\\\"modal.close\\\")}\\n                            </Button>\\n                        ]}\\n                        visible={this.state.isAgreementVisible}\\n                        onCancel={this.hideAgreement}\\n                    >\\n                        <br />\\n                        <div className=\\\"grid-block vertical\\\">\\n                            <GdexAgreementModal\\n                                onCancel={this.hideAgreement}\\n                                locale={this.props.settings.get(\\\"locale\\\", \\\"en\\\")}\\n                            />\\n                        </div>\\n                    </Modal>\\n                    {supportContent}\\n                </div>\\n            );\\n        }\\n        if (!coins && isAvailable) {\\n            return <LoadingIndicator />;\\n        }\\n        if (!isAvailable) {\\n            return (\\n                <div>\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        var assetSymbol = null;\\n        var assetId = null;\\n        var actionType = null;\\n        if (action == \\\"deposit\\\") {\\n            assetId = \\\"outerAssetId\\\";\\n            assetSymbol = \\\"outerSymbol\\\";\\n            actionType = 2;\\n        } else {\\n            assetId = \\\"innerAssetId\\\";\\n            assetSymbol = \\\"innerSymbol\\\";\\n            actionType = 1;\\n        }\\n        coins = coins.filter(coin => {\\n            return coin.type == actionType;\\n        });\\n        let coinOptions = coins\\n            .map(coin => {\\n                return (\\n                    <option value={coin[assetSymbol]} key={coin[assetSymbol]}>\\n                        {coin[assetSymbol]}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = coins.filter(coin => {\\n            return coin[assetSymbol] == activeCoinInfo.name;\\n        })[0];\\n\\n        let infos = null;\\n        if (!coin || coin.status != 0) {\\n            infos = (\\n                <label className=\\\"left-label\\\">\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.asset_unavailable\\\"\\n                        asset={activeCoinInfo.name}\\n                        component=\\\"h4\\\"\\n                    />\\n                </label>\\n            );\\n        } else if (!user_info) {\\n            infos = (\\n                <label className=\\\"left-label\\\">\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.user_unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </label>\\n            );\\n        } else if (user_info.status != 0) {\\n            infos = (\\n                <label className=\\\"left-label\\\">\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.frozen\\\"\\n                        account={account.get(\\\"name\\\")}\\n                        component=\\\"h4\\\"\\n                    />\\n                </label>\\n            );\\n        }\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />\\n                                :{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoinInfo.name}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n                {infos ? (\\n                    infos\\n                ) : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <GdexGatewayInfo\\n                                account={account}\\n                                coin={coin}\\n                                issuer_account={intermediate}\\n                                user_id={user_info.user_id}\\n                                action={this.state.action}\\n                                gateway={\\\"gdex\\\"}\\n                                btsCoin={coin.innerSymbol}\\n                                memo_rule={memo_rule}\\n                            />\\n                        </div>\\n                        <GdexHistory\\n                            userId={user_info.user_id}\\n                            userAccount={account.get(\\\"name\\\")}\\n                            assetId={coin[assetId]}\\n                            assetName={coin[assetSymbol]}\\n                            compactView={true}\\n                            fullHeight={true}\\n                            recordType={action == \\\"deposit\\\" ? 1 : 2}\\n                            filter=\\\"transfer\\\"\\n                            title={\\n                                <Translate\\n                                    content={\\n                                        \\\"gateway.recent_\\\" + this.state.action\\n                                    }\\n                                />\\n                            }\\n                        />\\n                    </div>\\n                )}\\n\\n                {supportContent}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(\\n    GdexGateway,\\n    {\\n        listenTo() {\\n            return [SettingsStore];\\n        },\\n        getProps() {\\n            return {\\n                viewSettings: SettingsStore.getState().viewSettings,\\n                settings: SettingsStore.getState().settings\\n            };\\n        }\\n    }\\n);\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport {widechainAPIs} from \\\"api/apiConfig\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass WinexRecentTransactions extends React.Component {\\n    static propTypes = {\\n        account: PropTypes.string,\\n        action: PropTypes.string\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            trans_history: []\\n        };\\n    }\\n\\n    _history(account, action) {\\n        let url = \\\"\\\";\\n        if (action === \\\"deposit\\\") {\\n            url =\\n                widechainAPIs.BASE +\\n                widechainAPIs.DEPOSIT_HISTORY +\\n                \\\"?account=\\\" +\\n                account;\\n        } else {\\n            url =\\n                widechainAPIs.BASE +\\n                widechainAPIs.WITHDRAW_HISTORY +\\n                \\\"?account=\\\" +\\n                account;\\n        }\\n\\n        var head = {\\n            method: \\\"GET\\\",\\n            headers: new Headers({Accept: \\\"application/json\\\"}),\\n            mode: \\\"cors\\\",\\n            cache: \\\"default\\\"\\n        };\\n\\n        fetch(url, head)\\n            .then(function(res) {\\n                if (res.ok) {\\n                    return res.json();\\n                } else {\\n                    {\\n                        this.LogError(res);\\n                    }\\n                }\\n            })\\n            .then(function(json) {\\n                return json;\\n            })\\n            .then(function(datas) {\\n                return datas;\\n            })\\n            .then(e => {\\n                this.setState({\\n                    trans_history: e\\n                });\\n            });\\n    }\\n\\n    componentWillMount() {\\n        let {account, action} = this.props;\\n        this._history(account, action);\\n    }\\n\\n    componentWillUpdate(nextProps, nextState) {\\n        if (nextProps.action !== this.props.action) {\\n            this._history(nextProps.account, nextProps.action);\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    LogError(res) {\\n        console.error(\\\"服务器繁忙,请稍后重试; \\\\r\\\\nCode:\\\" + res.status);\\n    }\\n\\n    render() {\\n        let {trans_history} = this.state;\\n\\n        let account_record = [];\\n        trans_history.forEach((record, i) => {\\n            account_record.push(\\n                <tr key={i}>\\n                    <td>\\n                        <div className=\\\"blocktrades-bridge\\\">\\n                            <div className=\\\"inline-block\\\">\\n                                <div>{record.status}</div>\\n                            </div>\\n                        </div>\\n                    </td>\\n                    <td>\\n                        <div>{record.amount + record.inputCoinType}</div>\\n                    </td>\\n                    <td>\\n                        <div>\\n                            <a\\n                                href={\\n                                    \\\"https://www.cryptofresh.com/tx/\\\" +\\n                                    record.txid\\n                                }\\n                                target=\\\"_blank\\\"\\n                                rel=\\\"noopener noreferrer\\\"\\n                            >\\n                                {record.txid}\\n                            </a>\\n                        </div>\\n                    </td>\\n                    <td>{record.createDate}</td>\\n                </tr>\\n            );\\n        });\\n\\n        return (\\n            <div>\\n                <div className=\\\"block-content-header\\\">\\n                    <span>\\n                        {this.props.action ? (\\n                            <Translate\\n                                content={\\\"gateway.recent_\\\" + this.props.action}\\n                            />\\n                        ) : (\\n                            <Translate content=\\\"account.recent\\\" />\\n                        )}\\n                    </span>\\n                </div>\\n\\n                <table className=\\\"table\\\">\\n                    <thead>\\n                        {account_record.length <= 0 ? (\\n                            <tr key=\\\"no_recent\\\">\\n                                <td colSpan=\\\"2\\\">\\n                                    <Translate content=\\\"operation.no_recent\\\" />\\n                                </td>\\n                            </tr>\\n                        ) : null}\\n                        <tr>\\n                            {/*<th>Translate content=\\\"gateway.deposit\\\" /></th>*/}\\n                            <th>状态</th>\\n                            <th>\\n                                {this.props.action === \\\"deposit\\\"\\n                                    ? \\\"充值数量\\\"\\n                                    : \\\"提现数量\\\"}\\n                            </th>\\n                            <th>流水号</th>\\n                            <th>创建时间</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>{account_record}</tbody>\\n                </table>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BindToChainState(WinexRecentTransactions);\\n\",\"import counterpart from \\\"counterpart\\\";\\nimport React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport WinexWithdrawModal from \\\"components/DepositWithdraw/winex/WinexWithdrawModal\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport BlockTradesDepositAddressCache from \\\"common/BlockTradesDepositAddressCache\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport {requestDepositAddress} from \\\"common/gatewayMethods\\\";\\nimport {widechainAPIs} from \\\"api/apiConfig\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport QRCode from \\\"qrcode.react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass WinexGatewayRequest extends React.Component {\\n    static propTypes = {\\n        url: PropTypes.string,\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired,\\n        min_withdraw_amount: PropTypes.any,\\n        max_withdraw_amount: PropTypes.any,\\n        fee_type: PropTypes.string\\n    };\\n\\n    static defaultProps = {\\n        autosubscribe: false\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.deposit_address_cache = new BlockTradesDepositAddressCache();\\n\\n        let urls = {\\n            Winex: widechainAPIs.BASE\\n        };\\n\\n        this.state = {\\n            isModalVisible: false,\\n            receive_address: {},\\n            url: props.url || urls[props.gateway]\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n        this._copy = this._copy.bind(this);\\n        document.addEventListener(\\\"copy\\\", this._copy);\\n\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _copy(e) {\\n        try {\\n            e.clipboardData.setData(\\\"text/plain\\\", this.state.clipboardText);\\n            e.preventDefault();\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    _getDepositObject(props = this.props) {\\n        return {\\n            inputCoinType: props.deposit_coin_type,\\n            outputCoinType: props.receive_coin_type,\\n            outputAddress: props.account.get(\\\"name\\\"),\\n            url: this.state.url,\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    componentWillMount() {\\n        // let account_name = this.props.account.get(\\\"name\\\");\\n        // let receive_address = this.deposit_address_cache.getCachedInputAddress(this.props.gateway, account_name, this.props.deposit_coin_type, this.props.receive_coin_type);\\n        // if(!receive_address){\\n        //     receive_address.address = \\\"unknown\\\";\\n        // }\\n        // let receive_address = {address:\\\"\\\",memo:\\\"\\\"}\\n        // this.setState({receive_address});\\n    }\\n\\n    componentWillReceiveProps(np) {\\n        /* When switching accounts, reset the receive_address so a new one\\n        gets fetched/generated for the new account */\\n        if (np.account !== this.props.account) {\\n            this.setState({receive_address: {}});\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        document.removeEventListener(\\\"copy\\\", this._copy);\\n    }\\n\\n    addDepositAddress(receive_address) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        this.deposit_address_cache.cacheInputAddress(\\n            this.props.gateway,\\n            account_name,\\n            this.props.deposit_coin_type,\\n            this.props.receive_coin_type,\\n            receive_address.address,\\n            receive_address.memo\\n        );\\n        this.setState({receive_address});\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    toClipboard(clipboardText) {\\n        try {\\n            this.setState({clipboardText}, () => {\\n                document.execCommand(\\\"copy\\\");\\n            });\\n        } catch (err) {\\n            console.error(err);\\n        }\\n    }\\n\\n    render() {\\n        const isDeposit = this.props.action === \\\"deposit\\\";\\n        let emptyRow = <div style={{display: \\\"none\\\", minHeight: 150}} />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        const {gateFee} = this.props;\\n\\n        let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        // let account_balances = account_balances_object.toJS();\\n        // let asset_types = Object.keys(account_balances);\\n        // if (asset_types.length > 0) {\\n        //     let current_asset_id = this.props.receive_asset.get(\\\"id\\\");\\n        //     if( current_asset_id )\\n        //     {\\n        //         balance = (<span><Translate component=\\\"span\\\" content=\\\"transfer.available\\\"/>: <BalanceComponent balance={account_balances[current_asset_id]}/></span>);\\n        //     }\\n        // }\\n\\n        let receive_address = this.state.receive_address;\\n        if (!Object.keys(receive_address).length) {\\n            let account_name = this.props.account.get(\\\"name\\\");\\n            receive_address = this.deposit_address_cache.getCachedInputAddress(\\n                this.props.gateway,\\n                account_name,\\n                this.props.deposit_coin_type,\\n                this.props.receive_coin_type\\n            );\\n        }\\n\\n        if (!receive_address) {\\n            requestDepositAddress(this._getDepositObject());\\n            return (\\n                <div style={{margin: \\\"3rem\\\"}}>\\n                    <LoadingIndicator type=\\\"three-bounce\\\" />\\n                </div>\\n            );\\n        }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let deposit_memo = null;\\n        // if (this.props.deprecated_in_favor_of)\\n        // {\\n        //     deposit_address_fragment = <span>please use {this.props.deprecated_in_favor_of.get(\\\"symbol\\\")} instead. <span data-tip={this.props.deprecated_message} data-place=\\\"right\\\" data-html={true}><Icon name=\\\"question-circle\\\" title=\\\"icons.question_circle\\\" /></span><ReactTooltip /></span>;\\n        // }\\n        // else\\n        // {\\n        let clipboardText = \\\"\\\";\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            clipboardText =\\n                this.props.receive_coin_type +\\n                \\\":\\\" +\\n                this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{clipboardText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        if (\\n            !this.props.isAvailable ||\\n            (isDeposit &&\\n                !this.props.deposit_account &&\\n                !this.state.receive_address)\\n        ) {\\n            return (\\n                <div>\\n                    <Translate\\n                        className=\\\"txtlabel cancel\\\"\\n                        content=\\\"gateway.unavailable\\\"\\n                        component=\\\"h4\\\"\\n                    />\\n                </div>\\n            );\\n        }\\n\\n        let issuer = {\\n            name: \\\"Winex\\\",\\n            qq: \\\"623556771\\\",\\n            support: \\\"support@winex.pro\\\"\\n        };\\n        let support_block = (\\n            <div>\\n                <label className=\\\"left-label\\\">Support</label>\\n                <div>\\n                    <Translate content=\\\"winex.gateway.support_block\\\" />\\n                    <br />\\n                    <br />\\n                    <span>Mail：</span>\\n                    <a\\n                        href={\\n                            (issuer.support.indexOf(\\\"@\\\") === -1\\n                                ? \\\"\\\"\\n                                : \\\"mailto:\\\") + issuer.support\\n                        }\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                    >\\n                        {issuer.support}\\n                    </a>\\n                    <br />\\n                    <br />\\n                    <span>QQ群：</span>\\n                    <a\\n                        target=\\\"_blank\\\"\\n                        href=\\\"//shang.qq.com/wpa/qunwpa?idkey=5346c21c6da5f4990daf9b178e2c71a160e0d4cfd2bbb7bbae21eea80f44a11f\\\"\\n                        rel=\\\"noopener noreferrer\\\"\\n                    >\\n                        623556771\\n                    </a>\\n                </div>\\n            </div>\\n        );\\n        if (isDeposit) {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        {support_block}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"left-label\\\">\\n                            <p style={{color: \\\"red\\\"}}>\\n                                <Translate\\n                                    content=\\\"winex.gateway.deposit_warning\\\"\\n                                    asset={this.props.deposit_asset}\\n                                />\\n                            </p>\\n                        </label>\\n                        <div\\n                            style={{\\n                                padding: \\\"10px 0\\\",\\n                                fontSize: \\\"1.1rem\\\",\\n                                fontWeight: \\\"bold\\\"\\n                            }}\\n                        >\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            {!receive_address.address ||\\n                                            receive_address.address ===\\n                                                \\\"unknown\\\" ? null : (\\n                                                <QRCode\\n                                                    size={120}\\n                                                    value={\\n                                                        receive_address.address\\n                                                    }\\n                                                />\\n                                            )}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            {!receive_address.address ||\\n                                            receive_address.address ===\\n                                                \\\"unknown\\\" ? (\\n                                                <Translate content=\\\"winex.gateway.click_getaddress\\\" />\\n                                            ) : (\\n                                                receive_address.address\\n                                            )}\\n                                        </td>\\n                                    </tr>\\n                                    {deposit_memo ? (\\n                                        <tr>\\n                                            <td>memo: {deposit_memo}</td>\\n                                        </tr>\\n                                    ) : null}\\n                                </tbody>\\n                            </table>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <div\\n                                        className=\\\"button\\\"\\n                                        onClick={this.toClipboard.bind(\\n                                            this,\\n                                            clipboardText\\n                                        )}\\n                                    >\\n                                        Copy address\\n                                    </div>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <div\\n                                        className=\\\"button\\\"\\n                                        onClick={this.toClipboard.bind(\\n                                            this,\\n                                            memoText\\n                                        )}\\n                                    >\\n                                        Copy memo\\n                                    </div>\\n                                ) : null}\\n                                <button\\n                                    className={\\\"button\\\"}\\n                                    onClick={requestDepositAddress.bind(\\n                                        null,\\n                                        this._getDepositObject()\\n                                    )}\\n                                >\\n                                    <Translate content=\\\"winex.gateway.get_deposit_address\\\" />\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"Blocktrades__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                        id={withdraw_modal_id}\\n                        overlay={true}\\n                    >\\n                        <WinexWithdrawModal\\n                            hideModal={this.hideModal}\\n                            showModal={this.showModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            url={this.state.url}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            gateFee={gateFee}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            min_withdraw_amount={this.props.min_withdraw_amount}\\n                            max_withdraw_amount={this.props.max_withdraw_amount}\\n                            fee_type={this.props.fee_type}\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                    {support_block}\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(WinexGatewayRequest);\\n\",\"import React from \\\"react\\\";\\nimport {\\n    fetchCoins,\\n    fetchTradingPairs,\\n    getActiveWallets\\n} from \\\"common/gatewayMethods\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport WinexRecentTransactions from \\\"components/DepositWithdraw/winex/WinexRecentTransactions\\\";\\n\\nimport WinexGatewayRequest from \\\"components/DepositWithdraw/winex/WinexGatewayRequest\\\";\\nimport LoadingIndicator from \\\"components/LoadingIndicator\\\";\\nimport {widechainAPIs} from \\\"api/apiConfig\\\";\\n\\nclass WinexGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        const action = props.viewSettings.get(\\n            `${props.provider}Action`,\\n            \\\"deposit\\\"\\n        );\\n        this.state = {\\n            coins: [],\\n            activeCoin: this._getActiveCoin(props, {action}),\\n            action\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_Winex_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"HSR\\\";\\n        }\\n        if (state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"WIN.HSR\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillMount() {\\n        this._getCoins();\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (\\n            nextProps.provider !== this.props.provider ||\\n            nextProps.action !== this.props.action\\n        ) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    // shouldComponentUpdate(nextProps, nextState) {\\n    //     if (nextState.action !== this.state.action) {\\n    //         this.setState({\\n    //             activeCoin: this._getActiveCoin(nextProps, nextState)\\n    //         });\\n    //     }\\n\\n    //     return true;\\n    // }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_${this.props.provider}_${this.state.action}`] =\\n            e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            [`${this.props.provider}Action`]: type\\n        });\\n    }\\n\\n    _getCoins() {\\n        Promise.all([\\n            fetchCoins(widechainAPIs.BASE + widechainAPIs.COINS_LIST),\\n            fetchTradingPairs(widechainAPIs.BASE + widechainAPIs.TRADING_PAIRS),\\n            getActiveWallets(widechainAPIs.BASE + widechainAPIs.ACTIVE_WALLETS)\\n        ]).then(result => {\\n            let [coins, tradingPairs, wallets] = result;\\n            let backedCoins = this._getBackedCoins({\\n                allCoins: coins,\\n                tradingPairs: tradingPairs\\n            }).filter(a => !!a.walletType);\\n            backedCoins.forEach(a => {\\n                a.isAvailable = wallets.indexOf(a.walletType) !== -1;\\n            });\\n            this.setState({coins: backedCoins});\\n        }).catch(error => {\\n            console.log(error);\\n        });\\n    }\\n\\n    _getBackedCoins({allCoins, tradingPairs}) {\\n        let coins_by_type = {};\\n        allCoins.forEach(\\n            coin_type => (coins_by_type[coin_type.coinType] = coin_type)\\n        );\\n\\n        let allowed_outputs_by_input = {};\\n        tradingPairs.forEach(pair => {\\n            if (!allowed_outputs_by_input[pair.inputCoinType])\\n                allowed_outputs_by_input[pair.inputCoinType] = {};\\n            allowed_outputs_by_input[pair.inputCoinType][\\n                pair.outputCoinType\\n            ] = true;\\n        });\\n        let blocktradesBackedCoins = [];\\n        allCoins.forEach(coin_type => {\\n            if (\\n                coin_type.backingCoinType &&\\n                coins_by_type[coin_type.backingCoinType]\\n            ) {\\n                let isDepositAllowed =\\n                    allowed_outputs_by_input[coin_type.backingCoinType] &&\\n                    allowed_outputs_by_input[coin_type.backingCoinType][\\n                        coin_type.coinType\\n                    ];\\n                let isWithdrawalAllowed =\\n                    allowed_outputs_by_input[coin_type.coinType] &&\\n                    allowed_outputs_by_input[coin_type.coinType][\\n                        coin_type.backingCoinType\\n                    ];\\n                blocktradesBackedCoins.push({\\n                    name: coins_by_type[coin_type.backingCoinType].name,\\n                    intermediateAccount:\\n                        coins_by_type[coin_type.backingCoinType]\\n                            .intermediateAccount,\\n                    gateFee: coins_by_type[coin_type.backingCoinType].gateFee,\\n                    walletType:\\n                        coins_by_type[coin_type.backingCoinType].walletType,\\n                    backingCoinType:\\n                        coins_by_type[coin_type.backingCoinType].walletSymbol,\\n                    symbol: coin_type.walletSymbol,\\n                    supportsMemos:\\n                        coins_by_type[coin_type.backingCoinType]\\n                            .supportsOutputMemos,\\n                    depositAllowed: isDepositAllowed,\\n                    withdrawalAllowed: isWithdrawalAllowed,\\n                    minWithdrawAmount:\\n                        coins_by_type[coin_type.backingCoinType].minAmount,\\n                    maxWithdrawAmount:\\n                        coins_by_type[coin_type.backingCoinType].maxAmount,\\n                    feeType:\\n                        coins_by_type[coin_type.backingCoinType].gateFeeType\\n                });\\n            }\\n        });\\n        return blocktradesBackedCoins;\\n    }\\n\\n    render() {\\n        let {account, provider} = this.props;\\n        let {activeCoin, action, coins} = this.state;\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoinType.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoinType.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />:{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        this.state.action === \\\"deposit\\\"\\n                                            ? \\\"is-active\\\"\\n                                            : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        this.state.action === \\\"withdraw\\\"\\n                                            ? \\\"is-active\\\"\\n                                            : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <WinexGatewayRequest\\n                                key={`${provider}.${coin.symbol}`}\\n                                gateway={provider}\\n                                issuer_account={coin.intermediateAccount}\\n                                account={account}\\n                                deposit_asset={coin.backingCoinType.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoinType.toLowerCase()}\\n                                deposit_account={coin.depositAccount}\\n                                deposit_wallet_type={coin.walletType}\\n                                gateFee={coin.gateFee}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.supportsMemos}\\n                                isAvailable={coin.isAvailable}\\n                                min_withdraw_amount={coin.minWithdrawAmount}\\n                                max_withdraw_amount={coin.maxWithdrawAmount}\\n                                fee_type={coin.feeType}\\n                                action={this.state.action}\\n                            />\\n                        </div>\\n\\n                        <WinexRecentTransactions\\n                            account={account.get(\\\"name\\\")}\\n                            action={this.state.action}\\n                        />\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(WinexGateway, {\\n    listenTo() {\\n        return [SettingsStore];\\n    },\\n    getProps() {\\n        return {\\n            viewSettings: SettingsStore.getState().viewSettings\\n        };\\n    }\\n});\\n\",\"import WalletDb from \\\"stores/WalletDb\\\";\\n\\nclass XbtsxDepositAddressCache {\\n    constructor() {\\n        // increment this to force generating new addresses for all mappings\\n        this.current_xbtsx_address_cache_version_string = \\\"1\\\";\\n    }\\n\\n    getIndexForDepositKeyInExchange(\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let args = [\\n            this.current_xbtsx_address_cache_version_string,\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        ];\\n        return args.reduce(function(previous, current) {\\n            return previous.concat(\\\"[\\\", current, \\\"]\\\");\\n        }, \\\"\\\");\\n    }\\n\\n    // returns {\\\"address\\\": address, \\\"memo\\\": memo}, with a null memo if not applicable\\n    getCachedInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type\\n    ) {\\n        let wallet = WalletDb.getWallet();\\n        if (!wallet) return null;\\n        wallet.deposit_keys = wallet.deposit_keys || {};\\n        wallet.deposit_keys[exchange_name] =\\n            wallet.deposit_keys[exchange_name] || {};\\n        let index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        wallet.deposit_keys[exchange_name][index] =\\n            wallet.deposit_keys[exchange_name][index] || [];\\n\\n        let number_of_keys = wallet.deposit_keys[exchange_name][index].length;\\n        if (number_of_keys)\\n            return wallet.deposit_keys[exchange_name][index][\\n                number_of_keys - 1\\n            ];\\n        return null;\\n    }\\n\\n    cacheInputAddress(\\n        exchange_name,\\n        account_name,\\n        input_coin_type,\\n        output_coin_type,\\n        address,\\n        memo\\n    ) {\\n        let wallet = WalletDb.getWallet();\\n        if (!wallet) return null;\\n        wallet.deposit_keys = wallet.deposit_keys || {};\\n        wallet.deposit_keys[exchange_name] =\\n            wallet.deposit_keys[exchange_name] || {};\\n        let index = this.getIndexForDepositKeyInExchange(\\n            account_name,\\n            input_coin_type,\\n            output_coin_type\\n        );\\n        wallet.deposit_keys[exchange_name][index] =\\n            wallet.deposit_keys[exchange_name][index] || [];\\n        wallet.deposit_keys[exchange_name][index].push({\\n            address: address,\\n            memo: memo\\n        });\\n        WalletDb._updateWallet();\\n    }\\n} // XbtsxDepositAddressCache\\n\\nexport default XbtsxDepositAddressCache;\\n\",\"import React from \\\"react\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {ChainStore} from \\\"bitsharesjs/es\\\";\\nimport ChainTypes from \\\"components/Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"components/Utility/BindToChainState\\\";\\nimport XbtsxWithdrawModal from \\\"./XbtsxWithdrawModal\\\";\\nimport AccountBalance from \\\"../../Account/AccountBalance\\\";\\nimport XbtsxDepositAddressCache from \\\"lib/common/XbtsxDepositAddressCache\\\";\\nimport {requestDepositAddress} from \\\"lib/common/XbtsxMethods\\\";\\nimport AssetName from \\\"components/Utility/AssetName\\\";\\nimport LinkToAccountById from \\\"components/Utility/LinkToAccountById\\\";\\nimport utils from \\\"lib/common/utils\\\";\\nimport DisableCopyText from \\\"../DisableCopyText\\\";\\nimport counterpart from \\\"counterpart\\\";\\nimport QRCode from \\\"qrcode.react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport CopyToClipboard from \\\"react-copy-to-clipboard\\\";\\nimport {Modal} from \\\"bitshares-ui-style-guide\\\";\\n\\nclass XbtsxGatewayDepositRequest extends React.Component {\\n    static propTypes = {\\n        gateway: PropTypes.string,\\n        deposit_coin_type: PropTypes.string,\\n        deposit_asset_name: PropTypes.string,\\n        deposit_account: PropTypes.string,\\n        receive_coin_type: PropTypes.string,\\n        account: ChainTypes.ChainAccount,\\n        issuer_account: ChainTypes.ChainAccount,\\n        deposit_asset: PropTypes.string,\\n        deposit_wallet_type: PropTypes.string,\\n        receive_asset: ChainTypes.ChainAsset,\\n        deprecated_in_favor_of: ChainTypes.ChainAsset,\\n        deprecated_message: PropTypes.string,\\n        action: PropTypes.string,\\n        supports_output_memos: PropTypes.bool.isRequired,\\n        min_amount: PropTypes.number,\\n        deposit_fee: PropTypes.number,\\n        withdraw_fee: PropTypes.number,\\n        asset_precision: PropTypes.number\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n        this.deposit_address_cache = new XbtsxDepositAddressCache();\\n\\n        this.state = {\\n            isModalVisible: false,\\n            account_name: null,\\n            receive_address: null\\n        };\\n\\n        this.addDepositAddress = this.addDepositAddress.bind(this);\\n\\n        this.showModal = this.showModal.bind(this);\\n        this.hideModal = this.hideModal.bind(this);\\n    }\\n\\n    showModal() {\\n        this.setState({\\n            isModalVisible: true\\n        });\\n    }\\n\\n    hideModal() {\\n        this.setState({\\n            isModalVisible: false\\n        });\\n    }\\n\\n    _getDepositObject() {\\n        return {\\n            walletType: this.props.deposit_wallet_type,\\n            inputCoinType: this.props.deposit_coin_type,\\n            outputCoinType: this.props.receive_coin_type,\\n            outputAddress: this.props.account.get(\\\"name\\\"),\\n            stateCallback: this.addDepositAddress\\n        };\\n    }\\n\\n    // componentWillMount() {\\n    //     let account_name = this.props.account.get(\\\"name\\\");\\n    //\\n    //     // let receive_address = this.deposit_address_cache.getCachedInputAddress(this.props.gateway, account_name, this.props.deposit_coin_type, this.props.receive_coin_type);\\n    // }\\n\\n    addDepositAddress(receive_address) {\\n        let account_name = this.props.account.get(\\\"name\\\");\\n        // this.deposit_address_cache.cacheInputAddress(\\n        //     this.props.gateway,\\n        //     account_name,\\n        //     this.props.deposit_coin_type,\\n        //     this.props.receive_coin_type,\\n        //     receive_address.address,\\n        //     receive_address.memo\\n        // );\\n        this.setState({account_name});\\n        this.setState({receive_address});\\n    }\\n\\n    getWithdrawModalId() {\\n        // console.log( \\\"this.props.issuer: \\\", this.props.issuer_account.toJS() )\\n        // console.log( \\\"this.receive_asset.issuer: \\\", this.props.receive_asset.toJS() )\\n        return (\\n            \\\"withdraw_asset_\\\" +\\n            this.props.issuer_account.get(\\\"name\\\") +\\n            \\\"_\\\" +\\n            this.props.receive_asset.get(\\\"symbol\\\")\\n        );\\n    }\\n\\n    onWithdraw() {\\n        this.showModal();\\n    }\\n\\n    render() {\\n        let emptyRow = <div style={{display: \\\"none\\\", minHeight: 150}} />;\\n        if (\\n            !this.props.account ||\\n            !this.props.issuer_account ||\\n            !this.props.receive_asset\\n        )\\n            return emptyRow;\\n\\n        let account_balances_object = this.props.account.get(\\\"balances\\\");\\n\\n        // let balance = \\\"0 \\\" + this.props.receive_asset.get(\\\"symbol\\\");\\n        if (this.props.deprecated_in_favor_of) {\\n            let has_nonzero_balance = false;\\n            let balance_object_id = account_balances_object.get(\\n                this.props.receive_asset.get(\\\"id\\\")\\n            );\\n            if (balance_object_id) {\\n                let balance_object = ChainStore.getObject(balance_object_id);\\n                if (balance_object) {\\n                    let balance = balance_object.get(\\\"balance\\\");\\n                    if (balance != 0) has_nonzero_balance = true;\\n                }\\n            }\\n            if (!has_nonzero_balance) return emptyRow;\\n        }\\n\\n        let receive_address = null;\\n        let prev_account_name = this.state.account_name;\\n        if (prev_account_name === this.props.account.get(\\\"name\\\"))\\n            receive_address = this.state.receive_address;\\n\\n        if (!receive_address) {\\n            let account_name = this.props.account.get(\\\"name\\\");\\n            // receive_address = this.deposit_address_cache.getCachedInputAddress(\\n            //     this.props.gateway,\\n            //     account_name,\\n            //     this.props.deposit_coin_type,\\n            //     this.props.receive_coin_type\\n            // );\\n        }\\n\\n        if (!receive_address) {\\n            requestDepositAddress(this._getDepositObject());\\n            return emptyRow;\\n        }\\n\\n        let withdraw_modal_id = this.getWithdrawModalId();\\n        let deposit_address_fragment = null;\\n        let deposit_memo = null;\\n        // if (this.props.deprecated_in_favor_of)\\n        // {\\n        //     deposit_address_fragment = <span>please use {this.props.deprecated_in_favor_of.get(\\\"symbol\\\")} instead. <span data-tip={this.props.deprecated_message} data-place=\\\"right\\\" data-html={true}><Icon name=\\\"question-circle\\\" title=\\\"icons.question_circle\\\" /></span><ReactTooltip /></span>;\\n        // }\\n        // else\\n        // {\\n        let clipboardText = \\\"\\\";\\n        let payFromWallet =\\n            \\\"sth:\\\" +\\n            receive_address.address +\\n            \\\"?vendorField=\\\" +\\n            this.props.account.get(\\\"name\\\");\\n        var showPayFromWallet = false;\\n        if (this.props.deposit_asset === \\\"STH\\\") {\\n            showPayFromWallet = true;\\n        }\\n\\n        let memoText;\\n        if (this.props.deposit_account) {\\n            deposit_address_fragment = (\\n                <span>{this.props.deposit_account}</span>\\n            );\\n            clipboardText = this.props.deposit_account;\\n            memoText = \\\"dex:\\\" + this.props.account.get(\\\"name\\\");\\n            deposit_memo = <span>{memoText}</span>;\\n            var withdraw_memo_prefix = this.props.deposit_coin_type + \\\":\\\";\\n        } else {\\n            if (receive_address.memo) {\\n                // This is a client that uses a deposit memo (like ethereum), we need to display both the address and the memo they need to send\\n                memoText = receive_address.memo;\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n                deposit_memo = <span>{receive_address.memo}</span>;\\n            } else {\\n                // This is a client that uses unique deposit addresses to select the output\\n                clipboardText = receive_address.address;\\n                deposit_address_fragment = (\\n                    <span>{receive_address.address}</span>\\n                );\\n            }\\n            var withdraw_memo_prefix = \\\"\\\";\\n        }\\n\\n        let minDeposit = utils.format_number(\\n            this.props.min_amount /\\n                utils.get_asset_precision(this.props.asset_precision),\\n            this.props.asset_precision,\\n            false\\n        );\\n\\n        if (this.props.action === \\\"deposit\\\") {\\n            return (\\n                <div className=\\\"rudex__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_deposit\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.your_account\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        {!memoText ? (\\n                            <div className=\\\"QR\\\">\\n                                <QRCode size={128} value={clipboardText} />\\n                            </div>\\n                        ) : null}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.deposit_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.deposit_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <label className=\\\"left-label\\\">\\n                            <b>\\n                                <Translate\\n                                    content=\\\"gateway.xbtsx.min_amount\\\"\\n                                    minAmount={minDeposit}\\n                                    symbol={this.props.deposit_coin_type}\\n                                />\\n                            </b>\\n                        </label>\\n                        <div style={{padding: \\\"10px 0\\\", fontSize: \\\"1.1rem\\\"}}>\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate\\n                                                style={{\\n                                                    textTransform: \\\"uppercase\\\"\\n                                                }}\\n                                                content=\\\"gateway.address\\\"\\n                                            />\\n                                            :{\\\" \\\"}\\n                                            <DisableCopyText\\n                                                replaceCopyText={counterpart.translate(\\n                                                    \\\"gateway.use_copy_button\\\"\\n                                                )}\\n                                            >\\n                                                <b>\\n                                                    {deposit_address_fragment}\\n                                                </b>\\n                                            </DisableCopyText>\\n                                        </td>\\n                                    </tr>\\n                                    {deposit_memo ? (\\n                                        <tr>\\n                                            <td>\\n                                                <Translate\\n                                                    style={{\\n                                                        textTransform:\\n                                                            \\\"uppercase\\\"\\n                                                    }}\\n                                                    content=\\\"gateway.memo\\\"\\n                                                />\\n                                                :{\\\" \\\"}\\n                                                <DisableCopyText\\n                                                    replaceCopyText={counterpart.translate(\\n                                                        \\\"gateway.use_copy_button\\\"\\n                                                    )}\\n                                                >\\n                                                    <b> {deposit_memo} </b>\\n                                                </DisableCopyText>\\n                                            </td>\\n                                        </tr>\\n                                    ) : null}\\n                                </tbody>\\n                            </table>\\n                            <div\\n                                className=\\\"button-group\\\"\\n                                style={{paddingTop: 10}}\\n                            >\\n                                {deposit_address_fragment ? (\\n                                    <CopyToClipboard text={clipboardText}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_address\\\" />\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                {memoText ? (\\n                                    <CopyToClipboard text={memoText}>\\n                                        <div className=\\\"button\\\">\\n                                            <Translate content=\\\"gateway.copy_memo\\\" />\\n                                        </div>\\n                                    </CopyToClipboard>\\n                                ) : null}\\n                                {showPayFromWallet ? (\\n                                    <a className=\\\"button\\\" href={payFromWallet}>\\n                                        <Translate content=\\\"gateway.deposit_from_wallet\\\" />{\\\" \\\"}\\n                                        {this.props.deposit_asset}\\n                                    </a>\\n                                ) : null}\\n                            </div>\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_amount\\\"\\n                                minDeposit={minDeposit}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                            <Translate\\n                                className=\\\"has-error fz_14\\\"\\n                                component=\\\"p\\\"\\n                                content=\\\"gateway.min_deposit_warning_asset\\\"\\n                                minDeposit={minDeposit}\\n                                coin={this.props.deposit_asset}\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div className=\\\"rudex__gateway grid-block no-padding no-margin\\\">\\n                    <div className=\\\"small-12 medium-5\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_summary\\\"\\n                        />\\n                        <div className=\\\"small-12 medium-10\\\">\\n                            <table className=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_withdraw\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AssetName\\n                                                name={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.asset_to_receive\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            {this.props.deposit_asset}\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <Translate\\n                                            component=\\\"td\\\"\\n                                            content=\\\"gateway.intermediate\\\"\\n                                        />\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <LinkToAccountById\\n                                                account={this.props.issuer_account.get(\\n                                                    \\\"id\\\"\\n                                                )}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                            <Translate content=\\\"gateway.balance\\\" />\\n                                            :\\n                                        </td>\\n                                        <td\\n                                            style={{\\n                                                fontWeight: \\\"bold\\\",\\n                                                color: \\\"#049cce\\\",\\n                                                textAlign: \\\"right\\\"\\n                                            }}\\n                                        >\\n                                            <AccountBalance\\n                                                account={this.props.account.get(\\n                                                    \\\"name\\\"\\n                                                )}\\n                                                asset={this.props.receive_asset.get(\\n                                                    \\\"symbol\\\"\\n                                                )}\\n                                                replace={false}\\n                                            />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                        {/*<p>When you withdraw {this.props.receive_asset.get(\\\"symbol\\\")}, you will receive {this.props.deposit_asset} at a 1:1 ratio (minus fees).</p>*/}\\n                    </div>\\n                    <div className=\\\"small-12 medium-7\\\">\\n                        <Translate\\n                            component=\\\"h4\\\"\\n                            content=\\\"gateway.withdraw_inst\\\"\\n                        />\\n                        <label className=\\\"left-label\\\">\\n                            <Translate\\n                                content=\\\"gateway.withdraw_to\\\"\\n                                asset={this.props.deposit_asset}\\n                            />\\n                            :\\n                        </label>\\n                        <div className=\\\"button-group\\\" style={{paddingTop: 20}}>\\n                            <button\\n                                className=\\\"button success\\\"\\n                                style={{fontSize: \\\"1.3rem\\\"}}\\n                                onClick={this.onWithdraw.bind(this)}\\n                            >\\n                                <Translate content=\\\"gateway.withdraw_now\\\" />{\\\" \\\"}\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <Modal\\n                        onCancel={this.hideModal}\\n                        title={counterpart.translate(\\\"gateway.withdraw_coin\\\", {\\n                            coin: this.props.deposit_asset_name,\\n                            symbol: this.props.deposit_asset\\n                        })}\\n                        footer={null}\\n                        visible={this.state.isModalVisible}\\n                        id={withdraw_modal_id}\\n                        overlay={true}\\n                    >\\n                        <XbtsxWithdrawModal\\n                            hideModal={this.hideModal}\\n                            showModal={this.showModal}\\n                            account={this.props.account.get(\\\"name\\\")}\\n                            issuer={this.props.issuer_account.get(\\\"name\\\")}\\n                            asset={this.props.receive_asset.get(\\\"symbol\\\")}\\n                            output_coin_name={this.props.deposit_asset_name}\\n                            output_coin_symbol={this.props.deposit_asset}\\n                            output_coin_type={this.props.deposit_coin_type}\\n                            output_wallet_type={this.props.deposit_wallet_type}\\n                            output_supports_memos={\\n                                this.props.supports_output_memos\\n                            }\\n                            memo_prefix={withdraw_memo_prefix}\\n                            modal_id={withdraw_modal_id}\\n                            min_amount={this.props.min_amount}\\n                            withdraw_fee={this.props.withdraw_fee}\\n                            asset_precision={this.props.asset_precision}\\n                            balance={\\n                                this.props.account.get(\\\"balances\\\").toJS()[\\n                                    this.props.receive_asset.get(\\\"id\\\")\\n                                ]\\n                            }\\n                        />\\n                    </Modal>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default BindToChainState(XbtsxGatewayDepositRequest, {\\n    keep_updating: true\\n});\\n\",\"import React from \\\"react\\\";\\nimport XbtsxGatewayDepositRequest from \\\"./XbtsxGatewayDepositRequest\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {\\n    RecentTransactions,\\n    TransactionWrapper\\n} from \\\"components/Account/RecentTransactions\\\";\\nimport Immutable from \\\"immutable\\\";\\nimport cnames from \\\"classnames\\\";\\nimport LoadingIndicator from \\\"../../LoadingIndicator\\\";\\n\\nclass XbtsxGateway extends React.Component {\\n    constructor(props) {\\n        super();\\n\\n        this.state = {\\n            activeCoin: this._getActiveCoin(props, {action: \\\"deposit\\\"}),\\n            action: props.viewSettings.get(`xbtsxAction`, \\\"deposit\\\")\\n        };\\n    }\\n\\n    _getActiveCoin(props, state) {\\n        let cachedCoin = props.viewSettings.get(\\n            `activeCoin_xbtsx_${state.action}`,\\n            null\\n        );\\n        let firstTimeCoin = null;\\n        if (state.action == \\\"deposit\\\") {\\n            firstTimeCoin = \\\"PPY\\\";\\n        }\\n        if (state.action == \\\"withdraw\\\") {\\n            firstTimeCoin = \\\"PPY\\\";\\n        }\\n        let activeCoin = cachedCoin ? cachedCoin : firstTimeCoin;\\n        return activeCoin;\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        if (nextProps.provider !== this.props.provider) {\\n            this.setState({\\n                activeCoin: this._getActiveCoin(nextProps, this.state.action)\\n            });\\n        }\\n    }\\n\\n    onSelectCoin(e) {\\n        this.setState({\\n            activeCoin: e.target.value\\n        });\\n\\n        let setting = {};\\n        setting[`activeCoin_xbtsx_${this.state.action}`] = e.target.value;\\n        SettingsActions.changeViewSetting(setting);\\n    }\\n\\n    changeAction(type) {\\n        let activeCoin = this._getActiveCoin(this.props, {action: type});\\n\\n        this.setState({\\n            action: type,\\n            activeCoin: activeCoin\\n        });\\n\\n        SettingsActions.changeViewSetting({[`xbtsxAction`]: type});\\n    }\\n\\n    render() {\\n        let {coins, account} = this.props;\\n        let {activeCoin, action} = this.state;\\n\\n        if (!coins.length) {\\n            return <LoadingIndicator />;\\n        }\\n\\n        let filteredCoins = coins.filter(a => {\\n            if (!a || !a.symbol) {\\n                return false;\\n            } else {\\n                return action === \\\"deposit\\\"\\n                    ? a.depositAllowed\\n                    : a.withdrawalAllowed;\\n            }\\n        });\\n\\n        let coinOptions = filteredCoins\\n            .map(coin => {\\n                let option =\\n                    action === \\\"deposit\\\"\\n                        ? coin.backingCoin.toUpperCase()\\n                        : coin.symbol;\\n                return (\\n                    <option value={option} key={coin.symbol}>\\n                        {option}\\n                    </option>\\n                );\\n            })\\n            .filter(a => {\\n                return a !== null;\\n            });\\n\\n        let coin = filteredCoins.filter(coin => {\\n            return action === \\\"deposit\\\"\\n                ? coin.backingCoin.toUpperCase() === activeCoin\\n                : coin.symbol === activeCoin;\\n        })[0];\\n\\n        if (!coin) coin = filteredCoins[0];\\n\\n        let isDeposit = this.state.action === \\\"deposit\\\";\\n\\n        let supportUrl = \\\"https://t.me/xbtsio\\\";\\n\\n        return (\\n            <div style={this.props.style}>\\n                <div className=\\\"grid-block no-margin vertical medium-horizontal no-padding\\\">\\n                    <div className=\\\"medium-4\\\">\\n                        <div>\\n                            <label\\n                                style={{minHeight: \\\"2rem\\\"}}\\n                                className=\\\"left-label\\\"\\n                            >\\n                                <Translate\\n                                    content={\\\"gateway.choose_\\\" + action}\\n                                />:{\\\" \\\"}\\n                            </label>\\n                            <select\\n                                className=\\\"external-coin-types bts-select\\\"\\n                                onChange={this.onSelectCoin.bind(this)}\\n                                value={activeCoin}\\n                            >\\n                                {coinOptions}\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"medium-6 medium-offset-1\\\">\\n                        <label\\n                            style={{minHeight: \\\"2rem\\\"}}\\n                            className=\\\"left-label\\\"\\n                        >\\n                            <Translate content=\\\"gateway.gateway_text\\\" />:\\n                        </label>\\n                        <div style={{paddingBottom: 15}}>\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    className={\\n                                        action === \\\"deposit\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"deposit\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.deposit\\\" />\\n                                    </a>\\n                                </li>\\n                                <li\\n                                    className={\\n                                        action === \\\"withdraw\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a\\n                                        onClick={this.changeAction.bind(\\n                                            this,\\n                                            \\\"withdraw\\\"\\n                                        )}\\n                                    >\\n                                        <Translate content=\\\"gateway.withdraw\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                {!coin ? null : (\\n                    <div>\\n                        <div style={{marginBottom: 15}}>\\n                            <XbtsxGatewayDepositRequest\\n                                key={`${coin.symbol}`}\\n                                gateway={coin.gatewayWallet}\\n                                issuer_account={coin.issuer}\\n                                account={account}\\n                                deposit_asset={coin.backingCoin.toUpperCase()}\\n                                deposit_asset_name={coin.name}\\n                                deposit_coin_type={coin.backingCoin.toLowerCase()}\\n                                deposit_account={coin.gatewayWallet}\\n                                deposit_wallet_type={coin.walletType}\\n                                receive_asset={coin.symbol}\\n                                receive_coin_type={coin.symbol.toLowerCase()}\\n                                supports_output_memos={coin.memoSupport}\\n                                min_amount={coin.minAmount}\\n                                asset_precision={coin.precision}\\n                                action={this.state.action}\\n                            />\\n                            <label className=\\\"left-label\\\">Support</label>\\n                            <div>\\n                                <Translate content=\\\"gateway.xbtsx.support_block\\\" />\\n                                <br />\\n                                <br />\\n                                <a\\n                                    href={supportUrl}\\n                                    target=\\\"_blank\\\"\\n                                    rel=\\\"noopener noreferrer\\\"\\n                                >\\n                                    {supportUrl}\\n                                </a>\\n                            </div>\\n                        </div>\\n\\n                        {coin && coin.symbol ? (\\n                            <TransactionWrapper\\n                                asset={coin.symbol}\\n                                fromAccount={\\n                                    isDeposit\\n                                        ? coin.issuerId\\n                                        : this.props.account.get(\\\"id\\\")\\n                                }\\n                                to={\\n                                    isDeposit\\n                                        ? this.props.account.get(\\\"id\\\")\\n                                        : coin.issuerId\\n                                }\\n                            >\\n                                {({asset, to, fromAccount}) => {\\n                                    return (\\n                                        <RecentTransactions\\n                                            accountsList={Immutable.List([\\n                                                this.props.account.get(\\\"id\\\")\\n                                            ])}\\n                                            limit={10}\\n                                            compactView={true}\\n                                            fullHeight={true}\\n                                            filter=\\\"transfer\\\"\\n                                            title={\\n                                                <Translate\\n                                                    content={\\n                                                        \\\"gateway.recent_\\\" +\\n                                                        this.state.action\\n                                                    }\\n                                                />\\n                                            }\\n                                            customFilter={{\\n                                                fields: [\\n                                                    \\\"to\\\",\\n                                                    \\\"from\\\",\\n                                                    \\\"asset_id\\\"\\n                                                ],\\n                                                values: {\\n                                                    to: to.get(\\\"id\\\"),\\n                                                    from: fromAccount.get(\\\"id\\\"),\\n                                                    asset_id: asset.get(\\\"id\\\")\\n                                                }\\n                                            }}\\n                                        />\\n                                    );\\n                                }}\\n                            </TransactionWrapper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default connect(XbtsxGateway, {\\n    listenTo() {\\n        return [SettingsStore];\\n    },\\n    getProps() {\\n        return {\\n            viewSettings: SettingsStore.getState().viewSettings\\n        };\\n    }\\n});\\n\",\"import React from \\\"react\\\";\\nimport {connect} from \\\"alt-react\\\";\\nimport accountUtils from \\\"common/account_utils\\\";\\nimport {updateGatewayBackers} from \\\"common/gatewayUtils\\\";\\nimport utils from \\\"common/utils\\\";\\nimport Translate from \\\"react-translate-component\\\";\\nimport ChainTypes from \\\"../Utility/ChainTypes\\\";\\nimport BindToChainState from \\\"../Utility/BindToChainState\\\";\\nimport CitadelGateway from \\\"../DepositWithdraw/citadel/CitadelGateway\\\";\\nimport OpenledgerGateway from \\\"../DepositWithdraw/OpenledgerGateway\\\";\\nimport OpenLedgerFiatDepositWithdrawal from \\\"../DepositWithdraw/openledger/OpenLedgerFiatDepositWithdrawal\\\";\\nimport OpenLedgerFiatTransactionHistory from \\\"../DepositWithdraw/openledger/OpenLedgerFiatTransactionHistory\\\";\\nimport BlockTradesBridgeDepositRequest from \\\"../DepositWithdraw/blocktrades/BlockTradesBridgeDepositRequest\\\";\\nimport CitadelBridgeDepositRequest from \\\"../DepositWithdraw/citadel/CitadelBridgeDepositRequest\\\";\\nimport HelpContent from \\\"../Utility/HelpContent\\\";\\nimport AccountStore from \\\"stores/AccountStore\\\";\\nimport SettingsStore from \\\"stores/SettingsStore\\\";\\nimport SettingsActions from \\\"actions/SettingsActions\\\";\\nimport {openledgerAPIs} from \\\"api/apiConfig\\\";\\nimport BitKapital from \\\"../DepositWithdraw/BitKapital\\\";\\nimport RuDexGateway from \\\"../DepositWithdraw/rudex/RuDexGateway\\\";\\nimport GatewayStore from \\\"stores/GatewayStore\\\";\\nimport AccountImage from \\\"../Account/AccountImage\\\";\\nimport BitsparkGateway from \\\"../DepositWithdraw/bitspark/BitsparkGateway\\\";\\nimport GdexGateway from \\\"../DepositWithdraw/gdex/GdexGateway\\\";\\nimport WinexGateway from \\\"../DepositWithdraw/winex/WinexGateway\\\";\\nimport XbtsxGateway from \\\"../DepositWithdraw/xbtsx/XbtsxGateway\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport DepositModal from \\\"../Modal/DepositModal\\\";\\nimport WithdrawModal from \\\"../Modal/WithdrawModalNew\\\";\\nimport TranslateWithLinks from \\\"../Utility/TranslateWithLinks\\\";\\n\\nclass AccountDepositWithdraw extends React.Component {\\n    static propTypes = {\\n        account: ChainTypes.ChainAccount.isRequired,\\n        contained: PropTypes.bool\\n    };\\n\\n    static defaultProps = {\\n        contained: false\\n    };\\n\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            olService: props.viewSettings.get(\\\"olService\\\", \\\"gateway\\\"),\\n            rudexService: props.viewSettings.get(\\\"rudexService\\\", \\\"gateway\\\"),\\n            bitsparkService: props.viewSettings.get(\\n                \\\"bitsparkService\\\",\\n                \\\"gateway\\\"\\n            ),\\n            xbtsxService: props.viewSettings.get(\\\"xbtsxService\\\", \\\"gateway\\\"),\\n            btService: props.viewSettings.get(\\\"btService\\\", \\\"bridge\\\"),\\n            citadelService: props.viewSettings.get(\\\"citadelService\\\", \\\"bridge\\\"),\\n            metaService: props.viewSettings.get(\\\"metaService\\\", \\\"bridge\\\"),\\n            activeService: props.viewSettings.get(\\\"activeService\\\", 0)\\n        };\\n    }\\n\\n    shouldComponentUpdate(nextProps, nextState) {\\n        return (\\n            nextProps.account !== this.props.account ||\\n            nextProps.servicesDown !== this.props.servicesDown ||\\n            !utils.are_equal_shallow(\\n                nextProps.blockTradesBackedCoins,\\n                this.props.blockTradesBackedCoins\\n            ) ||\\n            !utils.are_equal_shallow(\\n                nextProps.openLedgerBackedCoins,\\n                this.props.openLedgerBackedCoins\\n            ) ||\\n            !utils.are_equal_shallow(\\n                nextProps.citadelBackedCoins,\\n                this.props.citadelBackedCoins\\n            ) ||\\n            nextState.olService !== this.state.olService ||\\n            nextState.rudexService !== this.state.rudexService ||\\n            nextState.bitsparkService !== this.state.bitsparkService ||\\n            nextState.xbtsxService !== this.state.xbtsxService ||\\n            nextState.btService !== this.state.btService ||\\n            nextState.citadelService !== this.state.citadelService ||\\n            nextState.metaService !== this.state.metaService ||\\n            nextState.activeService !== this.state.activeService\\n        );\\n    }\\n\\n    componentWillMount() {\\n        accountUtils.getFinalFeeAsset(this.props.account, \\\"transfer\\\");\\n    }\\n\\n    toggleOLService(service) {\\n        this.setState({\\n            olService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            olService: service\\n        });\\n    }\\n\\n    toggleRuDEXService(service) {\\n        this.setState({\\n            rudexService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            rudexService: service\\n        });\\n    }\\n\\n    toggleXbtsxService(service) {\\n        this.setState({\\n            xbtsxService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            xbtsxService: service\\n        });\\n    }\\n\\n    toggleBitSparkService(service) {\\n        this.setState({\\n            bitsparkService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            bitsparkService: service\\n        });\\n    }\\n\\n    toggleCTService(service) {\\n        this.setState({\\n            btService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            btService: service\\n        });\\n    }\\n\\n    toggleCitadelService(service) {\\n        this.setState({\\n            citadelService: service\\n        });\\n        SettingsActions.changeViewSetting({\\n            citadelService: service\\n        });\\n    }\\n\\n    toggleMetaService(service) {\\n        this.setState({\\n            metaService: service\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            metaService: service\\n        });\\n    }\\n\\n    onSetService(e) {\\n        //let index = this.state.services.indexOf(e.target.value);\\n        this.setState({\\n            activeService: parseInt(e.target.value)\\n        });\\n\\n        SettingsActions.changeViewSetting({\\n            activeService: parseInt(e.target.value)\\n        });\\n    }\\n\\n    renderServices(\\n        openLedgerGatewayCoins,\\n        rudexGatewayCoins,\\n        bitsparkGatewayCoins,\\n        xbtsxGatewayCoins\\n    ) {\\n        //let services = [\\\"Openledger (OPEN.X)\\\", \\\"BlockTrades (TRADE.X)\\\", \\\"Transwiser\\\", \\\"BitKapital\\\"];\\n        let serList = [];\\n        let {account} = this.props;\\n        let {\\n            olService,\\n            btService,\\n            rudexService,\\n            bitsparkService,\\n            xbtsxService,\\n            citadelService\\n        } = this.state;\\n        serList.push({\\n            name: \\\"Openledger (OPEN.X)\\\",\\n            template: (\\n                <div className=\\\"content-block\\\">\\n                    {/* <div className=\\\"float-right\\\">\\n                            <a href=\\\"https://www.ccedk.com/\\\" target=\\\"__blank\\\" rel=\\\"noopener noreferrer\\\"><Translate content=\\\"gateway.website\\\" /></a>\\n                        </div> */}\\n                    <div\\n                        className=\\\"service-selector\\\"\\n                        style={{marginBottom: \\\"2rem\\\"}}\\n                    >\\n                        <ul className=\\\"button-group segmented no-margin\\\">\\n                            <li\\n                                onClick={this.toggleOLService.bind(\\n                                    this,\\n                                    \\\"gateway\\\"\\n                                )}\\n                                className={\\n                                    olService === \\\"gateway\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                }\\n                            >\\n                                <a>\\n                                    <Translate content=\\\"gateway.gateway\\\" />\\n                                </a>\\n                            </li>\\n                            <li\\n                                onClick={this.toggleOLService.bind(\\n                                    this,\\n                                    \\\"fiat\\\"\\n                                )}\\n                                className={\\n                                    olService === \\\"fiat\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                }\\n                            >\\n                                <Translate\\n                                    component=\\\"a\\\"\\n                                    content=\\\"gateway.fiat\\\"\\n                                />\\n                            </li>\\n                        </ul>\\n                    </div>\\n\\n                    {olService === \\\"gateway\\\" &&\\n                    openLedgerGatewayCoins.length ? (\\n                        <OpenledgerGateway\\n                            account={account}\\n                            coins={openLedgerGatewayCoins}\\n                            provider=\\\"openledger\\\"\\n                        />\\n                    ) : null}\\n\\n                    {olService === \\\"fiat\\\" ? (\\n                        <div>\\n                            <div style={{paddingBottom: 15}}>\\n                                <Translate\\n                                    component=\\\"h5\\\"\\n                                    content=\\\"gateway.fiat_text\\\"\\n                                    unsafe\\n                                />\\n                            </div>\\n\\n                            <OpenLedgerFiatDepositWithdrawal\\n                                rpc_url={openledgerAPIs.RPC_URL}\\n                                account={account}\\n                                issuer_account=\\\"openledger-fiat\\\"\\n                            />\\n                            <OpenLedgerFiatTransactionHistory\\n                                rpc_url={openledgerAPIs.RPC_URL}\\n                                account={account}\\n                            />\\n                        </div>\\n                    ) : null}\\n                </div>\\n            )\\n        });\\n\\n        serList.push({\\n            name: \\\"RuDEX (RUDEX.X)\\\",\\n            template: (\\n                <div className=\\\"content-block\\\">\\n                    <div\\n                        className=\\\"service-selector\\\"\\n                        style={{marginBottom: \\\"2rem\\\"}}\\n                    >\\n                        <ul className=\\\"button-group segmented no-margin\\\">\\n                            <li\\n                                onClick={this.toggleRuDEXService.bind(\\n                                    this,\\n                                    \\\"gateway\\\"\\n                                )}\\n                                className={\\n                                    rudexService === \\\"gateway\\\"\\n                                        ? \\\"is-active\\\"\\n                                        : \\\"\\\"\\n                                }\\n                            >\\n                                <a>\\n                                    <Translate content=\\\"gateway.gateway\\\" />\\n                                </a>\\n                            </li>\\n                            <li\\n                                onClick={this.toggleRuDEXService.bind(\\n                                    this,\\n                                    \\\"fiat\\\"\\n                                )}\\n                                className={\\n                                    rudexService === \\\"fiat\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                }\\n                            >\\n                                <a>Fiat</a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n\\n                    {rudexService === \\\"gateway\\\" && rudexGatewayCoins.length ? (\\n                        <RuDexGateway\\n                            account={account}\\n                            coins={rudexGatewayCoins}\\n                        />\\n                    ) : null}\\n\\n                    {rudexService === \\\"fiat\\\" ? (\\n                        <div>\\n                            <Translate content=\\\"gateway.rudex.coming_soon\\\" />\\n                        </div>\\n                    ) : null}\\n                </div>\\n            )\\n        });\\n\\n        serList.push({\\n            name: \\\"BitSpark (SPARKDEX.X)\\\",\\n            template: (\\n                <div className=\\\"content-block\\\">\\n                    <div\\n                        className=\\\"service-selector\\\"\\n                        style={{marginBottom: \\\"2rem\\\"}}\\n                    >\\n                        <ul className=\\\"button-group segmented no-margin\\\">\\n                            <li\\n                                onClick={this.toggleBitSparkService.bind(\\n                                    this,\\n                                    \\\"gateway\\\"\\n                                )}\\n                                className={\\n                                    bitsparkService === \\\"gateway\\\"\\n                                        ? \\\"is-active\\\"\\n                                        : \\\"\\\"\\n                                }\\n                            >\\n                                <a>\\n                                    <Translate content=\\\"gateway.gateway\\\" />\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n\\n                    {bitsparkService === \\\"gateway\\\" &&\\n                    bitsparkGatewayCoins.length ? (\\n                        <BitsparkGateway\\n                            account={account}\\n                            coins={bitsparkGatewayCoins}\\n                            provider=\\\"bitspark\\\"\\n                        />\\n                    ) : null}\\n                </div>\\n            )\\n        });\\n\\n        serList.push({\\n            name: \\\"XCTS (XCTSX.X)\\\",\\n            template: (\\n                <div className=\\\"content-block\\\">\\n                    <div\\n                        className=\\\"service-selector\\\"\\n                        style={{marginBottom: \\\"2rem\\\"}}\\n                    >\\n                        <ul className=\\\"button-group segmented no-margin\\\">\\n                            <li\\n                                onClick={this.toggleXbtsxService.bind(\\n                                    this,\\n                                    \\\"gateway\\\"\\n                                )}\\n                                className={\\n                                    xbtsxService === \\\"gateway\\\"\\n                                        ? \\\"is-active\\\"\\n                                        : \\\"\\\"\\n                                }\\n                            >\\n                                <a>\\n                                    <Translate content=\\\"gateway.gateway\\\" />\\n                                </a>\\n                            </li>\\n                            <li\\n                                onClick={this.toggleXbtsxService.bind(\\n                                    this,\\n                                    \\\"fiat\\\"\\n                                )}\\n                                className={\\n                                    xbtsxService === \\\"fiat\\\" ? \\\"is-active\\\" : \\\"\\\"\\n                                }\\n                            >\\n                                <a>Fiat</a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n\\n                    {xbtsxService === \\\"gateway\\\" && xbtsxGatewayCoins.length ? (\\n                        <XbtsxGateway\\n                            account={account}\\n                            coins={xbtsxGatewayCoins}\\n                        />\\n                    ) : null}\\n\\n                    {xbtsxService === \\\"fiat\\\" ? (\\n                        <div>\\n                            <Translate content=\\\"gateway.xbtsx.coming_soon\\\" />\\n                        </div>\\n                    ) : null}\\n                </div>\\n            )\\n        });\\n\\n        serList.push({\\n            name: \\\"BlockTrades\\\",\\n            template: (\\n                <div>\\n                    <div className=\\\"content-block\\\">\\n                        {/* <div className=\\\"float-right\\\"><a href=\\\"https://blocktrades.us\\\" target=\\\"__blank\\\" rel=\\\"noopener noreferrer\\\"><Translate content=\\\"gateway.website\\\" /></a></div> */}\\n\\n                        <div\\n                            className=\\\"service-selector\\\"\\n                            style={{marginBottom: \\\"2rem\\\"}}\\n                        >\\n                            <ul className=\\\"button-group segmented no-margin\\\">\\n                                <li\\n                                    onClick={this.toggleCTService.bind(\\n                                        this,\\n                                        \\\"bridge\\\"\\n                                    )}\\n                                    className={\\n                                        btService === \\\"bridge\\\"\\n                                            ? \\\"is-active\\\"\\n                                            : \\\"\\\"\\n                                    }\\n                                >\\n                                    <a>\\n                                        <Translate content=\\\"gateway.bridge\\\" />\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n\\n                        <BlockTradesBridgeDepositRequest\\n                            gateway=\\\"blocktrades\\\"\\n                            issuer_account=\\\"blocktrades\\\"\\n                            account={account}\\n                            initial_deposit_input_coin_type=\\\"btc\\\"\\n                            initial_deposit_output_coin_type=\\\"bts\\\"\\n                            initial_deposit_estimated_input_amount=\\\"1.0\\\"\\n                            initial_withdraw_input_coin_type=\\\"bts\\\"\\n                            initial_withdraw_output_coin_type=\\\"btc\\\"\\n                            initial_withdraw_estimated_input_amount=\\\"100000\\\"\\n                            initial_conversion_input_coin_type=\\\"bts\\\"\\n                            initial_conversion_output_coin_type=\\\"bitbtc\\\"\\n                            initial_conversion_estimated_input_amount=\\\"1000\\\"\\n                        />\\n                    </div>\\n                    <div className=\\\"content-block\\\" />\\n                </div>\\n            )\\n        });\\n\\n        /***\\n         * Citadel Disabled due to CORS Errors\\n         */\\n        // serList.push({\\n        //     name: \\\"Citadel\\\",\\n        //     template: (\\n        //         <div>\\n        //             <div className=\\\"content-block\\\">\\n        //                 {/* <div className=\\\"float-right\\\"><a href=\\\"https://blocktrades.us\\\" target=\\\"__blank\\\" rel=\\\"noopener noreferrer\\\"><Translate content=\\\"gateway.website\\\" /></a></div> */}\\n        //                 <div\\n        //                     className=\\\"service-selector\\\"\\n        //                     style={{marginBottom: \\\"2rem\\\"}}\\n        //                 >\\n        //                     <ul className=\\\"button-group segmented no-margin\\\">\\n        //                         <li\\n        //                             onClick={this.toggleCitadelService.bind(\\n        //                                 this,\\n        //                                 \\\"bridge\\\"\\n        //                             )}\\n        //                             className={\\n        //                                 citadelService === \\\"bridge\\\"\\n        //                                     ? \\\"is-active\\\"\\n        //                                     : \\\"\\\"\\n        //                             }\\n        //                         >\\n        //                             <a>\\n        //                                 <Translate content=\\\"gateway.bridge\\\" />\\n        //                             </a>\\n        //                         </li>\\n        //                     </ul>\\n        //                 </div>\\n        //                 <CitadelBridgeDepositRequest\\n        //                     gateway=\\\"citadel\\\"\\n        //                     issuer_account=\\\"citadel-wallet\\\"\\n        //                     account={account}\\n        //                     initial_deposit_input_coin_type=\\\"xmr\\\"\\n        //                     initial_deposit_output_coin_type=\\\"citadel.monero\\\"\\n        //                     initial_deposit_estimated_input_amount=\\\"1.0\\\"\\n        //                     initial_withdraw_input_coin_type=\\\"citadel.monero\\\"\\n        //                     initial_withdraw_output_coin_type=\\\"xmr\\\"\\n        //                     initial_withdraw_estimated_input_amount=\\\"1.0\\\"\\n        //                 />\\n        //             </div>\\n        //             <div className=\\\"content-block\\\" />\\n        //         </div>\\n        //     )\\n        // });\\n\\n        serList.push({\\n            name: \\\"BitKapital\\\",\\n            template: (\\n                <BitKapital\\n                    viewSettings={this.props.viewSettings}\\n                    account={account}\\n                />\\n            )\\n        });\\n\\n        serList.push({\\n            name: \\\"GDEX\\\",\\n            template: (\\n                <div>\\n                    <GdexGateway account={account} provider={\\\"gdex\\\"} />\\n                </div>\\n            )\\n        });\\n\\n        /***\\n         * Winex Dsiabled due to WebFetch issues on failure\\n         */\\n        // serList.push({\\n        //     name: \\\"Winex\\\",\\n        //     template: (\\n        //         <div>\\n        //             <WinexGateway account={account} provider=\\\"Winex\\\" />\\n        //         </div>\\n        //     )\\n        // });\\n\\n        return serList;\\n    }\\n\\n    render() {\\n        let {account, servicesDown} = this.props;\\n        let {activeService} = this.state;\\n\\n        let openLedgerGatewayCoins = this.props.openLedgerBackedCoins\\n            .map(coin => {\\n                return coin;\\n            })\\n            .sort((a, b) => {\\n                if (a.symbol < b.symbol) return -1;\\n                if (a.symbol > b.symbol) return 1;\\n                return 0;\\n            });\\n\\n        let rudexGatewayCoins = this.props.rudexBackedCoins\\n            .map(coin => {\\n                return coin;\\n            })\\n            .sort((a, b) => {\\n                if (a.symbol < b.symbol) return -1;\\n                if (a.symbol > b.symbol) return 1;\\n                return 0;\\n            });\\n\\n        let bitsparkGatewayCoins = this.props.bitsparkBackedCoins\\n            .map(coin => {\\n                return coin;\\n            })\\n            .sort((a, b) => {\\n                if (a.symbol < b.symbol) return -1;\\n                if (a.symbol > b.symbol) return 1;\\n                return 0;\\n            });\\n\\n        let xbtsxGatewayCoins = this.props.xbtsxBackedCoins\\n            .map(coin => {\\n                return coin;\\n            })\\n            .sort((a, b) => {\\n                if (a.symbol < b.symbol) return -1;\\n                if (a.symbol > b.symbol) return 1;\\n                return 0;\\n            });\\n\\n        let services = this.renderServices(\\n            openLedgerGatewayCoins,\\n            rudexGatewayCoins,\\n            bitsparkGatewayCoins,\\n            xbtsxGatewayCoins\\n        );\\n\\n        let options = services.map((services_obj, index) => {\\n            return (\\n                <option key={index} value={index}>\\n                    {services_obj.name}\\n                </option>\\n            );\\n        });\\n\\n        const serviceNames = [\\n            \\\"Winex\\\",\\n            \\\"GDEX\\\",\\n            \\\"OPEN\\\",\\n            \\\"RUDEX\\\",\\n            \\\"SPARKDEX\\\",\\n            \\\"TRADE\\\",\\n            \\\"BITKAPITAL\\\",\\n            \\\"XCTSX\\\",\\n            \\\"CITADEL\\\"\\n        ];\\n        const currentServiceName = serviceNames[activeService];\\n        const currentServiceDown = servicesDown.get(currentServiceName);\\n\\n        return (\\n            <div\\n                className={\\n                    this.props.contained ? \\\"grid-content\\\" : \\\"grid-container\\\"\\n                }\\n            >\\n                <div\\n                    className={this.props.contained ? \\\"\\\" : \\\"grid-content\\\"}\\n                    style={{paddingTop: \\\"2rem\\\"}}\\n                >\\n                    <div className=\\\"grid-block vertical medium-horizontal no-margin no-padding\\\">\\n                        <div style={{paddingBottom: \\\"1rem\\\"}}>\\n                            <DepositModal\\n                                ref=\\\"deposit_modal\\\"\\n                                modalId=\\\"deposit_modal_new\\\"\\n                                account={this.props.currentAccount}\\n                                backedCoins={this.props.backedCoins}\\n                            />\\n                            <WithdrawModal\\n                                ref=\\\"withdraw_modal\\\"\\n                                modalId=\\\"withdraw_modal_new\\\"\\n                                backedCoins={this.props.backedCoins}\\n                            />\\n                            <TranslateWithLinks\\n                                string=\\\"gateway.phase_out_warning\\\"\\n                                keys={[\\n                                    {\\n                                        arg: \\\"deposit_modal_link\\\",\\n                                        value: (\\n                                            <a\\n                                                onClick={() => {\\n                                                    if (this.refs.deposit_modal)\\n                                                        this.refs.deposit_modal.show();\\n                                                }}\\n                                            >\\n                                                <Translate content=\\\"modal.deposit.submit\\\" />\\n                                            </a>\\n                                        )\\n                                    },\\n                                    {\\n                                        arg: \\\"withdraw_modal_link\\\",\\n                                        value: (\\n                                            <a\\n                                                onClick={() => {\\n                                                    if (\\n                                                        this.refs.withdraw_modal\\n                                                    )\\n                                                        this.refs.withdraw_modal.show();\\n                                                }}\\n                                            >\\n                                                <Translate content=\\\"modal.withdraw.submit\\\" />\\n                                            </a>\\n                                        )\\n                                    }\\n                                ]}\\n                            />\\n                        </div>\\n                    </div>\\n                    <Translate content=\\\"gateway.title\\\" component=\\\"h2\\\" />\\n                    <div className=\\\"grid-block vertical medium-horizontal no-margin no-padding\\\">\\n                        <div className=\\\"medium-6 show-for-medium\\\">\\n                            <HelpContent\\n                                path=\\\"components/DepositWithdraw\\\"\\n                                section=\\\"deposit-short\\\"\\n                            />\\n                        </div>\\n                        <div className=\\\"medium-5 medium-offset-1\\\">\\n                            <HelpContent\\n                                account={account.get(\\\"name\\\")}\\n                                path=\\\"components/DepositWithdraw\\\"\\n                                section=\\\"receive\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                    <div>\\n                        <div className=\\\"grid-block vertical medium-horizontal no-margin no-padding\\\">\\n                            <div className=\\\"medium-6 small-order-2 medium-order-1\\\">\\n                                <Translate\\n                                    component=\\\"label\\\"\\n                                    className=\\\"left-label\\\"\\n                                    content=\\\"gateway.service\\\"\\n                                />\\n                                <select\\n                                    onChange={this.onSetService.bind(this)}\\n                                    className=\\\"bts-select\\\"\\n                                    value={activeService}\\n                                >\\n                                    {options}\\n                                </select>\\n                                {currentServiceDown ? (\\n                                    <Translate\\n                                        style={{\\n                                            color: \\\"red\\\",\\n                                            marginBottom: \\\"1em\\\",\\n                                            display: \\\"block\\\"\\n                                        }}\\n                                        content={`gateway.unavailable_${currentServiceName}`}\\n                                    />\\n                                ) : null}\\n                            </div>\\n                            <div\\n                                className=\\\"medium-5 medium-offset-1 small-order-1 medium-order-2\\\"\\n                                style={{paddingBottom: 20}}\\n                            >\\n                                <Translate\\n                                    component=\\\"label\\\"\\n                                    className=\\\"left-label\\\"\\n                                    content=\\\"gateway.your_account\\\"\\n                                />\\n                                <div className=\\\"inline-label\\\">\\n                                    <AccountImage\\n                                        size={{height: 40, width: 40}}\\n                                        account={account.get(\\\"name\\\")}\\n                                        custom_image={null}\\n                                    />\\n                                    <input\\n                                        type=\\\"text\\\"\\n                                        value={account.get(\\\"name\\\")}\\n                                        placeholder={null}\\n                                        disabled\\n                                        onChange={() => {}}\\n                                        onKeyDown={() => {}}\\n                                        tabIndex={1}\\n                                    />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div\\n                        className=\\\"grid-content no-padding\\\"\\n                        style={{paddingTop: 15}}\\n                    >\\n                        {currentServiceDown\\n                            ? null\\n                            : activeService && services[activeService]\\n                                ? services[activeService].template\\n                                : services[0].template}\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\nAccountDepositWithdraw = BindToChainState(AccountDepositWithdraw);\\n\\nclass DepositStoreWrapper extends React.Component {\\n    componentWillMount() {\\n        updateGatewayBackers();\\n    }\\n\\n    render() {\\n        return <AccountDepositWithdraw {...this.props} />;\\n    }\\n}\\n\\nexport default connect(\\n    DepositStoreWrapper,\\n    {\\n        listenTo() {\\n            return [AccountStore, SettingsStore, GatewayStore];\\n        },\\n        getProps() {\\n            return {\\n                currentAccount:\\n                    AccountStore.getState().currentAccount ||\\n                    AccountStore.getState().passwordAccount,\\n                account: AccountStore.getState().currentAccount,\\n                viewSettings: SettingsStore.getState().viewSettings,\\n                backedCoins: GatewayStore.getState().backedCoins,\\n                openLedgerBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"OPEN\\\",\\n                    []\\n                ),\\n                rudexBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"RUDEX\\\",\\n                    []\\n                ),\\n                bitsparkBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"SPARKDEX\\\",\\n                    []\\n                ),\\n                blockTradesBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"TRADE\\\",\\n                    []\\n                ),\\n                citadelBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"CITADEL\\\",\\n                    []\\n                ),\\n                winexBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"WIN\\\",\\n                    []\\n                ),\\n                xbtsxBackedCoins: GatewayStore.getState().backedCoins.get(\\n                    \\\"XCTSX\\\",\\n                    []\\n                ),\\n                servicesDown: GatewayStore.getState().down || {}\\n            };\\n        }\\n    }\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{2014:function(e,t,a){\"use strict\";var n=a(0),s=a.n(n),i=a(106),o=a(42),r=a(49),l=a(351),c=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),c(t,[{key:\"render\",value:function(){var e=this.props.asset.get(\"id\"),t=this.props.account.getIn([\"balances\",e]);return t?s.a.createElement(l.a,{balance:t,replace:this.props.replace}):s.a.createElement(\"span\",null,\"0 \",s.a.createElement(i.a,{name:this.props.asset.get(\"symbol\"),replace:this.props.replace}))}}]),t}();u.propTypes={account:o.a.ChainAccount.isRequired,asset:o.a.ChainAsset.isRequired},u.defaultProps={autosubscribe:!1},t.a=Object(r.a)(u)},2079:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(79),y=a(5),g=a(146),w=a(35),v=a(10),b=a(1),E=a.n(b),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},this._checkBalance)}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.m)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=void 0!==this.props.gateFee?parseFloat(String.prototype.replace.call(this.props.gateFee,/,/g,\"\")):0,r=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i}),l=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:0});void 0!==this.props.balance&&(l=r.clone(this.props.balance.get(\"balance\")));var c=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:o});r.plus(c),l.lt(r)&&(r=l),_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),r.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new w.i({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=(this.getWithdrawModalId(),null),u=null,d=null;this.state.options_is_valid&&(u=i.a.createElement(\"div\",{className:n.length?\"blocktrades-options\":\"blocktrades-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),d=i.a.createElement(v.Modal,{closable:!1,footer:[i.a.createElement(v.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(v.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var _=1,y=null;this.props.output_supports_memos&&(y=i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:_++,onChange:this.onMemoChanged.bind(this)})));var g=this._getAvailableAssets().fee_asset_types;if(l.length>0){var w=this.props.asset.get(\"id\");if(w){var b=o[w];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},b?i.a.createElement(p.a,{balance:o[w]}):0))}else s=\"No funds\"}else s=\"No funds\";var E=this.state.error||this.state.balanceError||!this.state.withdraw_amount;return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:0}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:g,tabIndex:_++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:this.props.gateFee}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"blocktrades-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"blocktrades-position-options\"},u),c),y,i.a.createElement(\"div\",null,i.a.createElement(v.Button,{type:\"primary\",disabled:E,onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(v.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),d))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:E.a.string.isRequired,output_coin_symbol:E.a.string.isRequired,output_coin_type:E.a.string.isRequired,url:E.a.string,output_wallet_type:E.a.string,output_supports_memos:E.a.bool.isRequired,amount_to_withdraw:E.a.string,balance:l.a.ChainObject},t.a=Object(c.a)(C)}).call(this,a(120).Buffer)},2080:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(79),y=a(5),g=a(146),w=a(35),v=a(10),b=a(1),E=a.n(b),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},this._checkBalance)}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.m)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=void 0!==this.props.gateFee?parseFloat(String.prototype.replace.call(this.props.gateFee,/,/g,\"\")):0,r=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i}),l=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:0});void 0!==this.props.balance&&(l=r.clone(this.props.balance.get(\"balance\")));var c=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:o});r.plus(c),l.lt(r)&&(r=l),_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),r.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new w.i({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=null,u=null,d=null;this.state.options_is_valid&&(u=i.a.createElement(\"div\",{className:n.length?\"blocktrades-options\":\"blocktrades-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),d=i.a.createElement(v.Modal,{closable:!1,footer:[i.a.createElement(v.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(v.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var _=1,y=null;this.props.output_supports_memos&&(y=i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:_++,onChange:this.onMemoChanged.bind(this)})));var g=this._getAvailableAssets().fee_asset_types;if(l.length>0){var w=this.props.asset.get(\"id\");if(w){var b=o[w];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},b?i.a.createElement(p.a,{balance:o[w]}):0))}else s=\"No funds\"}else s=\"No funds\";var E=this.state.error||this.state.balanceError||!this.state.withdraw_amount;return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:0}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:g,tabIndex:_++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:this.props.gateFee}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"blocktrades-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"blocktrades-position-options\"},u),c),y,i.a.createElement(\"div\",null,i.a.createElement(v.Button,{type:\"primary\",disabled:E,onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(v.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),d))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:E.a.string.isRequired,output_coin_symbol:E.a.string.isRequired,output_coin_type:E.a.string.isRequired,url:E.a.string,output_wallet_type:E.a.string,output_supports_memos:E.a.bool.isRequired,amount_to_withdraw:E.a.string,balance:l.a.ChainObject},t.a=Object(c.a)(C)}).call(this,a(120).Buffer)},2107:function(e,t,a){\"use strict\";a.d(t,\"b\",function(){return o}),a.d(t,\"c\",function(){return r}),a.d(t,\"a\",function(){return l});var n=a(55),s=a(45),i=new n.a(\"\");function o(e){var t=e.walletType,a=e.inputCoinType,n=e.outputCoinType,i=e.outputAddress,o=e.url,r=void 0===o?s.k.BASE:o,l=e.stateCallback,c={inputCoinType:a,outputCoinType:n,outputAddress:i},u=JSON.stringify(c);fetch(r+\"/wallets/\"+t+\"/new-deposit-address\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:u}).then(function(e){e.json().then(function(e){var t={address:e.inputAddress||\"unknown\",memo:e.inputMemo,error:e.error||null};l&&l(t)},function(e){l&&l({address:\"unknown\",memo:null})})},function(e){l&&l({address:\"unknown\",memo:null})}).catch(function(e){console.log(\"fetch error:\",e)})}function r(e){var t=e.url,a=void 0===t?s.k.BASE:t,n=e.walletType,i=e.newAddress;return i?fetch(a+\"/wallets/\"+n+\"/check-address\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:JSON.stringify({address:i})}).then(function(e){return e.json().then(function(e){return e.isValid})}).catch(function(e){console.log(\"validate error:\",e)}):new Promise(function(e){return e()})}var l={has:function(e){return i.has(\"history_address_\"+e)},set:function(e){var t=e.wallet,a=e.addresses;i.set(\"history_address_\"+t,a)},get:function(e){return i.get(\"history_address_\"+e,[])},setLast:function(e){var t=e.wallet,a=e.address;i.set(\"history_address_last_\"+t,a)},getLast:function(e){return i.get(\"history_address_last_\"+e,\"\")}}},2195:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(6),i=a.n(s),o=a(0),r=a.n(o),l=a(2),c=a.n(l),u=a(42),p=a(49),d=a(2014),m=a(2080),h=a(569),_=a(15),f=a(39),y=a(74),g=a(45),w=a(146),v=a(35),b=a(79),E=a(1),k=a.n(E),C=a(10),S=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var a=[],n=!0,s=!1,i=void 0;try{for(var o,r=e[Symbol.iterator]();!(n=(o=r.next()).done)&&(a.push(o.value),!t||a.length!==t);n=!0);}catch(e){s=!0,i=e}finally{try{!n&&r.return&&r.return()}finally{if(s)throw i}}return a}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),A=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();function O(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function N(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function x(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function T(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var j=function(t){function a(e){N(this,a);var t=x(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={error:null,conversion_memo:null,feeStatus:{}},t._updateFee=Object(n.a)(t._updateFee.bind(t),150),t._checkFeeStatus=t._checkFeeStatus.bind(t),t._checkBalance=t._checkBalance.bind(t),t}return T(a,r.a.Component),A(a,[{key:\"_getFeeID\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,t=this._getCurrentBalance(e);return e.account.get(\"balances\").has(\"1.3.0\")?\"1.3.0\":t?t.get(\"asset_type\"):\"1.3.0\"}},{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){e.amount.equals(this.props.amount)&&e.account_id===this.props.account_id||this._updateFee()}},{key:\"_updateFee\",value:function(){var e=this,t=this._getFeeID();Object(b.i)(this.props).then(function(a){Object(w.b)({accountID:e.props.account_id,feeID:t,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:a.inputMemo}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkFeeStatus)})})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props.account;if(t){var a=Object.keys(this.props.account.get(\"balances\").toJS());a.length||(a=[\"1.3.0\"]);var n={},s=[];Object(b.i)(this.props).then(function(i){a.forEach(function(e){s.push(Object(w.b)({accountID:t.get(\"id\"),feeID:e,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:i.inputMemo}}))}),Promise.all(s).then(function(t){e.unMounted||(a.forEach(function(e,a){n[e]=t[a]}),_.a.are_equal_shallow(e.state.feeStatus,n)||e.setState({feeStatus:n}),e._checkBalance())}).catch(function(e){console.error(e)})})}}},{key:\"_getCurrentBalance\",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props).balance}},{key:\"_checkBalance\",value:function(){var e=this.state.feeAmount,t=this.props,a=t.asset,n=t.amount,s=this._getCurrentBalance();if(s&&e){var i=Object(w.a)(n.getAmount({real:!0}),a,e,s);if(null!==i)return this.setState({balanceError:!i}),i}}},{key:\"onTrxIncluded\",value:function(e){e.included&&e.broadcasted_transaction?(y.a.unlisten(this.onTrxIncluded),y.a.reset()):e.closed&&(y.a.unlisten(this.onTrxIncluded),y.a.reset())}},{key:\"onConvert\",value:function(){var t=this,a=this.props,n=a.input_coin_type,s=a.output_coin_type,i=a.amount,o=this.state.balanceError;Object(b.i)(this.props).then(function(a){if(a.inputCoinType!=n||a.outputCoinType!=s)throw new Error(\"unexpected reply from initiate-trade\");n!=a.inputCoinType||s!=a.outputCoinType||o||(t.setState({conversion_memo:a.inputMemo}),t.setState({error:null}),f.a.transfer(t.props.account_id,\"1.2.32567\",i.getAmount(),t.props.asset.get(\"id\"),a.inputMemo?new e(a.inputMemo,\"utf-8\"):\"\",null,t._getFeeID()).then(function(){y.a.unlisten(t.onTrxIncluded),y.a.listen(t.onTrxIncluded)}).catch(function(e){var a=e.message?e.message.split(\"\\n\")[1]:null;console.log(\"error: \",e,a),t.setState({error:a})}))}).catch(function(){t.setState({conversion_memo:null})})}},{key:\"render\",value:function(){var e=\"button disabled\";return Object.keys(this.props.account_balances.toJS()).includes(this.props.asset.get(\"id\"))&&!this.state.balanceError&&this.state.hasBalance&&this.props.amount.getAmount()>0&&(e=\"button\"),r.a.createElement(\"span\",null,r.a.createElement(\"button\",{className:e,onClick:this.onConvert.bind(this)},r.a.createElement(c.a,{content:\"\"}),r.a.createElement(c.a,{content:\"gateway.convert_now\"})),this.state.balanceError?r.a.createElement(\"div\",{style:{paddingTop:15},className:\"has-error\"},r.a.createElement(c.a,{content:\"transfer.errors.insufficient\"})):null)}}]),a}();j.propTypes={balance:u.a.ChainObject,input_coin_type:k.a.string.isRequired,output_coin_type:k.a.string.isRequired,account_name:k.a.string.isRequired,account_id:k.a.string.isRequired,url:k.a.string.isRequired},j=Object(p.a)(j);var M=function(e){function t(){return N(this,t),x(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return T(t,r.a.Component),A(t,[{key:\"render\",value:function(){var e=r.a.createElement(j,{asset:this.props.asset,account:this.props.account,input_coin_type:this.props.input_coin_type,output_coin_type:this.props.output_coin_type,account_name:this.props.account_name,amount:new v.a({real:this.props.amount,asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")}),account_id:this.props.account_id,account_balances:this.props.account_balances,url:this.props.url,balance:this.props.account.get(\"balances\").toJS()[this.props.asset.get(\"id\")]});return r.a.createElement(\"span\",null,e)}}]),t}();M.propTypes={asset:u.a.ChainAsset.isRequired,input_coin_type:k.a.string.isRequired,output_coin_type:k.a.string.isRequired,account_name:k.a.string.isRequired,account_id:k.a.string.isRequired,url:k.a.string.isRequired},M=Object(p.a)(M);var I=function(e){function t(){return N(this,t),x(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return T(t,r.a.Component),A(t,[{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.gateway+\"_bridge\"}},{key:\"onWithdraw\",value:function(){this.props.showModal()}},{key:\"render\",value:function(){var e=\"button disabled\";return Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))&&this.props.amount_to_withdraw&&!(this.props.amount_to_withdraw.indexOf(\" \")>=0)&&!isNaN(this.props.amount_to_withdraw)&&this.props.amount_to_withdraw>0&&this.props.amount_to_withdraw<=this.props.balance.toJS().balance/_.a.get_asset_precision(this.props.asset.get(\"precision\"))&&(e=\"button\"),r.a.createElement(\"span\",null,r.a.createElement(\"span\",null,r.a.createElement(\"button\",{className:e,onClick:this.onWithdraw.bind(this)},r.a.createElement(c.a,{content:\"\"}),r.a.createElement(c.a,{content:\"gateway.withdraw_now\"}),\" \")),r.a.createElement(C.Modal,{closable:!1,onCancel:this.props.hideModal,title:i.a.translate(\"gateway.withdraw_coin\",{coin:this.props.output_coin_name,symbol:this.props.output_coin_symbol}),footer:null,visible:this.props.visible,overlay:!0},r.a.createElement(m.a,{hideModal:this.props.hideModal,key:\"\"+this.props.key,account:this.props.account.get(\"name\"),issuer:this.props.issuer,asset:this.props.asset.get(\"id\"),output_coin_name:this.props.output_coin_name,output_coin_symbol:this.props.output_coin_symbol,output_coin_type:this.props.output_coin_type,output_supports_memos:this.props.output_supports_memos,amount_to_withdraw:this.props.amount_to_withdraw,url:this.props.url,output_wallet_type:this.props.output_wallet_type,balance:this.props.account.get(\"balances\").toJS()[this.props.asset.get(\"id\")]})))}}]),t}();I.propTypes={balance:u.a.ChainObject,url:k.a.string.isRequired},I=Object(p.a)(I);var B=function(e){function t(){return N(this,t),x(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return T(t,r.a.Component),A(t,[{key:\"render\",value:function(){var e=r.a.createElement(I,{visible:this.props.visible,hideModal:this.props.hideModal,showModal:this.props.showModal,key:this.props.key,account:this.props.account,issuer:this.props.issuer,asset:this.props.asset,output_coin_name:this.props.output_coin_name,output_coin_symbol:this.props.output_coin_symbol,output_coin_type:this.props.output_coin_type,output_supports_memos:this.props.output_supports_memos,amount_to_withdraw:this.props.amount_to_withdraw,url:this.props.url,gateway:this.props.gateway,output_wallet_type:this.props.output_wallet_type,balance:this.props.account.get(\"balances\").toJS()[this.props.asset.get(\"id\")]});return r.a.createElement(\"span\",null,e)}}]),t}();B.propTypes={account:u.a.ChainAccount.isRequired,asset:u.a.ChainAsset.isRequired,output_coin_type:k.a.string.isRequired,url:k.a.string.isRequired},B=Object(p.a)(B);var P=function(e){function t(e){N(this,t);var a=x(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.refresh_interval=12e4,a.deposit_address_cache=new h.a,a.coin_info_request_states={request_in_progress:0,request_complete:1,request_failed:2},a.estimation_directions={output_from_input:0,input_from_output:1},a.state={isModalVisible:!1,coin_symbol:\"btc\",key_for_withdrawal_dialog:\"btc\",supports_output_memos:\"\",url:g.b.BASE,error:null,deposit_input_coin_type:null,deposit_output_coin_type:null,input_address_and_memo:null,deposit_estimated_input_amount:a.props.initial_deposit_estimated_input_amount||\"1.0\",deposit_estimated_output_amount:null,deposit_limit:null,deposit_error:null,failed_calculate_deposit:null,withdraw_input_coin_type:null,withdraw_output_coin_type:null,withdraw_estimated_input_amount:a.props.initial_withdraw_estimated_input_amount||\"1.0\",withdraw_estimated_output_amount:null,withdraw_limit:null,withdraw_error:null,failed_calculate_withdraw:null,conversion_input_coin_type:null,conversion_output_coin_type:null,conversion_estimated_input_amount:a.props.initial_conversion_estimated_input_amount||\"1.0\",conversion_estimated_output_amount:null,conversion_limit:null,conversion_error:null,failed_calculate_conversion:null,coin_info_request_state:a.coin_info_request_states.request_in_progress,input_address_requests_in_progress:{},deposit_estimate_direction:a.estimation_directions.output_from_input,deposit_limit_cache:{},deposit_limit_requests_in_progress:{},coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null,allowed_mappings_for_conversion:null,conversion_memo:null,announcements:[]},a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return T(t,r.a.Component),A(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"urlConnection\",value:function(e,t){var a=this;this.setState({url:e});var n=fetch(e+\"/announcements/enabled/trade\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()});Promise.resolve(n).then(function(e){e.sort(function(e,t){return e.priority<t.priority?-1:e.priority>t.priority?1:0}),a.setState({announcements:e})}).catch(function(e){a.setState({announcements:[]})});var s=fetch(e+\"/coins\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),i=fetch(e+\"/wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),o=fetch(e+\"/trading-pairs\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),r=fetch(e+\"/active-wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()});Promise.all([s,i,o,r]).then(function(e){var t=S(e,4),n=t[0],s=(t[1],t[2]),i=t[3],o={};n.forEach(function(e){return o[e.coinType]=e});var r={},l={},c={};s.forEach(function(e){var t=o[e.inputCoinType],a=o[e.outputCoinType];t.backingCoinType!=e.outputCoinType&&a&&a.backingCoinType!=e.inputCoinType&&t&&0==t.restricted&&0==a.restricted&&-1!=i.indexOf(t.walletType)&&-1!=i.indexOf(a.walletType)&&(\"bitshares2\"!=t.walletType&&\"bitshares2\"==a.walletType?(r[e.inputCoinType]=r[e.inputCoinType]||[],r[e.inputCoinType].push(e.outputCoinType)):\"bitshares2\"==t.walletType&&\"bitshares2\"!=a.walletType?(l[e.inputCoinType]=l[e.inputCoinType]||[],l[e.inputCoinType].push(e.outputCoinType)):\"bitshares2\"==t.walletType&&\"bitshares2\"==a.walletType&&(c[e.inputCoinType]=c[e.inputCoinType]||[],c[e.inputCoinType].push(e.outputCoinType)))});var u=null,p=null,d=Object.keys(r);if(d.forEach(function(e){r[e].sort()}),d.length){u=a.props.initial_deposit_input_coin_type&&a.props.initial_deposit_input_coin_type in r?a.props.initial_deposit_input_coin_type:d[0];var m=r[u];p=a.props.initial_deposit_output_coin_type&&-1!=m.indexOf(a.props.initial_deposit_output_coin_type)?a.props.initial_deposit_output_coin_type:m[0]}var h=null,_=null,f=null,y=null,g=Object.keys(l);if(g.forEach(function(e){l[e].sort()}),g.length){h=a.props.initial_withdraw_input_coin_type&&a.props.initial_withdraw_input_coin_type in l?a.props.initial_withdraw_input_coin_type:g[0];var w=l[h];_=a.props.initial_withdraw_output_coin_type&&-1!=w.indexOf(a.props.initial_withdraw_output_coin_type)?a.props.initial_withdraw_output_coin_type:w[0]}var v=Object.keys(c);if(v.forEach(function(e){c[e].sort()}),v.length){f=a.props.initial_conversion_input_coin_type&&a.props.initial_conversion_input_coin_type in c?a.props.initial_conversion_input_coin_type:v[0];var b=c[f];y=a.props.initial_conversion_output_coin_type&&-1!=b.indexOf(a.props.initial_conversion_output_coin_type)?a.props.initial_conversion_output_coin_type:b[0]}var E=a.getCachedOrGeneratedInputAddress(u,p),k=a.getCachedOrFreshDepositLimit(\"deposit\",u,p),C=a.getAndUpdateOutputEstimate(\"deposit\",u,p,a.state.deposit_estimated_input_amount),A=a.getAndUpdateOutputEstimate(\"withdraw\",h,_,a.state.withdraw_estimated_input_amount),O=a.getCachedOrFreshDepositLimit(\"withdraw\",h,_),N=a.getAndUpdateOutputEstimate(\"conversion\",f,y,a.state.conversion_estimated_input_amount),x=a.getCachedOrFreshDepositLimit(\"conversion\",f,y);a.unMounted||a.setState({coin_info_request_state:a.coin_info_request_states.request_complete,coins_by_type:o,allowed_mappings_for_deposit:r,allowed_mappings_for_withdraw:l,allowed_mappings_for_conversion:c,deposit_input_coin_type:u,deposit_output_coin_type:p,input_address_and_memo:E,deposit_limit:k,deposit_estimated_output_amount:C,deposit_estimate_direction:a.estimation_directions.output_from_input,withdraw_input_coin_type:h,withdraw_output_coin_type:_,withdraw_limit:O,withdraw_estimated_output_amount:A,conversion_input_coin_type:f,conversion_output_coin_type:y,conversion_limit:x,conversion_estimated_output_amount:N,withdraw_estimate_direction:a.estimation_directions.output_from_input,conversion_estimate_direction:a.estimation_directions.output_from_input,supports_output_memos:o.btc.supportsOutputMemos})}).catch(function(e){a.setState({coin_info_request_state:t,coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null,allowed_mappings_for_conversion:null})})}},{key:\"updateEstimates\",value:function(){if(this.state.deposit_input_coin_type&&this.state.deposit_output_coin_type){var e=this.getCachedOrGeneratedInputAddress(this.state.deposit_input_coin_type,this.state.deposit_output_coin_type),t=this.getCachedOrFreshDepositLimit(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type),a=this.state.deposit_estimated_input_amount,n=this.state.deposit_estimated_output_amount;this.state.deposit_estimate_direction==this.estimation_directions.output_from_input?n=this.getAndUpdateOutputEstimate(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type,a):a=this.getAndUpdateInputEstimate(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type,n);var s=this.getCachedOrFreshDepositLimit(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type),i=this.state.withdraw_estimated_input_amount,o=this.state.withdraw_estimated_output_amount;this.state.withdraw_estimate_direction==this.estimation_directions.output_from_input?o=this.getAndUpdateOutputEstimate(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type,i):i=this.getAndUpdateinputEstimate(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type,o);var r=this.getCachedOrFreshDepositLimit(\"conversion\",this.state.conversion_input_coin_type,this.state.conversion_output_coin_type),l=this.state.conversion_estimated_input_amount,c=this.state.conversion_estimated_output_amount;this.state.conversion_estimate_direction==this.estimation_directions.output_from_input?c=this.getAndUpdateOutputEstimate(\"conversion\",this.state.conversion_input_coin_type,this.state.conversion_output_coin_type,l):l=this.getAndUpdateinputEstimate(\"conversion\",this.state.conversion_input_coin_type,this.state.conversion_output_coin_type,c),this.setState({input_address_and_memo:e,deposit_limit:t,deposit_estimated_input_amount:a,deposit_estimated_output_amount:n,withdraw_limit:s,withdraw_estimated_input_amount:i,withdraw_estimated_output_amount:o,conversion_limit:r,conversion_estimated_input_amount:l,conversion_estimated_output_amount:c,key_for_withdrawal_dialog:i})}}},{key:\"componentWillMount\",value:function(){var e=this,t=this.state.url;this.urlConnection(t,0);var a=fetch(t+\"/coins\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),n=fetch(t+\"/trading-pairs\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),s=fetch(t+\"/active-wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()});Promise.all([a,n,s]).then(function(e){var t=S(e,3),a=t[0],n=t[1],s=t[2],i={};a.forEach(function(e){return i[e.coinType]=e}),n.forEach(function(e){var t=i[e.inputCoinType],a=i[e.outputCoinType];a&&a.backingCoinType!=e.inputCoinType&&t&&t.backingCoinType!=e.outputCoinType&&-1!=s.indexOf(t.walletType)&&s.indexOf(a.walletType)})}).catch(function(t){e.urlConnection(\"https://api.blocktrades.info/v2\",2),e.setState({coin_info_request_state:0,coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null,allowed_mappings_for_conversion:null})})}},{key:\"componentDidMount\",value:function(){this.update_timer=setInterval(this.updateEstimates.bind(this),this.refresh_interval)}},{key:\"componentWillUnmount\",value:function(){clearInterval(this.update_timer),this.unMounted=!0}},{key:\"getCachedInputAddress\",value:function(e,t,a){var n=this.props.account.get(\"name\");return this.deposit_address_cache.getCachedInputAddress(this.props.gateway,n,e,t)}},{key:\"cacheInputAddress\",value:function(e,t,a,n){var s=this.props.account.get(\"name\");this.deposit_address_cache.cacheInputAddress(this.props.gateway,s,e,t,a,n)}},{key:\"getCachedOrGeneratedInputAddress\",value:function(e,t){var a=this,n=this.getCachedInputAddress(e,t);if(n)return n;if(this.state.input_address_requests_in_progress[e]=this.state.input_address_requests_in_progress[e]||{},this.state.input_address_requests_in_progress[e][t])return null;var s=JSON.stringify({inputCoinType:e,outputCoinType:t,outputAddress:this.props.account.get(\"name\")});return this.state.input_address_requests_in_progress[e][t]=!0,fetch(this.state.url+\"/simple-api/initiate-trade\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:s}).then(function(n){n.json().then(function(n){if(console.assert(n.inputCoinType==e,\"unexpected reply from initiate-trade\"),console.assert(n.outputCoinType==t,\"unexpected reply from initiate-trade\"),n.inputCoinType!=e||n.outputCoinType!=t)throw Error(\"unexpected reply from initiate-trade\");a.cacheInputAddress(n.inputCoinType,n.outputCoinType,n.inputAddress,n.inputMemo),delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==n.inputCoinType&&a.state.deposit_output_coin_type==n.outputCoinType&&a.setState({input_address_and_memo:{address:n.inputAddress,memo:n.inputMemo}})},function(n){delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==e&&a.state.deposit_output_coin_type==t&&a.setState({input_address_and_memo:{address:\"error generating address\",memo:null}})})},function(n){delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==e&&a.state.deposit_output_coin_type==t&&a.setState({input_address_and_memo:{address:\"error generating address\",memo:null}})}),null}},{key:\"getCachedDepositLimit\",value:function(e,t){if(this.state.deposit_limit_cache[e]=this.state.deposit_limit_cache[e]||{},this.state.deposit_limit_cache[e][t]){var a=this.state.deposit_limit_cache[e][t];if(new Date-a.timestamp<this.refresh_interval)return a;delete this.state.deposit_limit_cache[e][t]}return null}},{key:\"cacheDepositLimit\",value:function(e,t,a){a.timestamp=new Date,this.state.deposit_limit_cache[e]=this.state.deposit_limit_cache[e]||{},this.state.deposit_limit_cache[e][t]=a}},{key:\"getCachedOrFreshDepositLimit\",value:function(e,t,a){var n=this,s=this.getCachedDepositLimit(t,a);if(s)return s;this.state.deposit_limit_requests_in_progress[t]=this.state.input_address_requests_in_progress[t]||{},this.state.deposit_limit_requests_in_progress[t][a]=!0;var i=this.state.url+\"/deposit-limits?inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(s){if(!n.unMounted){if(console.assert(s.inputCoinType==t&&s.outputCoinType==a,\"unexpected reply from deposit-limits\"),s.inputCoinType!=t||s.outputCoinType!=a)throw Error(\"unexpected reply from deposit-limits\");var i={timestamp:new Date,limit:s.depositLimit};n.cacheDepositLimit(t,a,i),delete n.state.deposit_limit_requests_in_progress[t][a],n.state[e+\"_input_coin_type\"]==t&&n.state[e+\"_output_coin_type\"]==a&&n.setState(O({},e+\"_limit\",i))}},function(e){delete n.state.deposit_limit_requests_in_progress[t][a]}),null}},{key:\"getAndUpdateOutputEstimate\",value:function(e,t,a,n){var s=this;if(!this.unMounted){\"deposit\"==e&&this.setState({failed_calculate_deposit:null}),\"withdraw\"==e&&this.setState({failed_calculate_withdraw:null}),\"conversion\"==e&&this.setState({failed_calculate_conversion:null});var i=this.state.url+\"/estimate-output-amount?inputAmount=\"+encodeURIComponent(n)+\"&inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(i){if(!s.unMounted)if(i.error){if(s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_input_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.output_from_input){var o=i.error.message;\"deposit\"==e&&s.setState({failed_calculate_deposit:\"Failed to calculate\"}),\"withdraw\"==e&&s.setState({failed_calculate_withdraw:\"Failed to calculate\"}),\"conversion\"==e&&s.setState({failed_calculate_conversion:\"Failed to calculate\"});o.startsWith(\"Internal Server Error: \")&&(o=o.substr(\"Internal Server Error: \".length)),s.setState(O({},e+\"_error\",o))}}else{var r;if(console.assert(i.inputCoinType==t&&i.outputCoinType==a&&i.inputAmount==n,\"unexpected reply from estimate-output-amount\"),i.inputCoinType!=t||i.outputCoinType!=a||i.inputAmount!=n)throw Error(\"unexpected reply from estimate-output-amount\");s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_input_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.output_from_input&&s.setState((O(r={},e+\"_estimated_output_amount\",i.outputAmount),O(r,e+\"_error\",null),r))}},function(e){}),null}}},{key:\"getAndUpdateInputEstimate\",value:function(e,t,a,n){var s=this;if(!this.unMounted){\"deposit\"==e&&this.setState({failed_calculate_deposit:null}),\"withdraw\"==e&&this.setState({failed_calculate_withdraw:null}),\"conversion\"==e&&this.setState({failed_calculate_conversion:null});var i=this.state.url+\"/estimate-input-amount?outputAmount=\"+encodeURIComponent(n)+\"&inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(i){var o;s.unMounted||(console.assert(i.inputCoinType==t&&i.outputCoinType==a&&i.outputAmount==n,\"unexpected reply from estimate-input-amount\"),i.inputCoinType==t&&i.outputCoinType==a&&i.outputAmount==n||(\"deposit\"==e&&s.setState({failed_calculate_deposit:\"Failed to calculate\"}),\"withdraw\"==e&&s.setState({failed_calculate_withdraw:\"Failed to calculate\"}),\"conversion\"==e&&s.setState({failed_calculate_conversion:\"Failed to calculate\"})),s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_output_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.input_from_output&&s.setState((O(o={},e+\"_estimated_input_amount\",i.inputAmount),O(o,\"key_for_withdrawal_dialog\",i.inputAmount),o)))},function(e){}),null}}},{key:\"onInputAmountChanged\",value:function(e,t){var a,n=t.target.value;\"\"==n&&(n=\"0\");var s=this.getAndUpdateOutputEstimate(e,this.state[e+\"_input_coin_type\"],this.state[e+\"_output_coin_type\"],n);this.setState((O(a={},e+\"_estimated_input_amount\",n),O(a,e+\"_estimated_output_amount\",s),O(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),O(a,\"key_for_withdrawal_dialog\",n),a))}},{key:\"onOutputAmountChanged\",value:function(e,t){var a,n=t.target.value;\"\"==n&&(n=\"0\");var s=this.getAndUpdateInputEstimate(e,this.state[e+\"_input_coin_type\"],this.state[e+\"_output_coin_type\"],n);this.setState((O(a={},e+\"_estimated_output_amount\",n),O(a,e+\"_estimated_input_amount\",s),O(a,e+\"_estimate_direction\",this.estimation_directions.input_from_output),a))}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.gateway+\"_bridge\"}},{key:\"onInputCoinTypeChanged\",value:function(e,t){var a,n=this,s=null,i=\"_estimated_output_amount\",o=t.target.value,r=this.state[\"allowed_mappings_for_\"+e][o],l=r[0];-1!=r.indexOf(this.state[e+\"_output_coin_type\"])&&(l=this.state[e+\"_output_coin_type\"]);var c=this.state.input_address_and_memo;\"deposit\"==e&&(c=this.getCachedOrGeneratedInputAddress(o,l));var u=this.getCachedOrFreshDepositLimit(e,o,l);this.state[e+\"_estimated_input_amount\"]?s=this.getAndUpdateOutputEstimate(e,o,l,this.state[e+\"_estimated_input_amount\"]):(s=this.getAndUpdateInputEstimate(e,o,l,this.state[e+\"_estimated_output_amount\"]),i=\"_estimated_input_amount\"),\"withdraw\"==e&&r.forEach(function(e){l===e&&n.setState({coin_symbol:o+\"input\",supports_output_memos:n.state.coins_by_type[e].supportsOutputMemos})}),this.setState((O(a={},e+\"_input_coin_type\",o),O(a,e+\"_output_coin_type\",l),O(a,\"input_address_and_memo\",c),O(a,e+\"_limit\",u),O(a,e+i,s),O(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),a))}},{key:\"onOutputCoinTypeChanged\",value:function(e,t){var a,n=this,s=null,i=\"_estimated_output_amount\",o=t.target.value,r=this.state.allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type];\"withdraw\"==e&&r.forEach(function(e){o===e&&n.setState({coin_symbol:o+\"output\",supports_output_memos:n.state.coins_by_type[e].supportsOutputMemos,key_for_withdrawal_dialog:o})});var l=this.state.input_address_and_memo;\"deposit\"==e&&(l=this.getCachedOrGeneratedInputAddress(this.state[e+\"_input_coin_type\"],o));var c=this.getCachedOrFreshDepositLimit(e,this.state[e+\"_input_coin_type\"],o);this.state[e+\"_estimated_input_amount\"]?s=this.getAndUpdateOutputEstimate(e,this.state[e+\"_input_coin_type\"],o,this.state[e+\"_estimated_input_amount\"]):(s=this.getAndUpdateInputEstimate(e,this.state[e+\"_input_coin_type\"],o,this.state[e+\"_estimated_output_amount\"]),i=\"_estimated_input_amount\"),this.setState((O(a={},e+\"_output_coin_type\",o),O(a,\"input_address_and_memo\",l),O(a,e+\"_limit\",c),O(a,e+i,s),O(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),a))}},{key:\"render\",value:function(){var e=this;if(!this.props.account||!this.props.issuer_account||!this.props.gateway)return r.a.createElement(\"div\",null);var t=void 0,a=void 0,n=void 0,s=void 0,i=void 0,o=void 0,l=void 0;if(this.state.coin_info_request_state==this.coin_info_request_states.request_failed)return r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,\"Error connecting to blocktrades.us, please try again later\"));if(this.state.coin_info_request_state==this.coin_info_request_states.never_requested||this.state.coin_info_request_state==this.coin_info_request_states.request_in_progress)return r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,\"Retrieving current trade data from blocktrades.us\"));var u=null,p=r.a.createElement(c.a,{content:\"gateway.calc\"});null!=this.state.failed_calculate_deposit&&(p=this.state.failed_calculate_deposit);var m=r.a.createElement(c.a,{content:\"gateway.calc\"});null!=this.state.failed_calculate_withdraw&&(m=this.state.failed_calculate_withdraw);var h=r.a.createElement(c.a,{content:\"gateway.calc\"});if(null!=this.state.failed_calculate_conversion&&(h=this.state.failed_calculate_conversion),Object.getOwnPropertyNames(this.state.allowed_mappings_for_deposit).length>0){var f=[];Object.keys(this.state.allowed_mappings_for_deposit).sort().forEach(function(t){f.push(r.a.createElement(\"option\",{key:t,value:t||\"\"},e.state.coins_by_type[t].symbol))});var y=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"external-coin-types\",value:this.state.deposit_input_coin_type||\"\",onChange:this.onInputCoinTypeChanged.bind(this,\"deposit\")},f),g=[];this.state.allowed_mappings_for_deposit[this.state.deposit_input_coin_type].forEach(function(t){g.push(r.a.createElement(\"option\",{key:t,value:t||\"\"},e.state.coins_by_type[t].walletSymbol))});var w=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"native-coin-types\",value:this.state.deposit_output_coin_type||\"\",onChange:this.onOutputCoinTypeChanged.bind(this,\"deposit\")},g),v=this.state.input_address_and_memo?this.state.input_address_and_memo:{address:\"unknown\",memo:null},b=this.state.deposit_estimated_input_amount,E=this.state.deposit_estimated_output_amount,k=b?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:b||\"\",onChange:this.onInputAmountChanged.bind(this,\"deposit\")}):p,C=E?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:E||\"\",onChange:this.onOutputAmountChanged.bind(this,\"deposit\")}):p,S=r.a.createElement(\"span\",null,\"updating\");this.state.deposit_limit&&(S=this.state.deposit_limit.limit?r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"span\",{className:\"deposit-limit\"},r.a.createElement(c.a,{content:\"gateway.limit\",amount:_.a.format_number(this.state.deposit_limit.limit,8),symbol:this.state.coins_by_type[this.state.deposit_input_coin_type].walletSymbol}))):null);var A=null;this.state.deposit_error&&(A=r.a.createElement(\"div\",null,this.state.deposit_error)),n=r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.deposit\"})),r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.balance\"})),r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.deposit_to\",asset:this.state.deposit_input_coin_type}))));var O=null;O=v.memo?r.a.createElement(c.a,{unsafe:!0,content:\"gateway.address_with_memo\",address:v.address,memo:v.memo}):r.a.createElement(\"span\",null,v.address),a=r.a.createElement(\"tbody\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"td\",null,r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,y),r.a.createElement(\"div\",null,k)),\"→\",r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,w),r.a.createElement(\"div\",null,C)),r.a.createElement(\"div\",null,A))),r.a.createElement(\"td\",null,r.a.createElement(d.a,{account:this.props.account.get(\"name\"),asset:this.state.coins_by_type[this.state.deposit_output_coin_type].walletSymbol})),r.a.createElement(\"td\",null,O,r.a.createElement(\"br\",null),S)))}if(Object.getOwnPropertyNames(this.state.allowed_mappings_for_withdraw).length>0){this.state.coins_by_type[this.state.withdraw_input_coin_type].symbol;u=this.state.withdraw_estimated_input_amount;var N=[];Object.keys(this.state.allowed_mappings_for_withdraw).sort().forEach(function(t){N.push(r.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].walletSymbol))});var x=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"native-coin-types\",value:this.state.withdraw_input_coin_type,onChange:this.onInputCoinTypeChanged.bind(this,\"withdraw\")},N),T=[];this.state.allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type].forEach(function(t){T.push(r.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].symbol))});var j=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"external-coin-types\",value:this.state.withdraw_output_coin_type,onChange:this.onOutputCoinTypeChanged.bind(this,\"withdraw\")},T),I=this.state.withdraw_estimated_input_amount,P=I?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:I||\"\",onChange:this.onInputAmountChanged.bind(this,\"withdraw\")}):m,D=this.state.withdraw_estimated_output_amount,F=D?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:D||\"\",onChange:this.onOutputAmountChanged.bind(this,\"withdraw\")}):m,W=r.a.createElement(B,{visible:this.state.isModalVisible,hideModal:this.hideModal,showModal:this.showModal,key:this.state.key_for_withdrawal_dialog,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol,output_coin_name:this.state.coins_by_type[this.state.withdraw_output_coin_type].name,output_coin_symbol:this.state.coins_by_type[this.state.withdraw_output_coin_type].symbol,output_coin_type:this.state.withdraw_output_coin_type,output_supports_memos:this.state.supports_output_memos,amount_to_withdraw:u,url:this.state.url,gateway:this.props.gateway,output_wallet_type:this.state.coins_by_type[this.state.withdraw_output_coin_type].walletType}),R=null;this.state.withdraw_error&&(R=r.a.createElement(\"div\",null,this.state.withdraw_error));var q=r.a.createElement(\"span\",null,\"...\");this.state.withdraw_limit&&(q=this.state.withdraw_limit.limit?r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"span\",{className:\"deposit-limit\"},r.a.createElement(c.a,{content:\"gateway.limit\",amount:_.a.format_number(this.state.withdraw_limit.limit,8),symbol:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol}))):r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"span\",{className:\"deposit-limit\"},\"no limit\"))),i=r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.withdraw\"})),r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.balance\"})),r.a.createElement(\"th\",null))),s=r.a.createElement(\"tbody\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"td\",null,r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,x),r.a.createElement(\"div\",null,P)),\"→\",r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,j),r.a.createElement(\"div\",null,F)),r.a.createElement(\"div\",null,R))),r.a.createElement(\"td\",null,r.a.createElement(d.a,{account:this.props.account.get(\"name\"),asset:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol})),r.a.createElement(\"td\",null,W,r.a.createElement(\"br\",null),q)))}if(Object.getOwnPropertyNames(this.state.allowed_mappings_for_conversion).length>0){var L=[];Object.keys(this.state.allowed_mappings_for_conversion).sort().forEach(function(t){L.push(r.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].walletSymbol))});var U=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"native-coin-types\",value:this.state.conversion_input_coin_type,onChange:this.onInputCoinTypeChanged.bind(this,\"conversion\")},L),V=[];this.state.allowed_mappings_for_conversion[this.state.conversion_input_coin_type].forEach(function(t){V.push(r.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].symbol))});var H=r.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"external-coin-types\",value:this.state.conversion_output_coin_type,onChange:this.onOutputCoinTypeChanged.bind(this,\"conversion\")},V),J=this.state.conversion_estimated_input_amount,G=J?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:J||\"\",onChange:this.onInputAmountChanged.bind(this,\"conversion\")}):h,X=this.state.conversion_estimated_output_amount,z=X?r.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:X||\"\",onChange:this.onOutputAmountChanged.bind(this,\"conversion\")}):h,K=r.a.createElement(M,{asset:this.state.coins_by_type[this.state.conversion_input_coin_type].walletSymbol,account:this.props.account,input_coin_type:this.state.conversion_input_coin_type,output_coin_type:this.state.conversion_output_coin_type,account_name:this.props.account.get(\"name\"),amount:this.state.conversion_estimated_input_amount,account_id:this.props.account.get(\"id\"),account_balances:this.props.account.get(\"balances\"),url:this.state.url}),Q=null;this.state.conversion_error&&(Q=r.a.createElement(\"div\",null,this.state.conversion_error));var Y=r.a.createElement(\"span\",null,\"...\");this.state.conversion_limit&&(Y=this.state.conversion_limit.limit?r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"span\",{className:\"deposit-limit\"},r.a.createElement(c.a,{content:\"gateway.limit\",amount:_.a.format_number(this.state.conversion_limit.limit,8),symbol:this.state.coins_by_type[this.state.conversion_input_coin_type].walletSymbol}))):r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"span\",{className:\"deposit-limit\"},\"no limit\"))),l=r.a.createElement(\"thead\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.convert\"})),r.a.createElement(\"th\",null,r.a.createElement(c.a,{content:\"gateway.balance\"})),r.a.createElement(\"th\",null))),o=r.a.createElement(\"tbody\",null,r.a.createElement(\"tr\",null,r.a.createElement(\"td\",null,r.a.createElement(\"div\",{className:\"blocktrades-bridge\"},r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,U),r.a.createElement(\"div\",null,G)),\"→\",r.a.createElement(\"div\",{className:\"inline-block\"},r.a.createElement(\"div\",null,H),r.a.createElement(\"div\",null,z)),r.a.createElement(\"div\",null,Q))),r.a.createElement(\"td\",null,r.a.createElement(d.a,{account:this.props.account.get(\"name\"),asset:this.state.coins_by_type[this.state.conversion_input_coin_type].walletSymbol})),r.a.createElement(\"td\",null,K,r.a.createElement(\"br\",null),Y)))}return this.state.announcements.length>0&&(t=r.a.createElement(\"div\",{className:\"blocktrades-announcements-container\"},this.state.announcements.map(function(e,t){var a=\"txtann info\";return 10===e.status?a=\"txtann error\":20===e.status?a=\"txtann warning\":30===e.status?a=\"txtann success\":40===e.status&&(a=\"txtann info\"),1===e.format&&e.message.replace(/\\r\\n|\\r|\\n/g,\"<br />\"),r.a.createElement(\"div\",{className:\"blocktrades-announcements \"+a,key:t},e.message)},this))),r.a.createElement(\"div\",null,r.a.createElement(\"div\",{style:{paddingBottom:15}},r.a.createElement(c.a,{component:\"h5\",content:\"gateway.bridge_text\"})),t,r.a.createElement(\"table\",{className:\"table\"},n,a,i,s,l,o))}}]),t}();P.propTypes={url:k.a.string,gateway:k.a.string,account:u.a.ChainAccount,issuer_account:u.a.ChainAccount,initial_deposit_input_coin_type:k.a.string,initial_deposit_output_coin_type:k.a.string,initial_deposit_estimated_input_amount:k.a.string,initial_withdraw_input_coin_type:k.a.string,initial_withdraw_output_coin_type:k.a.string,initial_withdraw_estimated_input_amount:k.a.string,initial_conversion_input_coin_type:k.a.string,initial_conversion_output_coin_type:k.a.string,initial_conversion_estimated_input_amount:k.a.string},t.a=Object(p.a)(P)}).call(this,a(120).Buffer)},2196:function(e,t,a){\"use strict\";(function(e){var n=a(0),s=a.n(n),i=a(42),o=a(49),r=a(2),l=a.n(r),c=a(3),u=a.n(c),p=a(74),d=a(39),m=a(25),h=a(2014),_=a(15),f=(a(27),function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}());var y=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this));return t.state={action:e.viewSettings.get(\"bktAction\",\"deposit\"),min:50,max:1e5},t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,s.a.Component),f(a,[{key:\"_renderDeposits\",value:function(){}},{key:\"_renderWithdrawals\",value:function(){return s.a.createElement(\"form\",{onSubmit:this._onSubmit.bind(this)},s.a.createElement(\"div\",{style:{padding:\"20px 0\"}},s.a.createElement(l.a,{content:\"gateway.balance\"}),\":  \",s.a.createElement(\"span\",{style:{fontWeight:\"bold\",color:\"#4A90E2\",textAlign:\"right\"}},s.a.createElement(h.a,{account:this.props.account.get(\"name\"),asset:this.props.asset.get(\"symbol\")}))),s.a.createElement(\"label\",null,s.a.createElement(l.a,{content:\"exchange.quantity\"}),s.a.createElement(\"input\",{ref:\"amount\",required:!0,id:\"amount\",type:\"number\",min:this.state.min,max:this.state.max})),s.a.createElement(\"label\",null,s.a.createElement(l.a,{content:\"gateway.iban\"}),s.a.createElement(\"input\",{ref:\"iban\",required:!0,id:\"iban\",type:\"text\"})),s.a.createElement(\"button\",{className:\"button\",type:\"submit\"},s.a.createElement(l.a,{content:\"gateway.withdraw_now\"})))}},{key:\"changeAction\",value:function(e){this.setState({action:e}),m.a.changeViewSetting({bktAction:e})}},{key:\"_onSubmit\",value:function(t){var a=this;t.preventDefault();var n=this.state,s=n.min,i=n.max,o=this.props,r=o.asset,l=o.account,c=o.bitKapital,u=parseInt(this.refs.amount.value,10),m=this.refs.iban.value;console.log(\"amount:\",u,\"iban:\",m);var h=_.a.get_asset_precision(r.get(\"precision\"));u<s||u>i||d.a.transfer(l.get(\"id\"),c.get(\"id\"),parseInt(u*h,10),r.get(\"id\"),new e(\"BOZDURMA - \"+m.toUpperCase(),\"utf-8\"),null,r.get(\"id\")).then(function(){p.a.unlisten(a.onTrxIncluded),p.a.listen(a.onTrxIncluded)})}},{key:\"onTrxIncluded\",value:function(e){e.included&&e.broadcasted_transaction?(p.a.unlisten(this.onTrxIncluded),p.a.reset()):e.closed&&(p.a.unlisten(this.onTrxIncluded),p.a.reset())}},{key:\"render\",value:function(){var e=this.props,t=(e.jianjolly,e.onay,e.account,this.state.action);return s.a.createElement(\"div\",{className:\"BitKapital\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"div\",{style:{marginRight:10},onClick:this.changeAction.bind(this,\"deposit\"),className:u()(\"button\",\"deposit\"===t?\"active\":\"outline\")},s.a.createElement(l.a,{content:\"gateway.deposit\"})),s.a.createElement(\"div\",{onClick:this.changeAction.bind(this,\"withdraw\"),className:u()(\"button\",\"withdraw\"===t?\"active\":\"outline\")},s.a.createElement(l.a,{content:\"gateway.withdraw\"}))),\"deposit\"===t?this._renderDeposits():this._renderWithdrawals()))}}]),a}();y.propTypes={jianjolly:i.a.ChainAccount.isRequired,onay:i.a.ChainAccount.isRequired,bitKapital:i.a.ChainAccount.isRequired,asset:i.a.ChainAsset.isRequired},y.defaultProps={jianjolly:\"1.2.126253\",bitKapital:\"1.2.130090\",onay:\"1.2.139289\",asset:\"KAPITAL\"},t.a=Object(o.a)(y)}).call(this,a(120).Buffer)},2197:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(2198),y=a(5),g=a(146),w=a(35),v=a(1),b=a.n(v),E=a(10),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._checkMinAmount=t._checkMinAmount.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},function(){this._checkBalance,this._checkMinAmount()})}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.b)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"_checkMinAmount\",value:function(){var e=this.state.withdraw_amount;if(null!==e){var t=e<this.props.min_amount/u.a.get_asset_precision(this.props.asset_precision);return console.log(\"X\",e,this.props.min_amount/u.a.get_asset_precision(this.props.asset_precision)),this.setState({minAmountError:t}),t}}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i});_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),o.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new w.i({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=(this.getWithdrawModalId(),null),d=null,_=null;this.state.options_is_valid&&(d=i.a.createElement(\"div\",{className:n.length?\"rudex-options\":\"rudex-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),_=i.a.createElement(E.Modal,{closable:!1,footer:[i.a.createElement(E.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(E.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var y=1,g=null;this.props.output_supports_memos&&(g=i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:y++,onChange:this.onMemoChanged.bind(this)})));var w=this._getAvailableAssets().fee_asset_types;if(l.length>0){var v=this.props.asset.get(\"id\");if(v){var b=o[v];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},b?i.a.createElement(p.a,{balance:o[v]}):0))}else s=\"No funds\"}else s=\"No funds\";return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:\"0px\"}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null,this.state.minAmountError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.rudex.min_amount_error\"})):null,i.a.createElement(\"p\",{className:\"no-margin\",style:{paddingTop:10}},i.a.createElement(\"b\",null,i.a.createElement(r.a,{content:\"gateway.rudex.min_amount\",minAmount:u.a.format_number(this.props.min_amount/u.a.get_asset_precision(this.props.asset_precision),this.props.asset_precision,!1),symbol:this.props.output_coin_symbol})))),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:w,tabIndex:y++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:this.props.gateFee}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"rudex-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"rudex-position-options\"},d),c),g,i.a.createElement(\"div\",null,i.a.createElement(E.Button,{disabled:this.state.error||this.state.balanceError||this.state.minAmountError,type:\"primary\",onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(E.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),_))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:b.a.string.isRequired,output_coin_symbol:b.a.string.isRequired,output_coin_type:b.a.string.isRequired,url:b.a.string,output_wallet_type:b.a.string,output_supports_memos:b.a.bool.isRequired,amount_to_withdraw:b.a.string,balance:l.a.ChainObject,min_amount:b.a.number},t.a=Object(c.a)(C)}).call(this,a(120).Buffer)},2198:function(e,t,a){\"use strict\";a.d(t,\"b\",function(){return o}),a.d(t,\"a\",function(){return r});var n=a(55),s=a(45),i=new n.a(\"\");function o(e){var t=e.url,a=void 0===t?s.h.BASE:t,n=e.walletType,i=e.newAddress;return i?fetch(a+\"/wallets/\"+n+\"/check-address\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:JSON.stringify({address:i})}).then(function(e){return e.json().then(function(e){return e.isValid})}).catch(function(e){console.log(\"validate error:\",e)}):new Promise(function(e){return e()})}var r={has:function(e){return i.has(\"history_address_\"+e)},set:function(e){var t=e.wallet,a=e.addresses;i.set(\"history_address_\"+t,a)},get:function(e){return i.get(\"history_address_\"+e,[])},setLast:function(e){var t=e.wallet,a=e.address;i.set(\"history_address_last_\"+t,a)},getLast:function(e){return i.get(\"history_address_last_\"+e,\"\")}}},2199:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(79),y=a(5),g=a(146),w=a(35),v=a(10),b=a(1),E=a.n(b),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},this._checkBalance)}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.m)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=void 0!==this.props.gateFee?parseFloat(String.prototype.replace.call(this.props.gateFee,/,/g,\"\")):0,r=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i}),l=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:0});void 0!==this.props.balance&&(l=r.clone(this.props.balance.get(\"balance\")));var c=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:o});r.plus(c),l.lt(r)&&(r=l),_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),r.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new w.i({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=(this.getWithdrawModalId(),null),u=null,d=null;this.state.options_is_valid&&(u=i.a.createElement(\"div\",{className:n.length?\"blocktrades-options\":\"blocktrades-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),d=i.a.createElement(v.Modal,{closable:!1,footer:[i.a.createElement(v.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(v.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var _=1,y=null;this.props.output_supports_memos&&(y=i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:_++,onChange:this.onMemoChanged.bind(this)})));var g=this._getAvailableAssets().fee_asset_types;if(l.length>0){var w=this.props.asset.get(\"id\");if(w){var b=o[w];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},b?i.a.createElement(p.a,{balance:o[w]}):0))}else s=\"No funds\"}else s=\"No funds\";var E=this.state.error||this.state.balanceError||!this.state.withdraw_amount;return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:0}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:g,tabIndex:_++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:this.props.gateFee}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"blocktrades-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"blocktrades-position-options\"},u),c),y,i.a.createElement(\"div\",null,i.a.createElement(v.Button,{type:\"primary\",disabled:E,onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(v.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),d))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:E.a.string.isRequired,output_coin_symbol:E.a.string.isRequired,output_coin_type:E.a.string.isRequired,url:E.a.string,output_wallet_type:E.a.string,output_supports_memos:E.a.bool.isRequired,amount_to_withdraw:E.a.string,balance:l.a.ChainObject},t.a=Object(c.a)(C)}).call(this,a(120).Buffer)},2222:function(e,t){},2223:function(e,t){},2281:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(79),y=a(5),g=a(146),w=a(35),v=a(1),b=a.n(v),E=a(10),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},this._checkWithdrawAmount(t),this._validMinAmount(t),this._calFinalNumber(t))}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.m)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"_checkWithdrawAmount\",value:function(e){var t=this.state.feeAmount,a=this.props,n=a.asset,s=a.balance;if(s&&t){var i=Object(g.a)(e,n,t,s);if(null!==i)return this.setState({balanceError:!i}),i}}},{key:\"_validMinAmount\",value:function(e){var t=this.props.min_withdraw_amount,a=!1;return parseFloat(e)<t&&(a=!0),this.setState({minWithdrawError:a}),a}},{key:\"_calFinalNumber\",value:function(e){e||(e=\"0\");var t=this.props,a=t.fee_type,n=t.gateFee,s=parseFloat(e),i=parseFloat(n);\"1\"===a?this.setState({finalNumber:(s-s*i).toFixed(8)}):this.setState({finalNumber:(s-i).toFixed(8)})}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i});_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),o.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new Price({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=(this.getWithdrawModalId(),null),u=null,d=null;this.state.options_is_valid&&(u=i.a.createElement(\"div\",{className:n.length?\"blocktrades-options\":\"blocktrades-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),d=i.a.createElement(E.Modal,{closable:!1,footer:[i.a.createElement(E.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(E.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var _=1;this.props.output_supports_memos&&i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:_++,onChange:this.onMemoChanged.bind(this)}));var y=this._getAvailableAssets().fee_asset_types;if(l.length>0){var g=this.props.asset.get(\"id\");if(g){var w=o[g];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},w?i.a.createElement(p.a,{balance:o[g]}):0))}else s=\"No funds\"}else s=\"No funds\";var v=this.state.error||this.state.balanceError||this.state.minWithdrawError;return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:0}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"winex.withdraw.winAmount\",min_amount:this.props.min_withdraw_amount,asset:this.props.asset.get(\"symbol\")})),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null,this.state.minWithdrawError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"winex.transfer.errors.minWithdraw\",min_amount:this.props.min_withdraw_amount+this.props.asset.get(\"symbol\")})):null),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:y,tabIndex:_++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:100*this.props.gateFee}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,\"1\"===this.props.fee_type?\"%\":this.props.output_coin_symbol)))),i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"winex.withdraw.finalNumber\",final_number:this.state.finalNumber}))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"blocktrades-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"blocktrades-position-options\"},u),c),i.a.createElement(\"div\",null,i.a.createElement(E.Button,{type:\"primary\",disabled:v,onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(E.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),d))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:b.a.string.isRequired,output_coin_symbol:b.a.string.isRequired,output_coin_type:b.a.string.isRequired,url:b.a.string,output_wallet_type:b.a.string,output_supports_memos:b.a.bool.isRequired,amount_to_withdraw:b.a.string,min_withdraw_amount:b.a.string,max_withdraw_amount:b.a.any,fee_type:b.a.string,balance:l.a.ChainObject},t.a=Object(c.a)(C)}).call(this,a(120).Buffer)},2282:function(e,t,a){\"use strict\";(function(e){var n=a(321),s=a(0),i=a.n(s),o=a(2),r=a.n(o),l=a(42),c=a(49),u=a(15),p=a(351),d=a(6),m=a.n(d),h=a(320),_=a(39),f=a(2107),y=a(5),g=a(146),w=a(35),v=a(10),b=a(1),E=a.n(b),k=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var C=function(t){function a(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.state={isConfirmationModalVisible:!1,withdraw_amount:t.props.amount_to_withdraw,withdraw_address:f.a.getLast(e.output_wallet_type),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,confirmation_is_valid:!1,withdraw_address_selected:f.a.getLast(e.output_wallet_type),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{}},t._validateAddress(t.state.withdraw_address,e),t._checkBalance=t._checkBalance.bind(t),t._checkMinAmount=t._checkMinAmount.bind(t),t._updateFee=Object(n.a)(t._updateFee.bind(t),250),t.showConfirmationModal=t.showConfirmationModal.bind(t),t.hideConfirmationModal=t.hideConfirmationModal.bind(t),t}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,i.a.Component),k(a,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new w.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(g.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(g.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_type+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),u.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},function(){this._checkBalance,this._checkMinAmount()})}},{key:\"onSelectChanged\",value:function(e){var t=f.a.get(this.props.output_wallet_type)[e];f.a.setLast({wallet:this.props.output_wallet_type,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;Object(f.c)({url:a.url,walletType:a.output_wallet_type,newAddress:e}).then(function(a){t.state.withdraw_address===e&&t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:a})})}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance;if(i&&t){var o=Object(g.a)(a,s,t,i);if(null!==o)return this.setState({balanceError:!o}),o}}},{key:\"_checkMinAmount\",value:function(){var e=this.state.withdraw_amount;if(null!==e){var t=e<this.props.min_amount/u.a.get_asset_precision(this.props.asset_precision);return this.setState({minAmountError:t}),t}}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=this.state.feeAmount,i=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),o=new w.a({asset_id:n.get(\"id\"),precision:n.get(\"precision\"),real:i});_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),o.getAmount(),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,s?s.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),f.a.has(this.props.output_wallet_type)){var t=f.a.get(this.props.output_wallet_type);-1==t.indexOf(this.state.withdraw_address)&&(t.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:t}))}else{var a=[];a.push(this.state.withdraw_address),f.a.set({wallet:this.props.output_wallet_type,addresses:a})}f.a.setLast({wallet:this.props.output_wallet_type,address:this.state.withdraw_address});var n=this.props.asset,s=u.a.get_asset_precision(n.get(\"precision\")),i=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),o=this.state.feeAmount;_.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(i*s,10),n.get(\"id\"),this.props.output_coin_type+\":\"+this.state.withdraw_address+(this.state.memo?\":\"+new e(this.state.memo,\"utf-8\"):\"\"),null,o?o.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){f.a.has(this.props.output_wallet_type)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new w.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(u.a.sortID),s){var o=y.ChainStore.getObject(i),r=y.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var l=!1;try{l=new w.i({base:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new w.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){l=!1}\"1.3.0\"===o.get(\"id\")||l||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=f.a.get(this.props.output_wallet_type),s=null,o=this.props.account.get(\"balances\").toJS(),l=Object.keys(o),c=(this.getWithdrawModalId(),null),d=null,_=null;this.state.options_is_valid&&(d=i.a.createElement(\"div\",{className:n.length?\"rudex-options\":\"rudex-disabled-options\"},n.map(function(e,t){return i.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(c=i.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_type})),_=i.a.createElement(v.Modal,{closable:!1,footer:[i.a.createElement(v.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},m.a.translate(\"modal.confirmation.accept\")),i.a.createElement(v.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},m.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},i.a.createElement(\"label\",null,i.a.createElement(r.a,{content:\"modal.confirmation.title\"})))));var y=1,g=null;this.props.output_supports_memos&&(g=i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",null,i.a.createElement(r.a,{component:\"span\",content:\"transfer.memo\"})),i.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:y++,onChange:this.onMemoChanged.bind(this)})));var w=this._getAvailableAssets().fee_asset_types;if(l.length>0){var b=this.props.asset.get(\"id\");if(b){var E=o[b];s=i.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},i.a.createElement(r.a,{component:\"span\",content:\"transfer.available\"}),\" : \",i.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},E?i.a.createElement(p.a,{balance:o[b]}):0))}else s=\"No funds\"}else s=\"No funds\";var k=u.a.format_number(this.props.min_amount/u.a.get_asset_precision(this.props.asset_precision),this.props.asset_precision,!1),C=this.props.withdraw_fee?u.a.format_number(this.props.withdraw_fee/u.a.get_asset_precision(this.props.asset_precision),this.props.asset_precision,!1):null;return i.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:0}},i.a.createElement(\"div\",{className:\"grid-container\"},i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(h.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:s}),this.state.empty_withdraw_value?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.insufficient\"})):null,this.state.minAmountError?i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"gateway.xbtsx.min_amount_error\"})):null,i.a.createElement(\"p\",{className:\"no-margin\",style:{paddingTop:10}},i.a.createElement(\"b\",null,i.a.createElement(r.a,{content:\"gateway.xbtsx.min_amount\",minAmount:k,symbol:this.props.output_coin_symbol})))),this.state.feeAmount?i.a.createElement(\"div\",{className:\"content-block gate_fee\"},i.a.createElement(h.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:w,tabIndex:y++}),this.state.hasBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:i.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},i.a.createElement(r.a,{content:\"transfer.errors.noPoolBalance\"}))):null,C?i.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{content:\"gateway.fee\"})),i.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},i.a.createElement(\"input\",{type:\"text\",disabled:!0,value:C}),i.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},i.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},i.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,i.a.createElement(\"div\",{className:\"content-block\"},i.a.createElement(\"label\",{className:\"left-label\"},i.a.createElement(r.a,{component:\"span\",content:\"modal.withdraw.address\"})),i.a.createElement(\"div\",{className:\"rudex-select-dropdown\"},i.a.createElement(\"div\",{className:\"inline-label\"},i.a.createElement(\"input\",{type:\"text\",spellcheck:\"false\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),i.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),i.a.createElement(\"div\",{className:\"rudex-position-options\"},d),c),g,i.a.createElement(\"div\",null,i.a.createElement(v.Button,{type:\"primary\",disabled:this.state.error||this.state.balanceError||this.state.minAmountError,onClick:this.onSubmit.bind(this)},m.a.translate(\"modal.withdraw.submit\")),i.a.createElement(v.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},m.a.translate(\"account.perm.cancel\"))),_))}}]),a}();C.propTypes={account:l.a.ChainAccount.isRequired,issuer:l.a.ChainAccount.isRequired,asset:l.a.ChainAsset.isRequired,output_coin_name:E.a.string.isRequired,output_coin_symbol:E.a.string.isRequired,output_coin_type:E.a.string.isRequired,url:E.a.string,output_wallet_type:E.a.string,output_supports_memos:E.a.bool.isRequired,amount_to_withdraw:E.a.string,balance:l.a.ChainObject,min_amount:E.a.number,withdraw_fee:E.a.number},t.a=Object(c.a)(C,{keep_updating:!0})}).call(this,a(120).Buffer)},2312:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),i=a(31),o=a(88),r=a(127),l=a(15),c=a(2),u=a.n(c),p=a(42),d=a(49),m=a(5),h=a(2079),_=a(135),f=a.n(_),y=a(2014),g=a(106),w=a(134),v=a(79),b=a(45),E=a(43),k=a(13),C=a.n(k),S=a(1),A=a.n(S),O=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var N=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a._handleCopy=a._handleCopy.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),O(t,[{key:\"componentDidMount\",value:function(){this.childRef&&(this.node=C.a.findDOMNode(this.childRef)),this.node&&this.node.addEventListener&&this.node.addEventListener(\"copy\",this._handleCopy)}},{key:\"componentWillUnmount\",value:function(){this.node&&this.node.removeEventListener&&this.node.removeEventListener(\"copy\",this._handleCopy)}},{key:\"_handleCopy\",value:function(e){!1!==this.props.disableCopy&&(this.props.replaceCopyText&&e.clipboardData.setData(\"text/plain\",this.props.replaceCopyText),e.preventDefault())}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"span\",{ref:function(t){return e.childRef=t}},this.props.children)}}]),t}();N.propTypes={disableCopy:A.a.bool,replaceCopyText:A.a.string};var x=N,T=a(6),j=a.n(T),M=a(10),I=a(2046),B=a.n(I),P=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var D=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),n={blocktrades:b.b.BASE,openledger:b.g.BASE,citadel:b.c.BASE};return a.state={isModalVisible:!1,receive_address:null,url:e.url||n[e.gateway],loading:!1,emptyAddressDeposit:!1},a.addDepositAddress=a.addDepositAddress.bind(a),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),P(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_getDepositObject\",value:function(){return{inputCoinType:this.props.deposit_coin_type,outputCoinType:this.props.receive_coin_type,outputAddress:this.props.account.get(\"name\"),url:this.state.url,stateCallback:this.addDepositAddress}}},{key:\"componentWillMount\",value:function(){Object(v.j)({coin:this.props.receive_coin_type,account:this.props.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"componentWillReceiveProps\",value:function(e){e.account!==this.props.account&&Object(v.j)({coin:e.receive_coin_type,account:e.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"addDepositAddress\",value:function(e){e.error&&(\"no_address\"===e.error.message?this.setState({emptyAddressDeposit:!0}):this.setState({emptyAddressDeposit:!1})),this.setState({receive_address:e}),this.setState({loading:!1}),this.setState({receive_address:e})}},{key:\"requestDepositAddressLoad\",value:function(){this.setState({loading:!0,emptyAddressDeposit:!1}),Object(v.l)(this._getDepositObject())}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){f.a.publish(this.getWithdrawModalId(),\"open\")}},{key:\"render\",value:function(){var e=\"deposit\"===this.props.action,t=s.a.createElement(E.a,null);if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return t;var a=this.props.account.get(\"balances\"),n=this.props.gateFee;this.props.receive_asset.get(\"symbol\");if(this.props.deprecated_in_favor_of){var i=!1,o=a.get(this.props.receive_asset.get(\"id\"));if(o){var r=m.ChainStore.getObject(o);if(r)0!=r.get(\"balance\")&&(i=!0)}if(!i)return t}var l=this.state.receive_address,c=this.state.emptyAddressDeposit,p=this.state.loading;if(!l)return s.a.createElement(\"div\",{style:{margin:\"3rem\"}},s.a.createElement(E.a,{type:\"three-bounce\"}));var d=this.getWithdrawModalId(),_=null,f=null,v=\"\",b=void 0;if(this.props.deposit_account){_=s.a.createElement(\"span\",null,this.props.deposit_account),v=this.props.receive_coin_type+\":\"+this.props.account.get(\"name\"),f=s.a.createElement(\"span\",null,v);var k=this.props.deposit_coin_type+\":\"}else{l.memo?(b=l.memo,v=l.address,_=s.a.createElement(\"span\",null,l.address),f=s.a.createElement(\"span\",null,l.memo)):(v=l.address,_=s.a.createElement(\"span\",null,l.address));k=\"\"}return!this.props.isAvailable||e&&!this.props.deposit_account&&!l||l&&\"unknown\"===l.address?s.a.createElement(\"div\",null,s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.unavailable\",component:\"h4\"})):e?s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"fz_12 left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_notice_delay\"})),s.a.createElement(\"div\",null,c?s.a.createElement(u.a,{content:\"gateway.please_generate_address\"}):s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},\"deposit_address_fragment\"),s.a.createElement(\"div\",null,f&&s.a.createElement(\"span\",null,s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},\"memo: \",f))),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},_?s.a.createElement(B.a,{text:v},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_address\"}),\"cidatel\")):null,b?s.a.createElement(B.a,{text:b},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_memo\"}))):null,s.a.createElement(\"button\",{className:\"button spinner-button-circle\",onClick:this.requestDepositAddressLoad.bind(this)},p?s.a.createElement(E.a,{type:\"circle\"}):null,s.a.createElement(u.a,{content:\"gateway.generate_new\"}))),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_amount\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset}),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_asset\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset})))):s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible,id:d,overlay:!0},s.a.createElement(h.a,{account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),url:this.state.url,output_coin_name:this.props.deposit_asset_name,gateFee:n,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,memo_prefix:k,modal_id:d,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})))}}]),t}();D.propTypes={url:A.a.string,gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired},D.defaultProps={autosubscribe:!1};var F=Object(d.a)(D),W=a(27),R=a(25),q=a(2015),L=a(11),U=a.n(L),V=(a(3),function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}());var H=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),n=e.viewSettings.get(e.provider+\"Action\",\"deposit\");return a.state={activeCoin:a._getActiveCoin(e,{action:n}),action:n},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),V(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_citadel_\"+t.action,null),n=null;return\"deposit\"==t.action&&(n=\"XMR\"),\"withdraw\"==t.action&&(n=\"XMR\"),a||n}},{key:\"componentWillReceiveProps\",value:function(e){e.provider!==this.props.provider&&this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_citadel_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},this.props.provider+\"Action\",e))}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.coins,n=t.account,i=t.provider,o=this.state,r=o.activeCoin,l=o.action;if(!a.length)return s.a.createElement(E.a,null);var c=a.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===l?e.depositAllowed:e.withdrawalAllowed)}),p=c.map(function(e){var t=\"deposit\"===l?e.backingCoinType.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),d=c.filter(function(e){return\"deposit\"===l?e.backingCoinType.toUpperCase()===r:e.symbol===r})[0];d||(d=c[0]);var m=\"deposit\"===this.state.action;return s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+l}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:r},p))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),d?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(F,{key:i+\".\"+d.symbol,gateway:i,issuer_account:d.intermediateAccount,account:n,deposit_asset:d.backingCoinType.toUpperCase(),deposit_asset_name:d.name,deposit_coin_type:d.backingCoinType.toLowerCase(),deposit_account:d.depositAccount,deposit_wallet_type:d.walletType,gateFee:d.gateFee,receive_asset:d.symbol,receive_coin_type:d.symbol.toLowerCase(),supports_output_memos:d.supportsMemos,isAvailable:d.isAvailable,action:this.state.action}),s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.citadel.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"a\",{href:\"https://citadel.li\",target:\"_blank\",rel:\"noopener noreferrer\"},\"https://citadel.li\"))),d&&d.symbol?s.a.createElement(q.b,{asset:d.symbol,fromAccount:m?issuer.id:this.props.account.get(\"id\"),to:m?this.props.account.get(\"id\"):issuer.id},function(t){var a=t.asset,n=t.to,i=t.fromAccount;return s.a.createElement(q.a,{accountsList:U.a.List([e.props.account.get(\"id\")]),limit:10,compactView:!0,fullHeight:!0,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+e.state.action}),customFilter:{fields:[\"to\",\"from\",\"asset_id\"],values:{to:n.get(\"id\"),from:i.get(\"id\"),asset_id:a.get(\"id\")}}})}):null):null)}}]),t}(),J=(Object(i.a)(H,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),a(2080)),G=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var X=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),n={blocktrades:b.b.BASE,openledger:b.g.BASE};return a.state={isModalVisible:!1,receive_address:null,url:e.url||n[e.gateway],loading:!1,emptyAddressDeposit:!1},a.addDepositAddress=a.addDepositAddress.bind(a),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),G(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_getDepositObject\",value:function(){return{inputCoinType:this.props.deposit_coin_type,outputCoinType:this.props.receive_coin_type,outputAddress:this.props.account.get(\"name\"),url:this.state.url,stateCallback:this.addDepositAddress}}},{key:\"componentWillMount\",value:function(){Object(v.j)({coin:this.props.receive_coin_type,account:this.props.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"componentWillReceiveProps\",value:function(e){e.account!==this.props.account&&Object(v.j)({coin:e.receive_coin_type,account:e.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"addDepositAddress\",value:function(e){e.error&&(\"no_address\"===e.error.message?this.setState({emptyAddressDeposit:!0}):this.setState({emptyAddressDeposit:!1})),this.setState({receive_address:e}),this.setState({loading:!1}),this.setState({receive_address:e})}},{key:\"requestDepositAddressLoad\",value:function(){this.setState({loading:!0,emptyAddressDeposit:!1}),Object(v.l)(this._getDepositObject())}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"render\",value:function(){var e=\"deposit\"===this.props.action,t=s.a.createElement(E.a,null);if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return t;var a=this.props.account.get(\"balances\"),n=this.props.gateFee;this.props.receive_asset.get(\"symbol\");if(this.props.deprecated_in_favor_of){var i=!1,o=a.get(this.props.receive_asset.get(\"id\"));if(o){var r=m.ChainStore.getObject(o);if(r)0!=r.get(\"balance\")&&(i=!0)}if(!i)return t}var l=this.state.receive_address,c=this.state.emptyAddressDeposit,p=this.state.loading;if(!l)return s.a.createElement(\"div\",{style:{margin:\"3rem\"}},s.a.createElement(E.a,{type:\"three-bounce\"}));var d=this.getWithdrawModalId(),h=null,_=null,f=null,v=\"\",b=void 0;if(this.props.deposit_account){h=s.a.createElement(\"span\",null,this.props.deposit_account),_=this.props.deposit_account,v=this.props.receive_coin_type+\":\"+this.props.account.get(\"name\"),f=s.a.createElement(\"span\",null,v);var k=this.props.deposit_coin_type+\":\"}else{_=l&&l.address||\"\",l.memo?(b=l.memo,v=l.address,h=s.a.createElement(\"span\",null,l.address),f=s.a.createElement(\"span\",null,l.memo)):(v=l.address,h=s.a.createElement(\"span\",null,l.address));k=\"\"}return!this.props.isAvailable||e&&!this.props.deposit_account&&!l||l&&\"unknown\"===l.address?s.a.createElement(\"div\",null,s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.unavailable\",component:\"h4\"})):e?s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"fz_12 left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_notice_delay\"})),s.a.createElement(\"div\",null,c?s.a.createElement(u.a,{content:\"gateway.please_generate_address\"}):s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},h),s.a.createElement(\"div\",null,f&&s.a.createElement(\"span\",null,\"memo: \",f)),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},h?s.a.createElement(B.a,{text:_},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_address\"}))):null,b?s.a.createElement(B.a,{text:b},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_memo\"}))):null,s.a.createElement(\"button\",{className:\"button spinner-button-circle\",onClick:this.requestDepositAddressLoad.bind(this)},p?s.a.createElement(E.a,{type:\"circle\"}):null,s.a.createElement(u.a,{content:\"gateway.generate_new\"}))),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_amount\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset}),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_asset\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset})))):s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible,id:d,overlay:!0},s.a.createElement(J.a,{hideModal:this.hideModal,showModal:this.showModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),url:this.state.url,output_coin_name:this.props.deposit_asset_name,gateFee:n,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,memo_prefix:k,modal_id:d,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})))}}]),t}();X.propTypes={url:A.a.string,gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired},X.defaultProps={autosubscribe:!1};var z=Object(d.a)(X),K=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Q=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),n=e.viewSettings.get(e.provider+\"Action\",\"deposit\");return a.state={activeCoin:a._getActiveCoin(e,{action:n}),action:n},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),K(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_\"+e.provider+\"_\"+t.action,null),n=null;return\"blocktrades\"==e.provider&&\"deposit\"==t.action&&(n=\"BTC\"),\"openledger\"==e.provider&&\"deposit\"==t.action&&(n=\"BTC\"),\"blocktrades\"==e.provider&&\"withdraw\"==t.action&&(n=\"TRADE.BTC\"),\"openledger\"==e.provider&&\"withdraw\"==t.action&&(n=\"OPEN.BTC\"),a||n}},{key:\"componentWillReceiveProps\",value:function(e){e.provider!==this.props.provider&&this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_\"+this.props.provider+\"_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},this.props.provider+\"Action\",e))}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.coins,n=t.account,i=t.provider,o=this.state,r=o.activeCoin,l=o.action;if(!a.length)return s.a.createElement(E.a,null);var c=a.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===l?e.depositAllowed:e.withdrawalAllowed)}),p=c.map(function(e){var t=\"deposit\"===l?e.backingCoinType.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),d=c.filter(function(e){return\"deposit\"===l?e.backingCoinType.toUpperCase()===r:e.symbol===r})[0];d||(d=c[0]);var m={blocktrades:{name:\"blocktrades\",id:\"1.2.32567\",support:\"support@blocktrades.us\"},openledger:{name:d.intermediateAccount,id:\"1.2.96397\",support:\"https://dex.openledger.io\"}}[i],h=\"deposit\"===this.state.action;return s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+l}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:r},p))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),d?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(z,{key:i+\".\"+d.symbol,gateway:i,issuer_account:m.name,account:n,deposit_asset:d.backingCoinType.toUpperCase(),deposit_asset_name:d.name,deposit_coin_type:d.backingCoinType.toLowerCase(),deposit_account:d.depositAccount,deposit_wallet_type:d.walletType,gateFee:d.gateFee,receive_asset:d.symbol,receive_coin_type:d.symbol.toLowerCase(),supports_output_memos:d.supportsMemos,isAvailable:d.isAvailable,action:this.state.action}),s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"a\",{href:(-1===m.support.indexOf(\"@\")?\"\":\"mailto:\")+m.support,rel:\"noopener noreferrer\"},m.support))),d&&d.symbol?s.a.createElement(q.b,{asset:d.symbol,fromAccount:h?m.id:this.props.account.get(\"id\"),to:h?this.props.account.get(\"id\"):m.id},function(t){var a=t.asset,n=t.to,i=t.fromAccount;return s.a.createElement(q.a,{accountsList:U.a.List([e.props.account.get(\"id\")]),limit:10,compactView:!0,fullHeight:!0,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+e.state.action}),customFilter:{fields:[\"to\",\"from\",\"asset_id\"],values:{to:n.get(\"id\"),from:i.get(\"id\"),asset_id:a.get(\"id\")}}})}):null):null)}}]),t}(),Y=Object(i.a)(Q,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),Z=a(20),$=a(855),ee=a(856),te=a.n(ee),ae=a(351),ne=a(320),se=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var ie=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={deposit_amount:null,deposit_info:null,deposit_error:null},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),se(t,[{key:\"onDepositAmountChange\",value:function(e){var t=e.amount;e.asset;this.setState({deposit_amount:t})}},{key:\"onSubmitDeposit\",value:function(){var e=this,t=this.props.receive_asset,a=(l.a.get_asset_precision(t.get(\"precision\")),this.state.deposit_amount.replace(/,/g,\"\"));console.log(\"deposit_amount: \",a);var n={jsonrpc:\"2.0\",method:\"getDepositAccount\",params:{bitsharesAccountName:this.props.account.get(\"name\"),currency:this.props.deposit_asset,amount:a},id:1};fetch(this.props.rpc_url,{method:\"POST\",headers:new Headers({Accept:\"application/json\",\"content-type\":\"application/x-www-form-urlencoded\"}),body:\"rq=\"+encodeURIComponent(JSON.stringify(n))}).then(function(e){return e.json()}).then(function(t){\"result\"in t?e.setState({deposit_info:t.result}):\"error\"in json_reponse&&\"message\"in t.error?e.setState({deposit_error:t.error.message}):e.setState({deposit_error:\"Unable to approve deposit, please contact OpenLedger or try again later\"})}).catch(function(t){e.setState({deposit_error:\"Unable to approve deposit, please contact OpenLedger or try again later\"})})}},{key:\"onClose\",value:function(){this.setState({deposit_amount:null,deposit_info:null,deposit_error:null}),f.a.publish(this.props.modal_id,\"close\")}},{key:\"render\",value:function(){if(this.state.deposit_error)return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\"},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"h3\",null,\"Deposit Error\")),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"p\",null,this.state.deposit_error)),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"input\",{type:\"submit\",className:\"button\",onClick:this.onClose.bind(this),value:\"Close\"}))));if(this.state.deposit_info){if(\"link\"in this.state.deposit_info)return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\"},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"h3\",null,\"Deposit Information\")),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"p\",null,\"Click\",\" \",s.a.createElement(\"a\",{href:this.state.deposit_info.link,rel:\"noopener noreferrer\",target:\"_blank\"},\"here\"),\" \",\"for deposit instructions\")),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"input\",{type:\"submit\",className:\"button\",onClick:this.onClose.bind(this),value:\"Close\"}))));var e=[];for(var t in this.state.deposit_info)this.state.deposit_info.hasOwnProperty(t)&&e.push(s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,t),s.a.createElement(\"td\",null,this.state.deposit_info[t])));return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\"},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"h3\",null,\"Deposit Information\")),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,e))),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"input\",{type:\"submit\",className:\"button\",onClick:this.onClose.bind(this),value:j.a.translate(\"account.perm.cancel\")}))))}return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\"},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"h3\",null,\"Deposit \",this.props.deposit_asset)),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(ne.a,{label:\"modal.deposit.amount\",amount:this.state.deposit_amount,asset:this.props.receive_asset.get(\"id\"),assets:[this.props.receive_asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onDepositAmountChange.bind(this),display_balance:null})),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"input\",{type:\"submit\",className:\"button\",onClick:this.onSubmitDeposit.bind(this),value:j.a.translate(\"modal.deposit.submit\")}),s.a.createElement(\"input\",{type:\"submit\",className:\" button\",onClick:this.onClose.bind(this),value:j.a.translate(\"account.perm.cancel\")}))))}}]),t}();ie.propTypes={account:p.a.ChainAccount.isRequired,issuer_account:p.a.ChainAccount.isRequired,deposit_asset:A.a.string,receive_asset:p.a.ChainAsset.isRequired,rpc_url:A.a.string};var oe=Object(d.a)(ie),re=a(39),le=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var ce=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={withdraw_amount:null},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),le(t,[{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;e.asset;this.setState({withdraw_amount:t})}},{key:\"onSubmit\",value:function(){var e=this,t=this.props.receive_asset,a=l.a.get_asset_precision(t.get(\"precision\")),n=this.state.withdraw_amount.replace(/,/g,\"\"),s={jsonrpc:\"2.0\",method:\"getMemoForFiatWithdrawal\",params:{bitsharesAccountName:this.props.account.get(\"name\"),currency:this.props.deposit_asset,amount:n},id:1};fetch(this.props.rpc_url,{method:\"POST\",headers:new Headers({Accept:\"application/json\",\"content-type\":\"application/x-www-form-urlencoded\"}),body:\"rq=\"+encodeURIComponent(JSON.stringify(s))}).then(function(e){return e.json()}).then(function(s){if(!(\"result\"in s))throw\"error\"in s&&\"message\"in s.error?json_repsonse.error.message:\"Unable to approve withdrawal, please contact OpenLedger or try again later\";re.a.transfer(e.props.account.get(\"id\"),e.props.issuer_account.get(\"id\"),parseInt(n*a,10),t.get(\"id\"),s.result)}).catch(function(e){alert(e)})}},{key:\"render\",value:function(){var e=null,t=this.props.account.get(\"balances\").toJS();if(Object.keys(t).length>0){var a=this.props.receive_asset.get(\"id\");e=a?s.a.createElement(\"span\",null,s.a.createElement(u.a,{component:\"span\",content:\"transfer.available\"}),\":\",\" \",s.a.createElement(ae.a,{balance:t[a]})):\"No funds\"}else e=\"No funds\";return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\"},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"h3\",null,\"Withdraw \",this.props.deposit_asset)),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(ne.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.receive_asset.get(\"id\"),assets:[this.props.receive_asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:e})),s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"input\",{type:\"submit\",className:\"button\",onClick:this.onSubmit.bind(this),value:j.a.translate(\"modal.withdraw.submit\")}),s.a.createElement(te.a,{close:this.props.modal_id},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"account.perm.cancel\"}))))))}}]),t}();ce.propTypes={account:p.a.ChainAccount.isRequired,issuer_account:p.a.ChainAccount.isRequired,deposit_asset:A.a.string,receive_asset:p.a.ChainAsset.isRequired,rpc_url:A.a.string};var ue=Object(d.a)(ce),pe=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();function de(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function me(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function he(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var _e=function(e){function t(e){de(this,t);var a=me(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={},a}return he(t,s.a.Component),pe(t,[{key:\"getWithdrawModalId\",value:function(){return\"withdraw_fiat_openledger_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"getDepositModalId\",value:function(){return\"deposit_fiat_openledger_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){f.a.publish(this.getWithdrawModalId(),\"open\")}},{key:\"onDeposit\",value:function(){f.a.publish(this.getDepositModalId(),\"open\")}},{key:\"render\",value:function(){if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return s.a.createElement(\"tr\",{style:{display:\"none\"}},s.a.createElement(\"td\",null),s.a.createElement(\"td\",null),s.a.createElement(\"td\",null),s.a.createElement(\"td\",null));Z.a.getWallet();var e=this.props.account.get(\"balances\"),t=(this.props.receive_asset.get(\"symbol\"),e.toJS());if(Object.keys(t).length>0){var a=this.props.receive_asset.get(\"id\");a&&s.a.createElement(\"span\",null,s.a.createElement(u.a,{component:\"span\",content:\"transfer.available\"}),\":\",\" \",s.a.createElement(ae.a,{balance:t[a]}))}var n=this.getDepositModalId(),i=this.getWithdrawModalId(),o=null;o=this.props.deposit_allowed?s.a.createElement(\"td\",null,s.a.createElement(\"button\",{className:\"button outline\",onClick:this.onDeposit.bind(this)},\" \",s.a.createElement(u.a,{content:\"gateway.deposit\"}),\" \"),s.a.createElement($.a,{id:n,overlay:!0},s.a.createElement(te.a,{close:n},s.a.createElement(\"a\",{href:\"#\",className:\"close-button\"},\"×\")),s.a.createElement(\"br\",null),s.a.createElement(\"div\",{className:\"grid-block vertical\"},s.a.createElement(oe,{account:this.props.account.get(\"name\"),issuer_account:this.props.issuer_account.get(\"name\"),receive_asset:this.props.receive_asset.get(\"symbol\"),rpc_url:this.props.rpc_url,deposit_asset:this.props.deposit_asset,modal_id:n})))):s.a.createElement(\"td\",null,\"Click\",\" \",s.a.createElement(\"a\",{href:\"https://openledger.info/v/\",rel:\"noopener noreferrer\",target:\"_blank\"},\"here\"),\" \",\"to register for deposits of \",this.props.deposit_asset);var r=null;return r=this.props.withdraw_allowed?s.a.createElement(\"td\",null,s.a.createElement(\"button\",{className:\"button outline\",onClick:this.onWithdraw.bind(this)},\" \",s.a.createElement(u.a,{content:\"gateway.withdraw\"}),\" \"),s.a.createElement($.a,{id:i,overlay:!0},s.a.createElement(te.a,{close:i},s.a.createElement(\"a\",{href:\"#\",className:\"close-button\"},\"×\")),s.a.createElement(\"br\",null),s.a.createElement(\"div\",{className:\"grid-block vertical\"},s.a.createElement(ue,{account:this.props.account.get(\"name\"),issuer_account:this.props.issuer_account.get(\"name\"),receive_asset:this.props.receive_asset.get(\"symbol\"),rpc_url:this.props.rpc_url,deposit_asset:this.props.deposit_asset,modal_id:i})))):s.a.createElement(\"td\",null,\"Click\",\" \",s.a.createElement(\"a\",{href:\"https://openledger.info/v/\",rel:\"noopener noreferrer\",target:\"_blank\"},\"here\"),\" \",\"to register for withdrawals of \",this.props.deposit_asset),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,this.props.deposit_asset),o,s.a.createElement(\"td\",null,s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\")})),r)}}]),t}();_e.propTypes={url:A.a.string,gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,receive_asset:p.a.ChainAsset,deposit_allowed:A.a.bool,withdraw_allowed:A.a.bool},_e=Object(d.a)(_e);var fe=function(e){function t(e){de(this,t);var a=me(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));a.state={allowedFiatCurrencies:{deposit:[],withdraw:[]}};var n={jsonrpc:\"2.0\",id:1,method:\"isValidatedForFiat\",params:{bitsharesAccountName:a.props.account.get(\"name\")}};return fetch(a.props.rpc_url,{method:\"POST\",headers:new Headers({Accept:\"application/json\",\"content-type\":\"application/x-www-form-urlencoded\"}),body:\"rq=\"+encodeURIComponent(JSON.stringify(n))}).then(function(e){return e.json()}).then(function(e){\"result\"in e&&a.setState({allowedFiatCurrencies:e.result})}).catch(function(e){a.setState({allowedFiatCurrencies:{deposit:[],withdraw:[]}})}),a}return he(t,s.a.Component),pe(t,[{key:\"componentWillUnmount\",value:function(){clearInterval(this.update_timer)}},{key:\"render\",value:function(){return this.props.account&&this.props.issuer_account,s.a.createElement(\"div\",null)}}]),t}();fe.propTypes={rpc_url:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount};var ye=fe=Object(d.a)(fe),ge=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var we=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={current_status:\"never_loaded\",withdrawals:null,deposits:null,error:null},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),ge(t,[{key:\"onShowOpenLedgerTransactionHistory\",value:function(){var e=this,t={jsonrpc:\"2.0\",method:\"getRequestsList\",params:{bitsharesAccountName:this.props.account.get(\"name\")},id:1};fetch(this.props.rpc_url,{method:\"POST\",headers:new Headers({Accept:\"application/json\",\"content-type\":\"application/x-www-form-urlencoded\"}),body:\"rq=\"+encodeURIComponent(JSON.stringify(t))}).then(function(e){return e.json()}).then(function(t){if(!(\"result\"in t))throw\"error\"in t&&\"message\"in t.error?json_repsonse.error.message:\"Unexpected response\";e.setState({current_status:\"loaded\",withdrawals:t.result.withdrawals,deposits:t.result.deposits,error:null})}).catch(function(t){e.setState({current_status:\"error\",withdrawals:null,deposits:null,error:\"Error getting transaction history: \"+t})})}},{key:\"render\",value:function(){if(!this.props.account)return null;var e=null;if(\"loaded\"===this.state.current_status){var t=[];if(this.state.withdrawals.length){for(var a=0;a<this.state.withdrawals.length;++a)t.push(s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,this.state.withdrawals[a].amount,\" \",this.state.withdrawals[a].currency),s.a.createElement(\"td\",null,this.state.withdrawals[a].status)));e=s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"thead\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"openledger.withdraw_amount\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"openledger.status\"})))),s.a.createElement(\"tbody\",null,t))}else e=s.a.createElement(u.a,{component:\"p\",content:\"openledger.withdraw_none\"})}var n=null;if(\"loaded\"===this.state.current_status)if(this.state.deposits.length){var i=[];for(a=0;a<this.state.deposits.length;++a)i.push(s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,this.state.deposits[a].amount,\" \",this.state.deposits[a].currency),s.a.createElement(\"td\",null,s.a.createElement(\"a\",{href:this.state.deposits[a].link,rel:\"noopener noreferrer\",target:\"_blank\"},\"link\")),s.a.createElement(\"td\",null,this.state.deposits[a].status)));n=s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"thead\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"openledger.deposit_amount\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"openledger.deposit_details\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"openledger.status\"})))),s.a.createElement(\"tbody\",null,i))}else n=s.a.createElement(u.a,{component:\"p\",content:\"openledger.deposit_none\"});var o=null;if(\"error\"===this.state.current_status)o=s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"button\",{className:\"button outline\",onClick:this.onShowOpenLedgerTransactionHistory.bind(this)},s.a.createElement(u.a,{content:\"openledger.retry\"})),s.a.createElement(\"p\",null,this.state.error));else if(\"loading\"===this.state.current_status)o=s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"button\",{className:\"button outline\",onClick:this.onShowOpenLedgerTransactionHistory.bind(this),disabled:\"true\"},s.a.createElement(u.a,{content:\"openledger.show_transaction_history\"})),s.a.createElement(u.a,{component:\"p\",content:\"openledger.loading\"}));else{var r=\"never_loaded\"===this.state.current_status?s.a.createElement(u.a,{content:\"openledger.show_transaction_history\"}):s.a.createElement(u.a,{content:\"openledger.refresh_transaction_history\"});o=s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"br\",null),s.a.createElement(u.a,{component:\"h4\",content:\"openledger.header_transaction_history\"}),s.a.createElement(\"button\",{className:\"button outline\",onClick:this.onShowOpenLedgerTransactionHistory.bind(this)},r),e,n)}return o}}]),t}();we.propTypes={rpc_url:A.a.string,account:p.a.ChainAccount};var ve=Object(d.a)(we),be=a(2195),Ee=a(55),ke=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Ce=new Ee.a(\"__bts__\"),Se=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.current_citadel_address_cache_version_string=\"2\"}return ke(e,[{key:\"getIndexForDepositKeyInExchange\",value:function(e,t,a){return[this.current_citadel_address_cache_version_string,e,t,a].reduce(function(e,t){return e.concat(\"[\",t,\"]\")},\"\")}},{key:\"getCachedInputAddress\",value:function(e,t,a,n){var s=Z.a.getWallet(),i=this.getIndexForDepositKeyInExchange(t,a,n);if(s){s.deposit_keys=s.deposit_keys||{},s.deposit_keys[e]=s.deposit_keys[e]||{},s.deposit_keys[e][i]=s.deposit_keys[e][i]||[];var o=s.deposit_keys[e][i].length;return o?s.deposit_keys[e][i][o-1]:null}var r=Ce.get(\"deposit_keys\",{});r[e]=r[e]||{},r[e][i]=r[e][i]||[];var l=r[e][i].length;return l?r[e][i][l-1]:null}},{key:\"cacheInputAddress\",value:function(e,t,a,n,s,i){if(s){var o=Z.a.getWallet(),r=this.getIndexForDepositKeyInExchange(t,a,n);if(o)delete o.deposit_keys.undefined,Object.keys(o.deposit_keys||{}).forEach(function(e){for(var t in o.deposit_keys[e])if(o.deposit_keys[e][t]&&o.deposit_keys[e][t].length)for(var a=o.deposit_keys[e][t].length-1;a>=0;a--)o.deposit_keys[e][t][a]&&\"unknown\"===o.deposit_keys[e][t][a].address&&o.deposit_keys[e][t].splice(a,1)}),o.deposit_keys=o.deposit_keys||{},o.deposit_keys[e]=o.deposit_keys[e]||{},o.deposit_keys[e][r]=o.deposit_keys[e][r]||[],o.deposit_keys[e][r].push({address:s,memo:i}),Z.a._updateWallet();else{var l=Ce.get(\"deposit_keys\",{});l[e]=l[e]||{},l[e][r]=l[e][r]||[],l[e][r].push({address:s,memo:i}),Ce.set(\"deposit_keys\",l)}}}}]),e}(),Ae=(a(74),a(146)),Oe=a(35),Ne=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var a=[],n=!0,s=!1,i=void 0;try{for(var o,r=e[Symbol.iterator]();!(n=(o=r.next()).done)&&(a.push(o.value),!t||a.length!==t);n=!0);}catch(e){s=!0,i=e}finally{try{!n&&r.return&&r.return()}finally{if(s)throw i}}return a}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),xe=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();function Te(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function je(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function Me(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function Ie(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var Be=function(e){function t(){return je(this,t),Me(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return Ie(t,s.a.Component),xe(t,[{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.gateway+\"_bridge\"}},{key:\"onWithdraw\",value:function(){this.props.showModal()}},{key:\"render\",value:function(){var e=this.getWithdrawModalId(),t=\"button disabled\";return Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))&&this.props.amount_to_withdraw&&!(this.props.amount_to_withdraw.indexOf(\" \")>=0)&&!isNaN(this.props.amount_to_withdraw)&&this.props.amount_to_withdraw>0&&this.props.amount_to_withdraw<=this.props.balance.toJS().balance/l.a.get_asset_precision(this.props.asset.get(\"precision\"))&&(t=\"button\"),s.a.createElement(\"span\",null,s.a.createElement(\"span\",null,s.a.createElement(\"button\",{className:t,onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"\"}),s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \")),s.a.createElement(M.Modal,{title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.output_coin_name,symbol:this.props.output_coin_symbol}),visible:this.props.visible,onCancel:this.props.hideModal,footer:null},s.a.createElement(h.a,{showModal:this.props.showModal,hideModal:this.props.hideModal,key:\"\"+this.props.key,account:this.props.account.get(\"name\"),issuer:this.props.issuer,asset:this.props.asset.get(\"id\"),output_coin_name:this.props.output_coin_name,output_coin_symbol:this.props.output_coin_symbol,output_coin_type:this.props.output_coin_type,output_supports_memos:this.props.output_supports_memos,amount_to_withdraw:this.props.amount_to_withdraw,modal_id:e,url:this.props.url,output_wallet_type:this.props.output_wallet_type,balance:this.props.account.get(\"balances\").toJS()[this.props.asset.get(\"id\")]})))}}]),t}();Be.propTypes={balance:p.a.ChainObject,url:A.a.string.isRequired},Be=Object(d.a)(Be);var Pe=function(e){function t(){return je(this,t),Me(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return Ie(t,s.a.Component),xe(t,[{key:\"render\",value:function(){var e=s.a.createElement(Be,{showModal:this.props.showModal,hideModal:this.props.hideModal,visible:this.props.visible,key:this.props.key,account:this.props.account,issuer:this.props.issuer,asset:this.props.asset,output_coin_name:this.props.output_coin_name,output_coin_symbol:this.props.output_coin_symbol,output_coin_type:this.props.output_coin_type,output_supports_memos:this.props.output_supports_memos,amount_to_withdraw:this.props.amount_to_withdraw,url:this.props.url,gateway:this.props.gateway,output_wallet_type:this.props.output_wallet_type,balance:this.props.account.get(\"balances\").toJS()[this.props.asset.get(\"id\")]});return s.a.createElement(\"span\",null,e)}}]),t}();Pe.propTypes={account:p.a.ChainAccount.isRequired,asset:p.a.ChainAsset.isRequired,output_coin_type:A.a.string.isRequired,url:A.a.string.isRequired},Pe=Object(d.a)(Pe);var De=function(e){function t(e){je(this,t);var a=Me(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.refresh_interval=12e4,a.deposit_address_cache=new Se,a.coin_info_request_states={request_in_progress:0,request_complete:1,request_failed:2},a.estimation_directions={output_from_input:0,input_from_output:1},a.state={isModalVisible:!1,coin_symbol:\"xmr\",key_for_withdrawal_dialog:\"xmr\",supports_output_memos:\"\",url:b.c.BASE,error:null,deposit_input_coin_type:null,deposit_output_coin_type:null,input_address_and_memo:null,deposit_estimated_input_amount:a.props.initial_deposit_estimated_input_amount||\"1.0\",deposit_estimated_output_amount:null,deposit_limit:null,deposit_error:null,failed_calculate_deposit:null,withdraw_input_coin_type:null,withdraw_output_coin_type:null,withdraw_estimated_input_amount:a.props.initial_withdraw_estimated_input_amount||\"1.0\",withdraw_estimated_output_amount:null,withdraw_limit:null,withdraw_error:null,failed_calculate_withdraw:null,coin_info_request_state:a.coin_info_request_states.request_in_progress,input_address_requests_in_progress:{},deposit_estimate_direction:a.estimation_directions.output_from_input,deposit_limit_cache:{},deposit_limit_requests_in_progress:{},coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null,announcements:[]},a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return Ie(t,s.a.Component),xe(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"urlConnection\",value:function(e,t){var a=this;this.setState({url:e});var n=fetch(e+\"/coins\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),s=fetch(e+\"/wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),i=fetch(e+\"/trading-pairs\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),o=fetch(e+\"/active-wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()});Promise.all([n,s,i,o]).then(function(e){var t=Ne(e,4),n=t[0],s=(t[1],t[2]),i=t[3],o={};n.forEach(function(e){return o[e.coinType]=e});var r={},l={};s.forEach(function(e){var t=o[e.inputCoinType],a=o[e.outputCoinType];(t.backingCoinType!=e.outputCoinType||a.backingCoinType!=e.inputCoinType&&0==t.restricted&&0==a.restricted)&&-1!=i.indexOf(t.walletType)&&-1!=i.indexOf(a.walletType)&&(\"bitshares2\"!=t.walletType&&\"bitshares2\"==a.walletType?(r[e.inputCoinType]=r[e.inputCoinType]||[],r[e.inputCoinType].push(e.outputCoinType)):(l[e.inputCoinType]=l[e.inputCoinType]||[],l[e.inputCoinType].push(e.outputCoinType)))});var c=null,u=null,p=Object.keys(r);if(p.forEach(function(e){r[e].sort()}),p.length){c=a.props.initial_deposit_input_coin_type&&a.props.initial_deposit_input_coin_type in r?a.props.initial_deposit_input_coin_type:p[0];var d=r[c];u=a.props.initial_deposit_output_coin_type&&-1!=d.indexOf(a.props.initial_deposit_output_coin_type)?a.props.initial_deposit_output_coin_type:d[0]}var m=null,h=null,_=Object.keys(l);if(_.forEach(function(e){l[e].sort()}),_.length){m=a.props.initial_withdraw_input_coin_type&&a.props.initial_withdraw_input_coin_type in l?a.props.initial_withdraw_input_coin_type:_[0];var f=l[m];h=a.props.initial_withdraw_output_coin_type&&-1!=f.indexOf(a.props.initial_withdraw_output_coin_type)?a.props.initial_withdraw_output_coin_type:f[0]}var y=a.getCachedOrGeneratedInputAddress(c,u),g=a.getCachedOrFreshDepositLimit(\"deposit\",c,u),w=a.getAndUpdateOutputEstimate(\"deposit\",c,u,a.state.deposit_estimated_input_amount),v=a.getAndUpdateOutputEstimate(\"withdraw\",m,h,a.state.withdraw_estimated_input_amount),b=a.getCachedOrFreshDepositLimit(\"withdraw\",m,h);a.unMounted||a.setState({coin_info_request_state:a.coin_info_request_states.request_complete,coins_by_type:o,allowed_mappings_for_deposit:r,allowed_mappings_for_withdraw:l,deposit_input_coin_type:c,deposit_output_coin_type:u,input_address_and_memo:y,deposit_limit:g,deposit_estimated_output_amount:w,deposit_estimate_direction:a.estimation_directions.output_from_input,withdraw_input_coin_type:m,withdraw_output_coin_type:h,withdraw_limit:b,withdraw_estimated_output_amount:v,withdraw_estimate_direction:a.estimation_directions.output_from_input,supports_output_memos:o.xmr.supportsOutputMemos})}).catch(function(e){a.setState({coin_info_request_state:t,coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null})})}},{key:\"updateEstimates\",value:function(){if(this.state.deposit_input_coin_type&&this.state.deposit_output_coin_type){var e=this.getCachedOrGeneratedInputAddress(this.state.deposit_input_coin_type,this.state.deposit_output_coin_type),t=this.getCachedOrFreshDepositLimit(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type),a=this.state.deposit_estimated_input_amount,n=this.state.deposit_estimated_output_amount;this.state.deposit_estimate_direction==this.estimation_directions.output_from_input?n=this.getAndUpdateOutputEstimate(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type,a):a=this.getAndUpdateInputEstimate(\"deposit\",this.state.deposit_input_coin_type,this.state.deposit_output_coin_type,n);var s=this.getCachedOrFreshDepositLimit(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type),i=this.state.withdraw_estimated_input_amount,o=this.state.withdraw_estimated_output_amount;this.state.withdraw_estimate_direction==this.estimation_directions.output_from_input?o=this.getAndUpdateOutputEstimate(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type,i):i=this.getAndUpdateinputEstimate(\"withdraw\",this.state.withdraw_input_coin_type,this.state.withdraw_output_coin_type,o),this.setState({input_address_and_memo:e,deposit_limit:t,deposit_estimated_input_amount:a,deposit_estimated_output_amount:n,withdraw_limit:s,withdraw_estimated_input_amount:i,withdraw_estimated_output_amount:o,key_for_withdrawal_dialog:i})}}},{key:\"componentWillMount\",value:function(){var e=this,t=this.state.url;this.urlConnection(t,0);var a=fetch(t+\"/coins\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),n=fetch(t+\"/trading-pairs\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}),s=fetch(t+\"/active-wallets\",{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()});Promise.all([a,n,s]).then(function(e){var t=Ne(e,3),a=t[0],n=t[1],s=t[2],i={};a.forEach(function(e){return i[e.coinType]=e}),n.forEach(function(e){var t=i[e.inputCoinType],a=i[e.outputCoinType];t.backingCoinType!=e.outputCoinType&&a.backingCoinType!=e.inputCoinType&&-1!=s.indexOf(t.walletType)&&s.indexOf(a.walletType)})}).catch(function(t){e.urlConnection(\"https://citadel.li/trade\",2),e.setState({coin_info_request_state:0,coins_by_type:null,allowed_mappings_for_deposit:null,allowed_mappings_for_withdraw:null})})}},{key:\"componentDidMount\",value:function(){this.update_timer=setInterval(this.updateEstimates.bind(this),this.refresh_interval)}},{key:\"componentWillUnmount\",value:function(){clearInterval(this.update_timer),this.unMounted=!0}},{key:\"getCachedInputAddress\",value:function(e,t,a){var n=this.props.account.get(\"name\");return this.deposit_address_cache.getCachedInputAddress(this.props.gateway,n,e,t)}},{key:\"cacheInputAddress\",value:function(e,t,a,n){var s=this.props.account.get(\"name\");this.deposit_address_cache.cacheInputAddress(this.props.gateway,s,e,t,a,n)}},{key:\"getCachedOrGeneratedInputAddress\",value:function(e,t){var a=this,n=this.getCachedInputAddress(e,t);if(n)return n;if(this.state.input_address_requests_in_progress[e]=this.state.input_address_requests_in_progress[e]||{},this.state.input_address_requests_in_progress[e][t])return null;var s=JSON.stringify({inputCoinType:e,outputCoinType:t,outputAddress:this.props.account.get(\"name\")});return this.state.input_address_requests_in_progress[e][t]=!0,fetch(this.state.url+\"/simple-api/initiate-trade\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:s}).then(function(n){n.json().then(function(n){if(console.assert(n.inputCoinType==e,\"unexpected reply from initiate-trade\"),console.assert(n.outputCoinType==t,\"unexpected reply from initiate-trade\"),n.inputCoinType!=e||n.outputCoinType!=t)throw Error(\"unexpected reply from initiate-trade\");a.cacheInputAddress(n.inputCoinType,n.outputCoinType,n.inputAddress,n.inputMemo),delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==n.inputCoinType&&a.state.deposit_output_coin_type==n.outputCoinType&&a.setState({input_address_and_memo:{address:n.inputAddress,memo:n.inputMemo}})},function(n){delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==e&&a.state.deposit_output_coin_type==t&&a.setState({input_address_and_memo:{address:\"error generating address\",memo:null}})})},function(n){delete a.state.input_address_requests_in_progress[e][t],a.state.deposit_input_coin_type==e&&a.state.deposit_output_coin_type==t&&a.setState({input_address_and_memo:{address:\"error generating address\",memo:null}})}),null}},{key:\"getCachedDepositLimit\",value:function(e,t){if(this.state.deposit_limit_cache[e]=this.state.deposit_limit_cache[e]||{},this.state.deposit_limit_cache[e][t]){var a=this.state.deposit_limit_cache[e][t];if(new Date-a.timestamp<this.refresh_interval)return a;delete this.state.deposit_limit_cache[e][t]}return null}},{key:\"cacheDepositLimit\",value:function(e,t,a){a.timestamp=new Date,this.state.deposit_limit_cache[e]=this.state.deposit_limit_cache[e]||{},this.state.deposit_limit_cache[e][t]=a}},{key:\"getCachedOrFreshDepositLimit\",value:function(e,t,a){var n=this,s=this.getCachedDepositLimit(t,a);if(s)return s;this.state.deposit_limit_requests_in_progress[t]=this.state.input_address_requests_in_progress[t]||{},this.state.deposit_limit_requests_in_progress[t][a]=!0;var i=this.state.url+\"/deposit-limits?inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(s){if(!n.unMounted){if(console.assert(s.inputCoinType==t&&s.outputCoinType==a,\"unexpected reply from deposit-limits\"),s.inputCoinType!=t||s.outputCoinType!=a)throw Error(\"unexpected reply from deposit-limits\");var i={timestamp:new Date,limit:s.depositLimit};n.cacheDepositLimit(t,a,i),delete n.state.deposit_limit_requests_in_progress[t][a],n.state[e+\"_input_coin_type\"]==t&&n.state[e+\"_output_coin_type\"]==a&&n.setState(Te({},e+\"_limit\",i))}},function(e){delete n.state.deposit_limit_requests_in_progress[t][a]}),null}},{key:\"getAndUpdateOutputEstimate\",value:function(e,t,a,n){var s=this;if(!this.unMounted){\"deposit\"==e&&this.setState({failed_calculate_deposit:null}),\"withdraw\"==e&&this.setState({failed_calculate_withdraw:null});var i=this.state.url+\"/estimate-output-amount?inputAmount=\"+encodeURIComponent(n)+\"&inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(i){if(!s.unMounted)if(i.error){if(s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_input_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.output_from_input){var o=i.error.message;\"deposit\"==e&&s.setState({failed_calculate_deposit:\"Failed to calculate\"}),\"withdraw\"==e&&s.setState({failed_calculate_withdraw:\"Failed to calculate\"});o.startsWith(\"Internal Server Error: \")&&(o=o.substr(\"Internal Server Error: \".length)),s.setState(Te({},e+\"_error\",o))}}else{var r,l;if(console.assert(i.inputCoinType==t&&i.outputCoinType==a&&i.inputAmount==n,\"unexpected reply from estimate-output-amount\"),i.inputCoinType!=t||i.outputCoinType!=a||i.inputAmount!=n)s.setState((Te(r={},e+\"_estimated_output_amount\",i.outputAmount),Te(r,e+\"_error\",null),r));if(s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_input_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.output_from_input)s.setState((Te(l={},e+\"_estimated_output_amount\",i.outputAmount),Te(l,e+\"_error\",null),l))}},function(e){}),null}}},{key:\"getAndUpdateInputEstimate\",value:function(e,t,a,n){var s=this;if(!this.unMounted){\"deposit\"==e&&this.setState({failed_calculate_deposit:null}),\"withdraw\"==e&&this.setState({failed_calculate_withdraw:null});var i=this.state.url+\"/estimate-input-amount?outputAmount=\"+encodeURIComponent(n)+\"&inputCoinType=\"+encodeURIComponent(t)+\"&outputCoinType=\"+encodeURIComponent(a);return fetch(i,{method:\"get\",headers:new Headers({Accept:\"application/json\"})}).then(function(e){return e.json()}).then(function(i){var o;s.unMounted||(console.assert(i.inputCoinType==t&&i.outputCoinType==a&&i.outputAmount==n,\"unexpected reply from estimate-input-amount\"),i.inputCoinType==t&&i.outputCoinType==a&&i.outputAmount==n||(\"deposit\"==e&&s.setState({failed_calculate_deposit:\"Failed to calculate\"}),\"withdraw\"==e&&s.setState({failed_calculate_withdraw:\"Failed to calculate\"})),s.state[e+\"_input_coin_type\"]==t&&s.state[e+\"_output_coin_type\"]==a&&s.state[e+\"_estimated_output_amount\"]==n&&s.state[e+\"_estimate_direction\"]==s.estimation_directions.input_from_output&&s.setState((Te(o={},e+\"_estimated_input_amount\",i.inputAmount),Te(o,\"key_for_withdrawal_dialog\",i.inputAmount),o)))},function(e){}),null}}},{key:\"onInputAmountChanged\",value:function(e,t){var a,n=t.target.value;\"\"==n&&(n=\"0\");var s=this.getAndUpdateOutputEstimate(e,this.state[e+\"_input_coin_type\"],this.state[e+\"_output_coin_type\"],n);this.setState((Te(a={},e+\"_estimated_input_amount\",n),Te(a,e+\"_estimated_output_amount\",s),Te(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),Te(a,\"key_for_withdrawal_dialog\",n),a))}},{key:\"onOutputAmountChanged\",value:function(e,t){var a,n=t.target.value;\"\"==n&&(n=\"0\");var s=this.getAndUpdateInputEstimate(e,this.state[e+\"_input_coin_type\"],this.state[e+\"_output_coin_type\"],n);this.setState((Te(a={},e+\"_estimated_output_amount\",n),Te(a,e+\"_estimated_input_amount\",s),Te(a,e+\"_estimate_direction\",this.estimation_directions.input_from_output),a))}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.gateway+\"_bridge\"}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"onInputCoinTypeChanged\",value:function(e,t){var a,n=this,s=null,i=\"_estimated_output_amount\",o=t.target.value,r=this.state[\"allowed_mappings_for_\"+e][o],l=r[0];-1!=r.indexOf(this.state[e+\"_output_coin_type\"])&&(l=this.state[e+\"_output_coin_type\"]);var c=this.state.input_address_and_memo;\"deposit\"==e&&(c=this.getCachedOrGeneratedInputAddress(o,l));var u=this.getCachedOrFreshDepositLimit(e,o,l);this.state[e+\"_estimated_input_amount\"]?s=this.getAndUpdateOutputEstimate(e,o,l,this.state[e+\"_estimated_input_amount\"]):(s=this.getAndUpdateInputEstimate(e,o,l,this.state[e+\"_estimated_output_amount\"]),i=\"_estimated_input_amount\"),\"withdraw\"==e&&r.forEach(function(e){l===e&&n.setState({coin_symbol:o+\"input\",supports_output_memos:n.state.coins_by_type[e].supportsOutputMemos})}),this.setState((Te(a={},e+\"_input_coin_type\",o),Te(a,e+\"_output_coin_type\",l),Te(a,\"input_address_and_memo\",c),Te(a,e+\"_limit\",u),Te(a,e+i,s),Te(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),a))}},{key:\"onOutputCoinTypeChanged\",value:function(e,t){var a,n=this,s=null,i=\"_estimated_output_amount\",o=t.target.value,r=this.state.allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type];\"withdraw\"==e&&r.forEach(function(e){o===e&&n.setState({coin_symbol:o+\"output\",supports_output_memos:n.state.coins_by_type[e].supportsOutputMemos,key_for_withdrawal_dialog:o})});var l=this.state.input_address_and_memo;\"deposit\"==e&&(l=this.getCachedOrGeneratedInputAddress(this.state[e+\"_input_coin_type\"],o));var c=this.getCachedOrFreshDepositLimit(e,this.state[e+\"_input_coin_type\"],o);this.state[e+\"_estimated_input_amount\"]?s=this.getAndUpdateOutputEstimate(e,this.state[e+\"_input_coin_type\"],o,this.state[e+\"_estimated_input_amount\"]):(s=this.getAndUpdateInputEstimate(e,this.state[e+\"_input_coin_type\"],o,this.state[e+\"_estimated_output_amount\"]),i=\"_estimated_input_amount\"),this.setState((Te(a={},e+\"_output_coin_type\",o),Te(a,\"input_address_and_memo\",l),Te(a,e+\"_limit\",c),Te(a,e+i,s),Te(a,e+\"_estimate_direction\",this.estimation_directions.output_from_input),a))}},{key:\"render\",value:function(){var e=this;if(!this.props.account||!this.props.issuer_account||!this.props.gateway)return s.a.createElement(\"div\",null);var t=void 0,a=void 0,n=void 0,i=void 0,o=void 0;if(this.state.coin_info_request_state==this.coin_info_request_states.request_failed)return s.a.createElement(\"div\",null,s.a.createElement(\"p\",null,\"Error connecting to citadel.li, please try again later\"));if(this.state.coin_info_request_state==this.coin_info_request_states.never_requested||this.state.coin_info_request_state==this.coin_info_request_states.request_in_progress)return s.a.createElement(\"div\",null,s.a.createElement(\"p\",null,\"Retrieving current trade data from citadel.li\"));var r=null,c=s.a.createElement(u.a,{content:\"gateway.calc\"});null!=this.state.failed_calculate_deposit&&(c=this.state.failed_calculate_deposit);var p=s.a.createElement(u.a,{content:\"gateway.calc\"});null!=this.state.failed_calculate_withdraw&&(p=this.state.failed_calculate_withdraw);s.a.createElement(u.a,{content:\"gateway.calc\"});if(null!=this.state.failed_calculate_conversion&&this.state.failed_calculate_conversion,Object.getOwnPropertyNames(this.state.allowed_mappings_for_deposit).length>0){var d=[];Object.keys(this.state.allowed_mappings_for_deposit).sort().forEach(function(t){d.push(s.a.createElement(\"option\",{key:t,value:t||\"\"},e.state.coins_by_type[t].symbol))});var m=s.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"external-coin-types\",value:this.state.deposit_input_coin_type||\"\",onChange:this.onInputCoinTypeChanged.bind(this,\"deposit\")},d),h=[];this.state.allowed_mappings_for_deposit[this.state.deposit_input_coin_type].forEach(function(t){h.push(s.a.createElement(\"option\",{key:t,value:t||\"\"},e.state.coins_by_type[t].walletSymbol))});var _=s.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"native-coin-types\",value:this.state.deposit_output_coin_type||\"\",onChange:this.onOutputCoinTypeChanged.bind(this,\"deposit\")},h),f=this.state.input_address_and_memo?this.state.input_address_and_memo:{address:\"unknown\",memo:null},g=this.state.deposit_estimated_input_amount,w=this.state.deposit_estimated_output_amount,v=g?s.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:g||\"\",onChange:this.onInputAmountChanged.bind(this,\"deposit\")}):c,b=w?s.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:w||\"\",onChange:this.onOutputAmountChanged.bind(this,\"deposit\")}):c,E=s.a.createElement(\"span\",null,\"updating\");this.state.deposit_limit&&(E=this.state.deposit_limit.limit?s.a.createElement(\"div\",{className:\"blocktrades-bridge\"},s.a.createElement(\"span\",{className:\"deposit-limit\"},s.a.createElement(u.a,{content:\"gateway.limit\",amount:l.a.format_number(this.state.deposit_limit.limit,8),symbol:this.state.coins_by_type[this.state.deposit_input_coin_type].walletSymbol}))):null);var k=null;this.state.deposit_error&&(k=s.a.createElement(\"div\",null,this.state.deposit_error)),n=s.a.createElement(\"thead\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.deposit\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.balance\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.state.deposit_input_coin_type}))));var C=null;C=f.memo?s.a.createElement(u.a,{unsafe:!0,content:\"gateway.address_with_memo\",address:f.address,memo:f.memo}):s.a.createElement(\"span\",null,f.address),a=s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(\"div\",{className:\"blocktrades-bridge\",style:{display:\"flex\",alignItems:\"center\"}},s.a.createElement(\"div\",{className:\"inline-block\"},s.a.createElement(\"div\",null,m),s.a.createElement(\"div\",null,v)),\"→\",s.a.createElement(\"div\",{className:\"inline-block\"},s.a.createElement(\"div\",null,_),s.a.createElement(\"div\",null,b)),s.a.createElement(\"div\",null,k))),s.a.createElement(\"td\",null,s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.state.coins_by_type[this.state.deposit_output_coin_type].walletSymbol})),s.a.createElement(\"td\",{style:{wordBreak:\"break-all\"}},C,s.a.createElement(\"br\",null),E)))}if(Object.getOwnPropertyNames(this.state.allowed_mappings_for_withdraw).length>0){this.getWithdrawModalId();this.state.coins_by_type[this.state.withdraw_input_coin_type].symbol;r=this.state.withdraw_estimated_input_amount;var S=[];Object.keys(this.state.allowed_mappings_for_withdraw).sort().forEach(function(t){S.push(s.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].walletSymbol))});var A=s.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"native-coin-types\",value:this.state.withdraw_input_coin_type,onChange:this.onInputCoinTypeChanged.bind(this,\"withdraw\")},S),O=[];this.state.allowed_mappings_for_withdraw[this.state.withdraw_input_coin_type].forEach(function(t){O.push(s.a.createElement(\"option\",{key:t,value:t},e.state.coins_by_type[t].symbol))});var N=s.a.createElement(\"select\",{style:{width:\"11rem\"},className:\"external-coin-types\",value:this.state.withdraw_output_coin_type,onChange:this.onOutputCoinTypeChanged.bind(this,\"withdraw\")},O),x=this.state.withdraw_estimated_input_amount,T=x?s.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:x||\"\",onChange:this.onInputAmountChanged.bind(this,\"withdraw\")}):p,j=this.state.withdraw_estimated_output_amount,M=j?s.a.createElement(\"input\",{style:{width:\"11rem\"},type:\"text\",value:j||\"\",onChange:this.onOutputAmountChanged.bind(this,\"withdraw\")}):p,I=s.a.createElement(Pe,{showModal:this.showModal,hideModal:this.hideModal,visible:this.state.isModalVisible,key:this.state.key_for_withdrawal_dialog,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol,output_coin_name:this.state.coins_by_type[this.state.withdraw_output_coin_type].name,output_coin_symbol:this.state.coins_by_type[this.state.withdraw_output_coin_type].symbol,output_coin_type:this.state.withdraw_output_coin_type,output_supports_memos:this.state.supports_output_memos,amount_to_withdraw:r,url:this.state.url,gateway:this.props.gateway,output_wallet_type:this.state.coins_by_type[this.state.withdraw_output_coin_type].walletType}),B=null;this.state.withdraw_error&&(B=s.a.createElement(\"div\",null,this.state.withdraw_error));var P=s.a.createElement(\"span\",null,\"...\");this.state.withdraw_limit&&(P=this.state.withdraw_limit.limit?s.a.createElement(\"div\",{className:\"blocktrades-bridge\"},s.a.createElement(\"span\",{className:\"deposit-limit\"},s.a.createElement(u.a,{content:\"gateway.limit\",amount:l.a.format_number(this.state.withdraw_limit.limit,8),symbol:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol}))):s.a.createElement(\"div\",{className:\"blocktrades-bridge\"},s.a.createElement(\"span\",{className:\"deposit-limit\"},\"no limit\"))),o=s.a.createElement(\"thead\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.withdraw\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.balance\"})),s.a.createElement(\"th\",null))),i=s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(\"div\",{className:\"blocktrades-bridge\"},s.a.createElement(\"div\",{className:\"inline-block\"},s.a.createElement(\"div\",null,A),s.a.createElement(\"div\",null,T)),\"→\",s.a.createElement(\"div\",{className:\"inline-block\"},s.a.createElement(\"div\",null,N),s.a.createElement(\"div\",null,M)),s.a.createElement(\"div\",null,B))),s.a.createElement(\"td\",null,s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.state.coins_by_type[this.state.withdraw_input_coin_type].walletSymbol})),s.a.createElement(\"td\",null,I,s.a.createElement(\"br\",null),P)))}return this.state.announcements.length>0&&(t=s.a.createElement(\"div\",{className:\"blocktrades-announcements-container\"},this.state.announcements.map(function(e,t){var a=\"txtann info\";return 10===e.status?a=\"txtann error\":20===e.status?a=\"txtann warning\":30===e.status?a=\"txtann success\":40===e.status&&(a=\"txtann info\"),1===e.format&&e.message.replace(/\\r\\n|\\r|\\n/g,\"<br />\"),s.a.createElement(\"div\",{className:\"blocktrades-announcements \"+a,key:t},e.message)},this))),s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(u.a,{component:\"h5\",content:\"gateway.bridge_text\"})),t,s.a.createElement(\"table\",{className:\"table\"},n,a,o,i))}}]),t}();De.propTypes={url:A.a.string,gateway:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,initial_deposit_input_coin_type:A.a.string,initial_deposit_output_coin_type:A.a.string,initial_deposit_estimated_input_amount:A.a.string,initial_withdraw_input_coin_type:A.a.string,initial_withdraw_output_coin_type:A.a.string,initial_withdraw_estimated_input_amount:A.a.string};Object(d.a)(De);var Fe=a(566),We=a(24),Re=a(2196),qe=a(2197),Le=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Ue=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.current_rudex_address_cache_version_string=\"1\"}return Le(e,[{key:\"getIndexForDepositKeyInExchange\",value:function(e,t,a){return[this.current_rudex_address_cache_version_string,e,t,a].reduce(function(e,t){return e.concat(\"[\",t,\"]\")},\"\")}},{key:\"getCachedInputAddress\",value:function(e,t,a,n){var s=Z.a.getWallet();if(!s)return null;s.deposit_keys=s.deposit_keys||{},s.deposit_keys[e]=s.deposit_keys[e]||{};var i=this.getIndexForDepositKeyInExchange(t,a,n);s.deposit_keys[e][i]=s.deposit_keys[e][i]||[];var o=s.deposit_keys[e][i].length;return o?s.deposit_keys[e][i][o-1]:null}},{key:\"cacheInputAddress\",value:function(e,t,a,n,s,i){var o=Z.a.getWallet();if(!o)return null;o.deposit_keys=o.deposit_keys||{},o.deposit_keys[e]=o.deposit_keys[e]||{};var r=this.getIndexForDepositKeyInExchange(t,a,n);o.deposit_keys[e][r]=o.deposit_keys[e][r]||[],o.deposit_keys[e][r].push({address:s,memo:i}),Z.a._updateWallet()}}]),e}(),Ve=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var He=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.deposit_address_cache=new Ue,a.state={isModalVisible:!1,receive_address:null},a.addDepositAddress=a.addDepositAddress.bind(a),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Ve(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_getDepositObject\",value:function(){return{inputCoinType:this.props.deposit_coin_type,outputCoinType:this.props.receive_coin_type,outputAddress:this.props.account.get(\"name\"),stateCallback:this.addDepositAddress}}},{key:\"addDepositAddress\",value:function(e){var t=this.props.account.get(\"name\");this.deposit_address_cache.cacheInputAddress(this.props.gateway,t,this.props.deposit_coin_type,this.props.receive_coin_type,e.address,e.memo),this.setState({receive_address:e})}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"render\",value:function(){var e=s.a.createElement(\"div\",{style:{display:\"none\",minHeight:150}});if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return e;var t=this.props.account.get(\"balances\");if(this.props.deprecated_in_favor_of){var a=!1,n=t.get(this.props.receive_asset.get(\"id\"));if(n){var i=m.ChainStore.getObject(n);if(i)0!=i.get(\"balance\")&&(a=!0)}if(!a)return e}var o=this.state.receive_address;if(!o){var r=this.props.account.get(\"name\");o=this.deposit_address_cache.getCachedInputAddress(this.props.gateway,r,this.props.deposit_coin_type,this.props.receive_coin_type)}var c=this.getWithdrawModalId(),p=null,d=null,h=\"\",_=void 0;if(this.props.deposit_account){p=s.a.createElement(\"span\",null,this.props.deposit_account),h=this.props.deposit_account,_=\"dex:\"+this.props.account.get(\"name\"),d=s.a.createElement(\"span\",null,_);var f=this.props.deposit_coin_type+\":\"}else{o.memo?(_=o.memo,h=o.address,p=s.a.createElement(\"span\",null,o.address),d=s.a.createElement(\"span\",null,o.memo)):(h=o.address,p=s.a.createElement(\"span\",null,o.address));f=\"\"}return\"deposit\"===this.props.action?s.a.createElement(\"div\",{className:\"rudex__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(\"b\",null,s.a.createElement(u.a,{content:\"gateway.rudex.min_amount\",minAmount:l.a.format_number(this.props.min_amount/l.a.get_asset_precision(this.props.asset_precision),this.props.asset_precision,!1),symbol:this.props.deposit_coin_type}))),s.a.createElement(\"div\",{style:{padding:\"10px 0\",fontSize:\"1.1rem\"}},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,\"ADDRESS:\",\" \",s.a.createElement(\"b\",null,s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},p)))),d?s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},\"MEMO: \",s.a.createElement(\"b\",null,d)))):null)),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},p?s.a.createElement(B.a,{text:h},s.a.createElement(\"div\",{className:\"button\"},\"Copy address\")):null,_?s.a.createElement(B.a,{text:_},s.a.createElement(\"div\",{className:\"button\"},\"Copy memo\")):null)))):s.a.createElement(\"div\",{className:\"rudex__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible},s.a.createElement(qe.a,{hideModal:this.hideModal,showModal:this.showModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),output_coin_name:this.props.deposit_asset_name,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,memo_prefix:f,modal_id:c,min_amount:this.props.min_amount,asset_precision:this.props.asset_precision,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})))}}]),t}();He.propTypes={gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired,min_amount:A.a.number,asset_precision:A.a.number};var Je=Object(d.a)(He),Ge=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Xe=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={activeCoin:a._getActiveCoin(e,{action:\"deposit\"}),action:e.viewSettings.get(\"rudexAction\",\"deposit\")},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Ge(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_rudex_\"+t.action,null),n=null;return\"deposit\"==t.action&&(n=\"PPY\"),\"withdraw\"==t.action&&(n=\"PPY\"),a||n}},{key:\"componentWillReceiveProps\",value:function(e){e.provider!==this.props.provider&&this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_rudex_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},\"rudexAction\",e))}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.coins,n=t.account,i=this.state,o=i.activeCoin,r=i.action;if(!a.length)return s.a.createElement(E.a,null);var l=a.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===r?e.depositAllowed:e.withdrawalAllowed)}),c=l.map(function(e){var t=\"deposit\"===r?e.backingCoin.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),p=l.filter(function(e){return\"deposit\"===r?e.backingCoin.toUpperCase()===o:e.symbol===o})[0];p||(p=l[0]);var d=\"deposit\"===this.state.action;return s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+r}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:o},c))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===r?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===r?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),p?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(Je,{key:\"\"+p.symbol,gateway:p.gatewayWallet,issuer_account:p.issuer,account:n,deposit_asset:p.backingCoin.toUpperCase(),deposit_asset_name:p.name,deposit_coin_type:p.backingCoin.toLowerCase(),deposit_account:p.gatewayWallet,deposit_wallet_type:p.walletType,receive_asset:p.symbol,receive_coin_type:p.symbol.toLowerCase(),supports_output_memos:p.memoSupport,min_amount:p.minAmount,asset_precision:p.precision,action:this.state.action}),s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.rudex.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"a\",{href:\"https://rudex.freshdesk.com\",target:\"_blank\",rel:\"noopener noreferrer\"},\"https://rudex.freshdesk.com\"))),p&&p.symbol?s.a.createElement(q.b,{asset:p.symbol,fromAccount:d?p.issuerId:this.props.account.get(\"id\"),to:d?this.props.account.get(\"id\"):p.issuerId},function(t){var a=t.asset,n=t.to,i=t.fromAccount;return s.a.createElement(q.a,{accountsList:U.a.List([e.props.account.get(\"id\")]),limit:10,compactView:!0,fullHeight:!0,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+e.state.action}),customFilter:{fields:[\"to\",\"from\",\"asset_id\"],values:{to:n.get(\"id\"),from:i.get(\"id\"),asset_id:a.get(\"id\")}}})}):null):null)}}]),t}(),ze=Object(i.a)(Xe,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),Ke=a(184),Qe=a(356),Ye=a(2199),Ze=a(76);new Ee.a(\"\");function $e(e){var t=e.coin,a=e.account,n=e.stateCallback,s={coin:t,account:a},i=JSON.stringify(s);fetch(b.a.BASE+\"/simple-api/get-last-address\",{method:\"POST\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:i}).then(function(e){e.json().then(function(e){var t={address:e.address,memo:e.memo||null,error:e.error||null,loading:!1};n&&n(t)},function(e){console.log(\"error: \",e),n&&n({address:e.message,memo:null})})},function(e){console.log(\"error: \",e),n&&n({address:e.message,memo:null})}).catch(function(e){console.log(\"fetch error:\",e)})}var et={};var tt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var at=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={isModalVisible:!1,receive_address:null,url:e.url||b.a.BASE,loading:!1,emptyAddressDeposit:!1},a.addDepositAddress=a.addDepositAddress.bind(a),a._copy=a._copy.bind(a),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),document.addEventListener(\"copy\",a._copy),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),tt(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_copy\",value:function(e){try{this.state.clipboardText?e.clipboardData.setData(\"text/plain\",this.state.clipboardText):e.clipboardData.setData(\"text/plain\",j.a.translate(\"gateway.use_copy_button\").toUpperCase()),e.preventDefault()}catch(e){console.error(e)}}},{key:\"_getDepositObject\",value:function(){return{inputCoinType:this.props.deposit_coin_type,outputCoinType:this.props.receive_coin_type,outputAddress:this.props.account.get(\"name\"),url:this.state.url,stateCallback:this.addDepositAddress}}},{key:\"componentWillMount\",value:function(){$e({coin:this.props.receive_coin_type,account:this.props.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"componentWillUnmount\",value:function(){document.removeEventListener(\"copy\",this._copy)}},{key:\"componentWillReceiveProps\",value:function(e){e.account!==this.props.account&&$e({coin:e.receive_coin_type,account:e.account.get(\"name\"),stateCallback:this.addDepositAddress})}},{key:\"addDepositAddress\",value:function(e){e.error&&(\"no_address\"===e.error.message?this.setState({emptyAddressDeposit:!0}):this.setState({emptyAddressDeposit:!1})),this.setState({receive_address:e}),this.setState({loading:!1}),this.setState({receive_address:e})}},{key:\"requestDepositAddressLoad\",value:function(){this.setState({loading:!0,emptyAddressDeposit:!1}),function(e){var t=e.inputCoinType,a=e.outputCoinType,n=e.outputAddress,s=e.url,i=void 0===s?b.a.BASE:s,o=e.stateCallback,r=e.selectedGateway,l=(Ze.a[r],{inputCoinType:t,outputCoinType:a,outputAddress:n}),c=JSON.stringify(l);et[c]||(et[c]=!0,fetch(i+\"/simple-api/initiate-trade\",{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:c}).then(function(e){e.json().then(function(e){delete et[c];var t={address:e.inputAddress||\"unknown\",memo:e.inputMemo,error:e.error||null};o&&o(t)},function(e){console.log(\"error: \",e),delete et[c],o&&o(null)})},function(e){console.log(\"error: \",e),delete et[c],o&&o(null)}).catch(function(e){console.log(\"fetch error:\",e),delete et[c]}))}(this._getDepositObject())}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"toClipboard\",value:function(e){try{this.setState({clipboardText:e},function(){document.execCommand(\"copy\")})}catch(e){console.error(e)}}},{key:\"render\",value:function(){var e=\"deposit\"===this.props.action,t=s.a.createElement(E.a,null);if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return t;var a=this.props.account.get(\"balances\"),n=this.props.gateFee;this.props.receive_asset.get(\"symbol\");if(this.props.deprecated_in_favor_of){var i=!1,o=a.get(this.props.receive_asset.get(\"id\"));if(o){var r=m.ChainStore.getObject(o);if(r)0!=r.get(\"balance\")&&(i=!0)}if(!i)return t}var l=this.state.receive_address,c=this.state.emptyAddressDeposit,p=this.state.loading;if(!l)return s.a.createElement(\"div\",{style:{margin:\"3rem\"}},s.a.createElement(E.a,{type:\"three-bounce\"}));var d=this.getWithdrawModalId(),h=null,_=null,f=\"\",v=void 0;if(this.props.deposit_account){h=s.a.createElement(\"span\",null,this.props.deposit_account),f=this.props.receive_coin_type+\":\"+this.props.account.get(\"name\"),_=s.a.createElement(\"span\",null,f);var b=this.props.deposit_coin_type+\":\"}else{l.memo?(v=l.memo,f=l.address,h=s.a.createElement(\"span\",null,l.address),_=s.a.createElement(\"span\",null,l.memo)):(f=l.address,h=s.a.createElement(\"span\",null,l.address));b=\"\"}return!this.props.isAvailable||e&&!this.props.deposit_account&&!l||l&&\"unknown\"===l.address?s.a.createElement(\"div\",null,s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.unavailable\",component:\"h4\"})):e?s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"fz_12 left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_notice_delay\"})),s.a.createElement(\"div\",null,c?s.a.createElement(u.a,{content:\"gateway.please_generate_address\"}):h,s.a.createElement(\"div\",null,_&&s.a.createElement(\"span\",null,\"memo: \",_)),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},h?s.a.createElement(\"div\",{className:\"button\",onClick:this.toClipboard.bind(this,f)},s.a.createElement(u.a,{content:\"gateway.copy_address\"})):null,v?s.a.createElement(\"div\",{className:\"button\",onClick:this.toClipboard.bind(this,v)},s.a.createElement(u.a,{content:\"gateway.copy_memo\"})):null,s.a.createElement(\"button\",{className:\"button spinner-button-circle\",onClick:this.requestDepositAddressLoad.bind(this)},p?s.a.createElement(E.a,{type:\"circle\"}):null,s.a.createElement(u.a,{content:\"gateway.generate_new\"}))),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_amount\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset}),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_asset\",minDeposit:2*this.props.gateFee,coin:this.props.deposit_asset})))):s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible,id:d,overlay:!0},s.a.createElement(Ye.a,{hideModal:this.hideModal,showModal:this.showModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),url:this.state.url,output_coin_name:this.props.deposit_asset_name,gateFee:n,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,memo_prefix:b,modal_id:d,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})))}}]),t}();at.propTypes={url:A.a.string,gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired},at.defaultProps={autosubscribe:!1};var nt=Object(d.a)(at),st=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var it=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),n=e.viewSettings.get(e.provider+\"Action\",\"deposit\");return a.state={activeCoin:a._getActiveCoin(e,{action:n}),action:n},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),st(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_\"+e.provider+\"_\"+t.action,null),n=null;return\"deposit\"==t.action&&(n=\"BTC\"),\"withdraw\"==t.action&&(n=\"SPARKDEX.BTC\"),a||n}},{key:\"componentWillReceiveProps\",value:function(e){e.provider!==this.props.provider&&this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_\"+this.props.provider+\"_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},this.props.provider+\"Action\",e))}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.coins,n=t.account,i=t.provider,o=this.state,r=o.activeCoin,l=o.action;if(!a.length)return s.a.createElement(E.a,null);var c=a.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===l?e.depositAllowed:e.withdrawalAllowed)}),p=c.map(function(e){var t=\"deposit\"===l?e.backingCoinType.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),d=c.filter(function(e){return\"deposit\"===l?e.backingCoinType.toUpperCase()===r:e.symbol===r})[0];d||(d=c[0]);var m={bitspark:{name:d.intermediateAccount,id:\"1.2.1070206\",support:\"info@bitspark.io\"}}[i],h=\"deposit\"===this.state.action;return s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+l}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:r},p))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),d?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(nt,{key:i+\".\"+d.symbol,gateway:i,issuer_account:m.name,account:n,deposit_asset:d.backingCoinType.toUpperCase(),deposit_asset_name:d.name,deposit_coin_type:d.backingCoinType.toLowerCase(),deposit_account:d.depositAccount,deposit_wallet_type:d.walletType,gateFee:d.gateFee,receive_asset:d.symbol,receive_coin_type:d.symbol.toLowerCase(),supports_output_memos:d.supportsMemos,isAvailable:d.isAvailable,action:this.state.action}),s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.bitspark.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"a\",{href:(-1===m.support.indexOf(\"@\")?\"\":\"mailto:\")+m.support,rel:\"noopener noreferrer\"},m.support))),d&&d.symbol?s.a.createElement(q.b,{asset:d.symbol,fromAccount:h?m.id:this.props.account.get(\"id\"),to:h?this.props.account.get(\"id\"):m.id},function(t){var a=t.asset,n=t.to,i=t.fromAccount;return s.a.createElement(q.a,{accountsList:U.a.List([e.props.account.get(\"id\")]),limit:10,compactView:!0,fullHeight:!0,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+e.state.action}),customFilter:{fields:[\"to\",\"from\",\"asset_id\"],values:{to:n.get(\"id\"),from:i.get(\"id\"),asset_id:a.get(\"id\")}}})}):null):null)}}]),t}(),ot=Object(i.a)(it,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),rt=new Ee.a(\"\"),lt={},ct=1e4;function ut(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;return 1==t?function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.DEPOSIT_RECORD_LIST,t)}(e,a):2==t?function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.WITHDRAW_RECORD_LIST,t)}(e,a):new Promise(function(e){return e()})}function pt(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;return-1==a?dt(e,t,ct):0==a?function(e,t){e.requestChannel||(e.requestChannel=0);e.version||(e.version=\"1.0\");e.timestamp||(e.timestamp=(new Date).getTime());e.outerChannel||(e.outerChannel=\"Bitshares\");var a=JSON.stringify(e);if(lt[a])return;lt[a]=!0,new Promise(function(e,n){fetch(t,{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:a}).then(function(t){t.json().then(function(t){delete lt[a],0!==t.code&&(console.log(t),n({code:t.code,message:t.message})),e(t.data)}).catch(function(e){delete lt[a],n({code:-1,message:e.message})})})})}(e,t):dt(e,t,a)}function dt(e,t,a){e.requestChannel||(e.requestChannel=0),e.version||(e.version=\"1.0\"),e.timestamp||(e.timestamp=(new Date).getTime()),e.outerChannel||(e.outerChannel=\"Bitshares\");var n=JSON.stringify(e);if(!lt[n])return lt[n]=!0,Promise.race([new Promise(function(e,a){fetch(t,{method:\"post\",headers:new Headers({Accept:\"application/json\",\"Content-Type\":\"application/json\"}),body:n}).then(function(t){t.json().then(function(t){delete lt[n],0!==t.code&&(console.log(t),a({code:t.code,message:t.message})),e(t.data)}).catch(function(e){delete lt[n],a({code:-1,message:e.message})})})}),new Promise(function(e,t){setTimeout(function(){t({code:-2,message:\"Request timeout.\"})},a)})])}var mt={has:function(e){return rt.has(\"gdex_history_address_\"+e)},set:function(e){var t=e.wallet,a=e.addresses;rt.set(\"gdex_history_address_\"+t,a)},get:function(e){return rt.get(\"gdex_history_address_\"+e,[])},setLast:function(e){var t=e.wallet,a=e.address;rt.set(\"gdex_history_address_last_\"+t,a)},getLast:function(e){return rt.get(\"gdex_history_address_last_\"+e,\"\")}},ht=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var _t=new Ee.a(\"__gdex__user_\"),ft=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.current_gdex_address_cache_version_string=\"1\",this.day=86400}return ht(e,[{key:\"getUserInfo\",value:function(e){var t=_t.get(e,null);if(!t)return null;var a=Math.floor((new Date).getTime()/1e3);return Math.abs(t.ctime-a)>this.day?(_t.remove(e),null):t}},{key:\"cacheUserInfo\",value:function(e,t,a){var n=_t.get(e,{});n!={}&&(n={user_id:t,status:a,ctime:Math.floor((new Date).getTime()/1e3)},_t.set(e,n))}},{key:\"delUserInfo\",value:function(e){_t.has(e)&&_t.del(e)}},{key:\"getIndexForDepositKey\",value:function(e,t,a){return[this.current_gdex_address_cache_version_string,e,t,a].reduce(function(e,t){return e.concat(\"[\",t,\"]\")},\"\")}},{key:\"getCachedInputAddress\",value:function(e,t,a){var n=this.getIndexForDepositKey(e,t,a),s=_t.get(\"deposit_keys\",{})[n]||null;if(s){if(s.address){var i=Math.floor((new Date).getTime()/1e3);return Math.abs(s.ctime-i)>this.day?(this.clearInputAddress(e,t,a),null):s}return null}}},{key:\"cacheInputAddress\",value:function(e,t,a,n,s){var i=this.getIndexForDepositKey(e,t,a),o=_t.get(\"deposit_keys\",{});o[i]={address:n,memo:s,ctime:Math.floor((new Date).getTime()/1e3)},_t.set(\"deposit_keys\",o)}},{key:\"clearInputAddress\",value:function(e,t,a){var n=this.getIndexForDepositKey(e,t,a),s=_t.get(\"deposit_keys\",null);s&&s[n]&&(s[n]={address:null,memo:null,ctime:null},_t.set(\"deposit_keys\",s))}}]),e}(),yt=a(567),gt=a.n(yt),wt=a(321),vt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var bt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={isConfirmationModalVisible:!1,withdraw_amount:a.props.amount_to_withdraw,withdraw_address:mt.getLast(e.output_coin_name),withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null,options_is_valid:!1,withdraw_address_selected:mt.getLast(e.output_coin_name),memo:\"\",withdraw_address_first:!0,empty_withdraw_value:!1,below_minumum_withdraw_value:!1,precision_error:!1,memo_error:!1,memo_length_error:!1,from_account:e.account,fee_asset_id:\"1.3.0\",feeStatus:{},withdraw_address_error_code:null,withdraw_address_error_message:null},a._validateAddress(a.state.withdraw_address,e),a._checkBalance=a._checkBalance.bind(a),a._updateFee=Object(wt.a)(a._updateFee.bind(a),250),a.showConfirmationModal=a.showConfirmationModal.bind(a),a.hideConfirmationModal=a.hideConfirmationModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),vt(t,[{key:\"componentWillMount\",value:function(){this._updateFee(),this._checkFeeStatus()}},{key:\"componentWillUnmount\",value:function(){this.unMounted=!0}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;e.output_coin_name!=this.props.output_coin_name&&this.setState({withdraw_address:mt.getLast(e.output_coin_name),withdraw_address_selected:mt.getLast(e.output_coin_name)}),e.account!==this.state.from_account&&e.account!==this.props.account&&this.setState({from_account:e.account,feeStatus:{},fee_asset_id:\"1.3.0\",feeAmount:new Oe.a({amount:0})},function(){t._updateFee(),t._checkFeeStatus()})}},{key:\"showConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!0})}},{key:\"hideConfirmationModal\",value:function(){this.setState({isConfirmationModalVisible:!1})}},{key:\"_assembleMemo\",value:function(){var e=this,t=this.props.memo_rule,a=\"\";try{if(t)return t.split(\";\").forEach(function(t){switch(t[0]){case\"C\":a+=t.slice(2);break;case\"D\":a+=e.state.withdraw_address;break;case\"B\":a+=t.slice(2);break;case\"S\":a+=e.state.memo}}),a.length>100?(this.setState({memo_length_error:!0}),null):(this.setState({memo_length_error:!1}),this.setState({memo_error:!1}),a)}catch(e){console.log(e)}return this.setState({memo_error:!0}),null}},{key:\"_updateFee\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.fee_asset_id,n=t.from_account,s=this._getAvailableAssets(t).fee_asset_types;if(1===s.length&&s[0]!==a&&(a=s[0]),!n)return null;Object(Ae.b)({accountID:n.get(\"id\"),feeID:a,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:this._assembleMemo()}}).then(function(t){var a=t.fee,n=t.hasBalance,s=t.hasPoolBalance;e.unMounted||e.setState({feeAmount:a,hasBalance:n,hasPoolBalance:s,error:!n||!s},e._checkBalance)})}},{key:\"_checkFeeStatus\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,a=t.from_account;if(a){var n=this._getAvailableAssets(t).fee_asset_types,s={},i=[];n.forEach(function(n){i.push(Object(Ae.b)({accountID:a.get(\"id\"),feeID:n,options:[\"price_per_kbyte\"],data:{type:\"memo\",content:e.props.output_coin_name+\":\"+t.withdraw_address+(t.memo?\":\"+t.memo:\"\")}}))}),Promise.all(i).then(function(a){n.forEach(function(e,t){s[e]=a[t]}),l.a.are_equal_shallow(t.feeStatus,s)||e.setState({feeStatus:s}),e._checkBalance()}).catch(function(e){console.error(e)})}}},{key:\"onMemoChanged\",value:function(e){this.setState({memo:e.target.value},this._updateFee)}},{key:\"onWithdrawAmountChange\",value:function(e){var t=e.amount;this.setState({withdraw_amount:t,empty_withdraw_value:void 0!==t&&!parseFloat(t)},this._checkBalance)}},{key:\"onSelectChanged\",value:function(e){var t=mt.get(this.props.output_coin_symbol)[e];mt.setLast({wallet:this.props.output_coin_symbol,address:t}),this.setState({withdraw_address_selected:t,options_is_valid:!1,withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"onWithdrawAddressChanged\",value:function(e){var t=e.target.value.trim();this.setState({withdraw_address:t,withdraw_address_check_in_progress:!0,withdraw_address_selected:t,withdraw_address_is_valid:null},this._updateFee),this._validateAddress(t)}},{key:\"_validateAddress\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.props;(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return e.address?pt(e,b.f.BASE+b.f.CHECK_WITHDRAY_ADDRESS,t):new Promise(function(e){return e()})})({assetId:a.output_coin_id,assetName:a.output_coin_name,address:e}).then(function(e){t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:e.valid,withdraw_address_error_code:null,withdraw_address_error_message:null})}).catch(function(e){var a=e.message;e.code<0&&(a=\"System error: please try again later\"),t.setState({withdraw_address_check_in_progress:!1,withdraw_address_is_valid:null,withdraw_address_error_code:e.code,withdraw_address_error_message:a})})}},{key:\"_checkPrecision\",value:function(){var e=this.state.withdraw_amount,t=this.props.output_coin_precision;\"undefined\"!==t&&(\"string\"!=typeof e&&(e=e.toString()),-1!==(e=e.trim()).indexOf(\".\")&&e.length-e.indexOf(\".\")-1>t?this.setState({precision_error:!0}):this.setState({precision_error:!1}))}},{key:\"_checkBalance\",value:function(){var e=this.state,t=e.feeAmount,a=e.withdraw_amount,n=this.props,s=n.asset,i=n.balance,o=n.minWithdrawAmount;if(i){if(t){var r=Object(Ae.a)(a,s,t,i);if(null!==r){if(this.setState({balanceError:!r}),\"string\"==typeof a&&(a=parseFloat(String.prototype.replace.call(a,/,/g,\"\"))),\"string\"==typeof o&&(o=parseFloat(String.prototype.replace.call(o,/,/g,\"\"))),!(a<o))return this.setState({below_minumum_withdraw_value:!1}),this._checkPrecision(),r;this.setState({below_minumum_withdraw_value:!0})}}}else this.setState({balanceError:!0})}},{key:\"onSubmit\",value:function(){if(!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&null!==this.state.withdraw_amount)if(this.state.withdraw_address_is_valid)if(parseFloat(this.state.withdraw_amount)>0){if(mt.has(this.props.output_coin_symbol)){var e=mt.get(this.props.output_coin_symbol);-1==e.indexOf(this.state.withdraw_address)&&(e.push(this.state.withdraw_address),mt.set({wallet:this.props.output_coin_symbol,addresses:e}))}else{var t=[];t.push(this.state.withdraw_address),mt.set({wallet:this.props.output_coin_symbol,addresses:t})}mt.setLast({wallet:this.props.output_coin_symbol,address:this.state.withdraw_address});var a=this.props.asset,n=this.state.feeAmount,s=parseFloat(String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\")),i=new Oe.a({asset_id:a.get(\"id\"),precision:a.get(\"precision\"),real:s});re.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),i.getAmount(),a.get(\"id\"),this._assembleMemo(),null,n?n.asset_id:\"1.3.0\"),this.setState({empty_withdraw_value:!1})}else this.setState({empty_withdraw_value:!0});else this.showConfirmationModal()}},{key:\"onSubmitConfirmation\",value:function(){if(this.hideConfirmationModal(),mt.has(this.props.output_coin_symbol)){var e=mt.get(this.props.output_coin_symbol);-1==e.indexOf(this.state.withdraw_address)&&(e.push(this.state.withdraw_address),mt.set({wallet:this.props.output_coin_symbol,addresses:e}))}else{var t=[];t.push(this.state.withdraw_address),mt.set({wallet:this.props.output_coin_symbol,addresses:t})}mt.setLast({wallet:this.props.output_coin_symbol,address:this.state.withdraw_address});var a=this.props.asset,n=l.a.get_asset_precision(a.get(\"precision\")),s=String.prototype.replace.call(this.state.withdraw_amount,/,/g,\"\"),i=this.state.feeAmount;re.a.transfer(this.props.account.get(\"id\"),this.props.issuer.get(\"id\"),parseInt(s*n,10),a.get(\"id\"),this._assembleMemo(),null,i?i.asset_id:\"1.3.0\")}},{key:\"onDropDownList\",value:function(){mt.has(this.props.output_coin_symbol)&&(!1===this.state.options_is_valid&&(this.setState({options_is_valid:!0}),this.setState({withdraw_address_first:!1})),!0===this.state.options_is_valid&&this.setState({options_is_valid:!1}))}},{key:\"getWithdrawModalId\",value:function(){return\"confirmation\"}},{key:\"onAccountBalance\",value:function(){var e=this.state.feeAmount;if(Object.keys(this.props.account.get(\"balances\").toJS()).includes(this.props.asset.get(\"id\"))){var t=new Oe.a({amount:this.props.balance.get(\"balance\"),asset_id:this.props.asset.get(\"id\"),precision:this.props.asset.get(\"precision\")});t.asset_id===e.asset_id&&t.minus(e),this.setState({withdraw_amount:t.getAmount({real:!0}),empty_withdraw_value:!1},this._checkBalance)}}},{key:\"setNestedRef\",value:function(e){this.nestedRef=e}},{key:\"onFeeChanged\",value:function(e){var t=e.asset;this.setState({fee_asset_id:t.get(\"id\")},this._updateFee)}},{key:\"_getAvailableAssets\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state,t=e.from_account,a=e.feeStatus;var n=[];if(!t||!t.get(\"balances\"))return{fee_asset_types:n};var s=e.from_account.get(\"balances\").toJS();for(var i in n=Object.keys(s).sort(l.a.sortID),s){var o=m.ChainStore.getObject(i),r=m.ChainStore.getObject(s[i]);if(r&&0===r.get(\"balance\")&&-1!==n.indexOf(i)&&n.splice(n.indexOf(i),1),o){var c=!1;try{c=new Oe.i({base:new Oe.a(o.getIn([\"options\",\"core_exchange_rate\",\"base\"]).toJS()),quote:new Oe.a(o.getIn([\"options\",\"core_exchange_rate\",\"quote\"]).toJS())}).isValid()}catch(e){c=!1}\"1.3.0\"===o.get(\"id\")||c||n.splice(n.indexOf(i),1)}}return{fee_asset_types:n=n.filter(function(e){return function(e){return void 0===a[e]||a[e]&&a[e].hasPoolBalance}(e)&&function(e){return void 0===a[e]||a[e]&&a[e].hasBalance}(e)})}}},{key:\"render\",value:function(){var e=this.state,t=e.withdraw_address_selected,a=e.memo,n=mt.get(this.props.output_coin_symbol),i=null,o=this.props.account.get(\"balances\").toJS(),r=Object.keys(o),l=(this.getWithdrawModalId(),null),c=null,p=null;this.state.options_is_valid&&(c=s.a.createElement(\"div\",{className:n.length?\"blocktrades-options\":\"blocktrades-disabled-options\"},n.map(function(e,t){return s.a.createElement(\"a\",{key:t,onClick:this.onSelectChanged.bind(this,t)},e)},this))),!this.state.withdraw_address_check_in_progress&&this.state.withdraw_address&&this.state.withdraw_address.length&&(this.state.withdraw_address_is_valid||(l=this.state.withdraw_address_error_code?s.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},this.state.withdraw_address_error_code,\":\",\" \",this.state.withdraw_address_error_message):s.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"gateway.valid_address\",coin_type:this.props.output_coin_name})),p=s.a.createElement(M.Modal,{closable:!1,footer:[s.a.createElement(M.Button,{key:\"submit\",type:\"primary\",onClick:this.onSubmitConfirmation.bind(this)},j.a.translate(\"modal.confirmation.accept\")),s.a.createElement(M.Button,{key:\"cancel\",style:{marginLeft:\"8px\"},onClick:this.hideConfirmationModal},j.a.translate(\"modal.confirmation.cancel\"))],visible:this.state.isConfirmationModalVisible,onCancel:this.hideConfirmationModal},s.a.createElement(\"label\",null,s.a.createElement(u.a,{content:\"modal.confirmation.title\"})))));var d=1,m=null;this.props.output_supports_memos&&(m=s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"label\",null,s.a.createElement(u.a,{component:\"span\",content:\"transfer.memo\"})),s.a.createElement(\"textarea\",{rows:\"3\",value:a,tabIndex:d++,onChange:this.onMemoChanged.bind(this)}),this.state.memo_error?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.memo_error\"})):null,this.state.memo_length_error?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.memo_length_error\"})):null));var h=this._getAvailableAssets().fee_asset_types;if(r.length>0){var _=this.props.asset.get(\"id\");if(_){var f=o[_];i=s.a.createElement(\"span\",{style:{borderBottom:\"#A09F9F 1px dotted\",cursor:\"pointer\"}},s.a.createElement(u.a,{component:\"span\",content:\"transfer.available\"}),\" : \",s.a.createElement(\"span\",{className:\"set-cursor\",onClick:this.onAccountBalance.bind(this)},f?s.a.createElement(ae.a,{balance:o[_]}):0))}else i=\"No funds\"}else i=\"No funds\";var y=this.state.below_minumum_withdraw_value||this.state.memo_error||this.state.memo_length_error||this.state.error||this.state.balanceError||this.state.precision_error;return s.a.createElement(\"form\",{className:\"grid-block vertical full-width-content\",style:{paddingTop:\"0\"}},s.a.createElement(\"div\",{className:\"grid-container\"},s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(ne.a,{label:\"modal.withdraw.amount\",amount:this.state.withdraw_amount,asset:this.props.asset.get(\"id\"),assets:[this.props.asset.get(\"id\")],placeholder:\"0.0\",onChange:this.onWithdrawAmountChange.bind(this),display_balance:i}),this.state.empty_withdraw_value?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.valid\"})):null,this.state.balanceError?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.insufficient\"})):null,this.state.below_minumum_withdraw_value?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.minimum_amount\",amount:this.props.minWithdrawAmount,symbol:this.props.asset.get(\"symbol\")})):null,this.state.precision_error?s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.precision\",precision:this.props.output_coin_precision})):null),this.state.feeAmount?s.a.createElement(\"div\",{className:\"content-block gate_fee\"},s.a.createElement(ne.a,{refCallback:this.setNestedRef.bind(this),label:\"transfer.fee\",disabled:!0,amount:this.state.feeAmount.getAmount({real:!0}),onChange:this.onFeeChanged.bind(this),asset:this.state.feeAmount.asset_id,assets:h,tabIndex:d++}),this.state.hasBalance?null:s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.noFeeBalance\"})),this.state.hasPoolBalance?null:s.a.createElement(\"p\",{className:\"has-error no-margin\",style:{paddingTop:10}},s.a.createElement(u.a,{content:\"transfer.errors.noPoolBalance\"}))):null,this.props.gateFee?s.a.createElement(\"div\",{className:\"amount-selector right-selector\",style:{paddingBottom:20}},s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.fee\"})),s.a.createElement(\"div\",{className:\"inline-label input-wrapper\"},s.a.createElement(\"input\",{type:\"text\",disabled:!0,value:this.props.gateFee}),s.a.createElement(\"div\",{className:\"form-label select floating-dropdown\"},s.a.createElement(\"div\",{className:\"dropdown-wrapper inactive\"},s.a.createElement(\"div\",null,this.props.output_coin_symbol))))):null,s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{component:\"span\",content:\"modal.withdraw.address\"})),s.a.createElement(\"div\",{className:\"blocktrades-select-dropdown\"},s.a.createElement(\"div\",{className:\"inline-label\"},s.a.createElement(\"input\",{type:\"text\",value:t,tabIndex:\"4\",onChange:this.onWithdrawAddressChanged.bind(this),autoComplete:\"off\"}),s.a.createElement(\"span\",{onClick:this.onDropDownList.bind(this)},\"▼\"))),s.a.createElement(\"div\",{className:\"blocktrades-position-options\"},c),l),m,s.a.createElement(\"div\",null,s.a.createElement(M.Button,{type:\"primary\",disabled:y,onClick:this.onSubmit.bind(this)},j.a.translate(\"modal.withdraw.submit\")),s.a.createElement(M.Button,{onClick:this.props.hideModal,style:{marginLeft:\"8px\"}},j.a.translate(\"account.perm.cancel\"))),p))}}]),t}();bt.propTypes={account:p.a.ChainAccount.isRequired,issuer:p.a.ChainAccount.isRequired,asset:p.a.ChainAsset.isRequired,memo_rule:A.a.string.isRequired,balance:p.a.ChainObject,output_supports_memos:A.a.bool.isRequired};var Et=Object(d.a)(bt),kt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();function Ct(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function St(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function At(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var Ot=function(e){function t(){Ct(this,t);var e=St(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={isQrModalVisible:!1,isModalVisible:!1,receive_address:null,isAvailable:!0,qrcode:\"\"},e.deposit_address_cache=new ft,e._copy=e._copy.bind(e),document.addEventListener(\"copy\",e._copy),e.showQrModal=e.showQrModal.bind(e),e.hideQrModal=e.hideQrModal.bind(e),e.showModal=e.showModal.bind(e),e.hideModal=e.hideModal.bind(e),e}return At(t,s.a.Component),kt(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"showQrModal\",value:function(){this.setState({isQrModalVisible:!0})}},{key:\"hideQrModal\",value:function(){this.setState({isQrModalVisible:!1})}},{key:\"getDepositAddress\",value:function(){this._getDepositAddress(this.props.user_id,this.props.account.get(\"name\"),this.props.coin,this.props.action)}},{key:\"_getDepositAddress\",value:function(e,t,a,n){if(\"deposit\"==n){var s=this.deposit_address_cache.getCachedInputAddress(t,a.outerSymbol,a.innerSymbol);if(s&&s!=this.state.receive_address)this.setState({receive_address:s});else{var i=this;(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.GET_DEPOSIT_ADDRESS,t)})({btsAssetId:a.innerAssetId,outAssetId:a.outerAssetId,uid:e,userAccount:t}).then(function(e){if(e.address&&e.address.address){var n={address:e.address.address,memo:e.address.memo};i.deposit_address_cache.cacheInputAddress(t,a.outerSymbol,a.innerSymbol,n.address,n.memo),i.setState({receive_address:n})}else i.setState({receive_address:null})}).catch(function(e){i.setState({receive_address:null}),console.log(e)})}}}},{key:\"componentWillMount\",value:function(){this.getDepositAddress()}},{key:\"componentWillReceiveProps\",value:function(e){e.user_id===this.props.user_id&&e.action===this.props.action&&e.coin==this.props.coin||this._getDepositAddress(e.user_id,e.account.get(\"name\"),e.coin,e.action)}},{key:\"componentWillUnmount\",value:function(){document.removeEventListener(\"copy\",this._copy)}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.coin.innerSymbol}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"onShowQrcode\",value:function(e){var t=this;this.setState({qrcode:e},function(){t.showQrModal()})}},{key:\"_copy\",value:function(e){try{this.state.clipboardText?e.clipboardData.setData(\"text/plain\",this.state.clipboardText):e.clipboardData.setData(\"text/plain\",j.a.translate(\"gateway.use_copy_button\").toUpperCase()),e.preventDefault()}catch(e){console.error(e)}}},{key:\"toClipboard\",value:function(e){try{this.setState({clipboardText:e},function(){document.execCommand(\"copy\")})}catch(e){console.error(e)}}},{key:\"render\",value:function(){var e=s.a.createElement(\"div\",{style:{display:\"none\",minHeight:150}});if(!this.props.account||!this.props.issuer_account||!this.props.coin)return e;var t=this.props,a=t.coin,n=t.btsCoin;if(!n)return e;var i=this.state.receive_address,o=this.state.qrcode,r=this.getWithdrawModalId(),l=null,c=\"\",p=\"\",d=a.outerSymbol+\":\";\"deposit\"===this.props.action&&(i&&(l=s.a.createElement(\"span\",null,i.address),c=i.address,i.memo&&(s.a.createElement(\"span\",null,i.memo),p=i.memo)),d=\"\");var m=null,h=this.props.account.get(\"balances\");return h&&(m=h.toJS()[n.get(\"id\")]),\"deposit\"===this.props.action?s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},a.outerSymbol)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:a.innerSymbol,replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:a.innerSymbol,replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:a.outerSymbol}),\":\"),s.a.createElement(\"p\",{style:{color:\"red\"}},s.a.createElement(u.a,{content:\"gateway.deposit_warning\",asset:a.outerSymbol})),p?s.a.createElement(\"p\",{style:{color:\"red\"}},s.a.createElement(u.a,{content:\"gateway.deposit_warning_memo\",asset:a.outerSymbol})):null,s.a.createElement(\"div\",null,s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.address\"}),\":\"),s.a.createElement(\"td\",null,l),s.a.createElement(\"td\",null,s.a.createElement(\"div\",{style:{width:\"125px\"},className:\"button\",onClick:this.toClipboard.bind(this,c)},s.a.createElement(u.a,{content:\"transfer.copy_address\"}))),s.a.createElement(\"td\",null,s.a.createElement(\"div\",{className:\"button\",onClick:this.onShowQrcode.bind(this,c)},s.a.createElement(u.a,{content:\"modal.qrcode.label\"})))),p?s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.memo\"}),\":\"),s.a.createElement(\"td\",null,p),s.a.createElement(\"td\",null,s.a.createElement(\"div\",{style:{width:\"125px\"},className:\"button\",onClick:this.toClipboard.bind(this,p)},s.a.createElement(u.a,{content:\"transfer.copy_memo\"}))),s.a.createElement(\"td\",null,s.a.createElement(\"div\",{className:\"button\",onClick:this.onShowQrcode.bind(this,p)},s.a.createElement(u.a,{content:\"modal.qrcode.label\"})))):null)),s.a.createElement(M.Modal,{footer:[s.a.createElement(M.Button,{key:\"close\",type:\"primary\",onClick:this.hideQrModal},j.a.translate(\"modal.close\"))],visible:this.state.isQrModalVisible,onCancel:this.hideQrModal},s.a.createElement(Nt,{text:o}))))):s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:a.innerSymbol,replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},a.outerSymbol)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:a.innerSymbol,replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:a.outerAssetName,symbol:a.outerSymbol}),footer:null,visible:this.state.isModalVisible},s.a.createElement(Et,{hideModal:this.hideModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:a.innerSymbol,output_coin_name:a.outerAssetName,gateFee:a.gateFee,output_coin_id:a.outerAssetId,output_coin_symbol:a.outerSymbol,output_supports_memos:1==a.needMemo,minWithdrawAmount:a.minTransactionAmount,output_coin_precision:a.relationPrecision,memo_prefix:d,memo_rule:this.props.memo_rule,modal_id:r,balance:m})))}}]),t}();Ot.propTypes={account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,gateway:A.a.string,btsCoin:p.a.ChainAsset,memo_rule:A.a.string},Ot.defaultProps={autosubscribe:!1};var Nt=function(e){function t(e){return Ct(this,t),St(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return At(t,s.a.Component),kt(t,[{key:\"render\",value:function(){var e=this.props.text;return s.a.createElement(\"div\",{className:\"small-12\",style:{textAlign:\"center\"}},s.a.createElement(gt.a,{size:200,value:e}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"label\",{style:{textTransform:\"none\"}},e))}}]),t}(),xt=Object(d.a)(Ot),Tt=a(22),jt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Mt={1:\"confirming\",2:\"waiting\",3:\"transfering\",4:\"success\",5:\"fail\"},It={1:\"confirming\",2:\"auditing\",3:\"audited\",4:\"refused\",5:\"transfering\",6:\"success\",7:\"fail\"},Bt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={headerHeight:85,pageNum:0,totalNum:0,nextPageEnabled:!1,allData:{},historyStatusType:1==e.recordType?\"deposit_history_status\":\"withdraw_history_status\",historyStatusValue:1==e.recordType?Mt:It},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),jt(t,[{key:\"componentWillMount\",value:function(){this.getTransactionHistory()}},{key:\"componentWillReceiveProps\",value:function(e){this.props.recordType==e.recordType&&this.props.assetId==e.assetId&&this.props.assetName==e.assetName&&this.props.userId==e.userId&&this.props.userAccount==e.userAccount||this._getTransactionHistory(e.userId,e.assetId,e.assetName,e.recordType,e.userAccount,!0)}},{key:\"shouldComponentUpdate\",value:function(e,t){return!l.a.are_equal_shallow(this.props.userId,e.userId)||(this.state.allData!=t.allData||this.state.pageNum!=t.pageNum)}},{key:\"_getTransactionHistory\",value:function(e,t,a,n,s){var i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=this.props.pageSize,r=this.state,l=r.pageNum,c=r.allData,u=r.historyStatusValue,p=r.historyStatusType;1==i?(l=1,c={},p=1==n?\"deposit_history_status\":\"withdraw_history_status\",u=1==n?Mt:It):l+=1;var d=this;ut({uid:e,assetId:t,pageNum:l,pageSize:o,userAccount:s},n).then(function(e){e.records&&(e.records.forEach(function(e){c[e.txid]={txid:e.txid,amount:e.amount,time:e.ctime,unixtime:Date.parse(e.ctime),status:[\"gateway\",p,u[e.status]].join(\".\"),failReason:e.failReason,assetName:a}}),d.setState({totalNum:e.total,nextPageEnabled:e.total>l*o,allData:c,pageNum:l,historyStatusType:p,historyStatusValue:u}))}).catch(function(){d.setState({totalNum:0,nextPageEnabled:!1,allData:{},pageNum:0})})}},{key:\"getTransactionHistory\",value:function(){var e=this.props,t=e.userId,a=e.assetId,n=e.assetName,s=e.recordType,i=e.userAccount;this._getTransactionHistory(t,a,n,s,i,!1)}},{key:\"render\",value:function(){var e=this.props,t=e.assetName,a=e.compactView,n=e.style,i=e.maxHeight,o=this.state,r=o.headerHeight,l=o.allData,c=[];Object.keys(l).forEach(function(e){c.push(l[e])}),c.sort(function(e,t){return t.unixtime-e.unixtime}),(n=n||{}).width=\"100%\",n.height=\"100%\",l.length;var p=c.length?c.map(function(e){return s.a.createElement(\"tr\",{key:e.txid},s.a.createElement(\"td\",{style:{textAlign:\"left\"},className:\"left-td column-hide-tiny\"},s.a.createElement(u.a,{content:e.status})),s.a.createElement(\"td\",{style:{padding:\"8px 5px\",textAlign:\"left\",fontSize:14}},s.a.createElement(u.a,{content:\"gateway.transaction_history_info\",amount:e.amount,assetName:t,txid:e.txid})),s.a.createElement(\"td\",null,e.time))}):[s.a.createElement(\"tr\",{key:\"no_recent\"},s.a.createElement(\"td\",{colSpan:a?\"2\":\"3\"},s.a.createElement(u.a,{content:\"operation.no_recent\"})))];return p.push(s.a.createElement(\"tr\",{className:\"total-value\",key:\"total_value\"},s.a.createElement(\"td\",{className:\"column-hide-tiny\"}),s.a.createElement(\"td\",null),s.a.createElement(\"td\",{style:{textAlign:\"center\"}},\" \",this.state.nextPageEnabled?s.a.createElement(\"a\",{onClick:this.getTransactionHistory.bind(this)},s.a.createElement(Tt.a,{name:\"chevron-down\",title:\"icons.chevron_down.transactions\",className:\"icon-14px\"})):null))),s.a.createElement(\"div\",{className:\"recent-transactions no-overflow\",style:n},s.a.createElement(\"div\",{className:\"generic-bordered-box\"},this.props.dashboard?null:s.a.createElement(\"div\",{ref:\"header\"},s.a.createElement(\"div\",{className:\"block-content-header\"},s.a.createElement(\"span\",null,this.props.title?this.props.title:s.a.createElement(u.a,{content:\"account.recent\"})))),s.a.createElement(\"div\",{className:\"box-content grid-block no-margin\",style:this.props.fullHeight?null:{maxHeight:i-r},ref:\"transactions\"},s.a.createElement(\"table\",{className:\"table\"+(a?\" compact\":\"\")+(this.props.dashboard?\" dashboard-table\":\"\")},s.a.createElement(\"thead\",null,s.a.createElement(\"tr\",{key:\"history_header\"},s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.status\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.info\"})),s.a.createElement(\"th\",null,s.a.createElement(u.a,{content:\"gateway.time\"})))),s.a.createElement(\"tbody\",null,p)))))}}]),t}();Bt.propTypes={compactView:A.a.bool,maxHeight:A.a.number,fullHeight:A.a.bool,userId:A.a.number,assetId:A.a.number,assetName:A.a.string,recordType:A.a.number,userAccount:A.a.string},Bt.defaultProps={maxHeight:500,fullHeight:!1,pageSize:10};var Pt=Bt,Dt=a(2013),Ft=a.n(Dt),Wt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Rt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={locale:e.settings.get(\"locale\",\"en\")},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Wt(t,[{key:\"componentDidMount\",value:function(){if(this.refs.agreement){var e=this.refs.agreement;Ft.a.initialize(e)}}},{key:\"componentDidUpdate\",value:function(){if(this.refs.agreement){var e=this.refs.agreement;Ft.a.update(e)}}},{key:\"_getAgreement\",value:function(e){switch(e){case\"zh\":case\"cn\":return s.a.createElement(\"div\",{className:\"container\",ref:\"agreement\",style:{height:\"500px\",overflow:\"auto\",position:\"relative\"}},s.a.createElement(\"h2\",{style:{textAlign:\"center\"}},\"用户服务协议\"),s.a.createElement(\"p\",null,\"OBSIDIAN TECHNOLOGY CO. PTE. LTD. 是一家根据新加坡共和国法律成立的公司，GDEX是由该公司运营的比特股网关(以下称“GDEX”或“本网关”)，主访问入口为https://www.gdex.io，GDEX是一个在比特股平台为用户提供数字资产充提服务（以下称“该服务”或“服务”）的平台。为了本协议表述之方便，公司和该网关在本协议中合称使用“我们”或其他第一人称称呼。使用该服务的自然人或其他主体均为本网关的用户，本协议为表述之便利，以下使用“您”或其他第二人称。我们和您在本协议中合称为“双方”，我们或您单称为“一方”。\"),s.a.createElement(\"p\",null,\"重要提示：\"),s.a.createElement(\"p\",null,\"我们在此特别提醒您：\"),s.a.createElement(\"p\",null,\" \",\"1. 数字资产本身不由任何金融机构或公司或本网关发行；\"),s.a.createElement(\"p\",null,\" \",\"2. 数字资产市场是全新的、未经确认的，而且可能不会增长；\"),s.a.createElement(\"p\",null,\" \",\"3. 数字资产主要由投机者大量使用，零售和商业市场使用相对较少，数字资产交易存在极高风险，其全天不间断交易，没有涨跌限制，价格容易受庄家、全球政府政策的影响而大幅波动；\"),s.a.createElement(\"p\",null,\" \",\"4. 因各国法律、法规和规范性文件的制定或者修改，数字资产交易随时可能被暂停或被禁止。\"),s.a.createElement(\"p\",null,\"数字资产交易有极高风险，并不适合绝大部分人士。您了解和理解此投资有可能导致部分损失或全部损失，所以您应该以能承受的损失程度来决定投资的金额。您了解和理解数字资产会产生衍生风险，所以如有任何疑问，建议先寻求理财顾问的协助。此外，除了上述提及过的风险以外，还会有未能预测的风险存在。您应慎重考虑并用清晰的判断能力去评估自己的财政状况及上述各项风险而作出任何买卖数字资产的决定，并承担由此产生的全部损失，我们对此不承担任何责任。\"),s.a.createElement(\"p\",null,\"敬告您：\"),s.a.createElement(\"p\",null,\"1.您了解比特股是基于区块链的去中心化交易平台，其基础账号服务和交易撮合服务都由比特股平台提供。亦有其它机构或个人在比特股平台上发行资产及／或提供服务。您了解本网关仅作为您向比特股平台充提数字资产的工具。本网关只对自身发行的交易代币资产（名称以GDEX.为前缀）负责，不对比特股上其它机构或个人发行的资产负责，本网关不参与您的任何交易，您应自行谨慎判断确定相关数字资产及/或信息的真实性、合法性和有效性，并自行承担因此产生的责任与损失。\"),s.a.createElement(\"p\",null,\" \",\"2. 比特股去中心化交易系统存有风险，包括但不限于软件，硬件和互联网链结的失败，用户账户系统的安全风险等。由于我们不能控制互联网以及比特股平台的可靠性和可用性，我们不会对上述风险造成的用户损失承担任何责任。\"),s.a.createElement(\"p\",null,\" \",\"3. 禁止使用本网关从事洗钱、走私、商业贿赂等一切非法交易活动，若发现此类事件，本网关将采取各种可使用之手段，包括但不限于中止提供服务，通知相关权力机关等，我们不承担由此产生的所有责任并保留向相关人士追究责任的权利。\"),s.a.createElement(\"p\",null,\"一、总则\"),s.a.createElement(\"p\",null,\" \",\"1.1 您在使用本网关提供的服务之前，应仔细阅读本协议，如有不理解之处或其他必要，请咨询专业律师。如您不同意本协议及/或随时对其的修改，请您立即停止使用本网关提供的服务。使用本网关的任何服务即表示您已了解并完全同意本协议各项内容，包括本网关对本协议随时所做的任何修改。\"),s.a.createElement(\"p\",null,\" \",\"1.2 使用本网关提供的服务和功能，您将被视为已阅读，理解并：\"),s.a.createElement(\"p\",null,\" 1.2.1 接受本协议所有条款及条件的约束。\"),s.a.createElement(\"p\",null,\" \",\"1.2.2 您确认您已年满21周岁或根据不同的可适用的法律规定的具有可订立合同的法定年龄，并有充分的能力接受这些条款，并订立交易，使用本网关进行数字资产交易。\"),s.a.createElement(\"p\",null,\" \",\"1.2.3 您保证交易中涉及到的属于您的数字资产均为合法取得并所有。\"),s.a.createElement(\"p\",null,\" \",\"1.2.4 您同意您为您自身的交易或非交易行为承担全部责任和任何收益或亏损。\"),s.a.createElement(\"p\",null,\" \",\"1.2.5 您同意遵守任何有关法律的规定，就税务目的而言，包括报告任何交易利润。\"),s.a.createElement(\"p\",null,\" \",\"1.2.6 本协议只是就您与我们之间达成的权利义务关系进行约束，而并不涉及本网关用户之间或其他网关和您之间因数字资产交易而产生的法律关系及法律纠纷。\"),s.a.createElement(\"p\",null,\"二、协议修订\"),s.a.createElement(\"p\",null,\"我们保留不时修订本协议、并以公示的方式进行公告、不再单独通知您的权利，变更后的协议会在本协议首页标注变更时间，一经在公布，立即自动生效。您应不时浏览及关注本协议的更新变更时间及更新内容，如您不同意相关变更，应当立即停止使用本网关服务；您继续使用本网关服务，即表示您接受并同意经修订的协议的约束。\"),s.a.createElement(\"p\",null,\"三、服务\"),s.a.createElement(\"p\",null,\"本网关只为您提供向比特股平台冲入和提取数字资产的服务，本网关并不作为买家或卖家参与买卖数字资产行为本身；本网关不提供任何国家法定货币充入和提取的相关服务。\"),s.a.createElement(\"p\",null,\" 3.1 服务内容\"),s.a.createElement(\"p\",null,\" \",\"3.1.1 您有权通过本网关向比特股平台冲入或提取数字资产。\"),s.a.createElement(\"p\",null,\" 3.1.2 本网关承诺为您提供的其他服务。\"),s.a.createElement(\"p\",null,\" 3.2.服务规则\"),s.a.createElement(\"p\",null,\" 您承诺遵守下列本网关服务规则：\"),s.a.createElement(\"p\",null,\" \",\"3.2.1 您应当遵守法律法规、规章、及政策要求的规定，保证账户中所有数字资产来源的合法性，不得在本网关或利用本网关服务从事非法或其他损害本网关或第三方权益的活动，如发送或接收任何违法、违规、侵犯他人权益的信息，发送或接收传销材料或存在其他危害的信息或言论，未经本网关授权使用或伪造本网关电子邮件题头信息等。\"),s.a.createElement(\"p\",null,\" \",\"3.2.2 您在使用本网关服务之前应充分了解比特股账号的使用常识，做好相应账号的备份及密码保存工作，对于比特股账户安全问题造成的损失，本网关不承担任何责任。\"),s.a.createElement(\"p\",null,\" \",\"3.2.3 您在使用本网关提供的服务过程中，所产生的应纳税赋，以及一切硬件、软件、服务及其它方面的费用，均由您独自承担。\"),s.a.createElement(\"p\",null,\" \",\"3.2.4 您应当遵守本网关不时发布和更新的本协议以及其他服务条款和操作规则，有权随时终止使用本网关提供的服务。\"),s.a.createElement(\"p\",null,\"四、本网关的权利和义务\"),s.a.createElement(\"p\",null,\"4.1 本网关有权在发现本网关上显示的任何信息存在明显错误时，对信息予以更正。\"),s.a.createElement(\"p\",null,\"4.2 本网关保留随时修改、中止或终止本网关服务的权利，本网关行使修改或中止服务的权利不需事先告知您；本网关终止本网关一项或多项服务的，终止自本网关在网关上发布终止公告之日生效。\"),s.a.createElement(\"p\",null,\" \",\"4.3 本网关应当采取必要的技术手段和管理措施保障本网关的正常运行。\"),s.a.createElement(\"p\",null,\"五、赔偿\"),s.a.createElement(\"p\",null,\" \",\"5.1 在任何情况下，我们对您的直接损害的赔偿责任均不会超过您从使用本网关服务产生的为期三（ 3）个月的总费用。\"),s.a.createElement(\"p\",null,\"六、寻求禁令救济的权利\"),s.a.createElement(\"p\",null,\"我们和您均承认普通法对违约或可能违约情况的救济措施是可能是不足以弥补我们遭受的全部损失的，故非违约方有权在违约或可能违约情况下寻求禁令救济以及普通法或衡平法允许的其他所有的补救措施。\"),s.a.createElement(\"p\",null,\"七、责任限制与免责\"),s.a.createElement(\"p\",null,\" \",\"7.1 您了解并同意，在任何情况下，我们不就以下各事项承担责任：\"),s.a.createElement(\"p\",null,\" 7.1.1 收入的损失；\"),s.a.createElement(\"p\",null,\" 7.1.2 交易利润或合同损失；\"),s.a.createElement(\"p\",null,\" 7.1.3 业务中断\"),s.a.createElement(\"p\",null,\" 7.1.4 预期可节省的货币的损失；\"),s.a.createElement(\"p\",null,\" 7.1.5 信息的损失；\"),s.a.createElement(\"p\",null,\" 7.1.6 机会、商誉或声誉的损失；\"),s.a.createElement(\"p\",null,\" 7.1.7 数据的损坏或损失；\"),s.a.createElement(\"p\",null,\" 7.1.8 购买替代产品或服务的成本；\"),s.a.createElement(\"p\",null,\" \",\"7.1.9 任何由于侵权（包括过失）、违约或其他任何原因产生的间接的、特殊的或附带性的损失或损害，不论这种损失或损害是否可以为我们合理预见；不论我们是否事先被告知存在此种损 失或损害的可能性。\"),s.a.createElement(\"p\",null,\" \",\"7.2 您了解并同意，我们不对因下述任一情况而导致您的任何损害赔偿承担责任：\"),s.a.createElement(\"p\",null,\" \",\"7.2.1 我们有合理的理由认为您的具体交易事项可能存在重大违法或违约情形。\"),s.a.createElement(\"p\",null,\" \",\"7.2.2 我们有合理的理由认为您在本网关的行为涉嫌违法或不当。\"),s.a.createElement(\"p\",null,\" \",\"7.2.3 通过本网关服务购买或获取任何数据、信息或进行交易等行为或替代行为产生的费用及损失。\"),s.a.createElement(\"p\",null,\" 7.2.4 您对本网关服务的误解。\"),s.a.createElement(\"p\",null,\" \",\"7.2.5 任何非因我们的原因而引起的与本网关提供的服务有关的其它损失。\"),s.a.createElement(\"p\",null,\" \",\"7.3 我们对由于信息网络设备维护、信息网络连接故障、电脑、通讯或其他系统的故障、电力故障、天气原因、意外事故、罢工、劳动争议、暴乱、起义、骚乱、生产力或生产资料不足、火灾、洪水、风暴、爆炸、战争、银行或其他合作方原因、数字资产市场崩溃、政府行为、 司法或行政机关的命令、其他不在我们可控范围内或我们无能力控制的行为或第三方的原因而造成的不能服务或延迟服务，以及造成的您的损失，我们不承担任何责任。\"),s.a.createElement(\"p\",null,\" \",\"7.4 我们不能保证本网关包含的全部信息、程序、文本等完全安全，不受任何病毒、木马等恶意程序的干扰和破坏，故您登陆、使用本网关任何服务或下载及使用该下载的任何程序、信息、数据等均是您个人的决定并自行承担风险及可能产生的损失。\"),s.a.createElement(\"p\",null,\" \",\"7.5 我们对本网关中链接的任何第三方网关的任何信息、产品及业务及其他任何形式的不属于我们的主体的内容等不做任何保证和承诺，您如果使用第三方网关提供的任何服务、信息及产品等均为您个人决定且承担由此产生的一切责任。\"),s.a.createElement(\"p\",null,\" \",\"7.6 我们对于您使用本网关服务不做任何明示或暗示的保证，包括但不限于本网关提供服务的适用性、没有错误或疏漏、持续性、准确性、可靠性、适用于某一特定用途。同时，我们也不对本网关提供的服务所涉及的技术及信息的有效性、准确性、正确性、可靠性、质量、稳定、完整和及时性作出任何承诺和保证。是否登陆或使用本网关提供的服务是您个人的决定且自行承担风险及可能产生的损失。我们对于数字资产的市场、价值及价格等不做任何明示或暗示的保证，您理解并了解数字资产市场是不稳定的，价格和价值随时会大幅波动或崩盘，交易数字资产是您个人的自由选择及决定且自行承担风险及可能产生的损失。\"),s.a.createElement(\"p\",null,\" \",\"7.7 本协议中规定的我们的保证和承诺是由我们就本协议和本网关提供的服务的唯一保证和陈述，并取代任何其他途径和方式产生的保证和承诺，无论是书面的或口头的，明示的或暗示的。所有这些保证和陈述仅仅代表我们自身的承诺和保证，并不保证任何第三方遵守本协议中的保证和承诺。\"),s.a.createElement(\"p\",null,\" \",\"7.8 我们并不放弃本协议中未提及的在法律适用的最大范围内我们享有的限制、免除或抵销我们损害赔偿责任的任何权利。\"),s.a.createElement(\"p\",null,\" \",\"7.9 使用本网关服务即表示认可我们按照本协议中规定的规则进行的任何操作，产生的任何风险均由您承担。\"),s.a.createElement(\"p\",null,\"八、知识产权\"),s.a.createElement(\"p\",null,\" \",\"8.1 本网关所包含的全部智力成果包括但不限于网关标志、数据库、网关设计、文字和图表、软件、照片、录像、音乐、声音及其前述组合，软件编译、相关源代码和软件 (包括小应用程序和脚本) 的知识产权权利均归本网关所有。您不得为商业目的复制、更改、拷贝、发送或使用前述任何材料或内容。\"),s.a.createElement(\"p\",null,\" \",\"8.2 本网关名称中包含的所有权利 (包括但不限于商誉和商标、标志) 均归公司所有。\"),s.a.createElement(\"p\",null,\" \",\"8.3 您接受本协议即视为您主动将其在本网关发表的任何形式的信息的著作权， 包括但不限于：复制权、发行权、出租权、展览权、表演权、放映权、广播权、信息网络传播权、摄制权、改编权、翻译权、汇编权 以及应当由著作权人享有的其他可转让权利无偿独家转让给本网关所有，本网关有权利就任何主体侵权单独提起诉讼并获得全部赔偿。 本协议效力及于您在本网关发布的任何受著作权法保护的作品内容， 无论该内容形成于本协议签订前还是本协议签订后。\"),s.a.createElement(\"p\",null,\" \",\"8.4 您在使用本网关服务过程中不得非法使用或处分本网关或他人的知识产权权利。您不得将已发表于本网关的信息以任何形式发布或授权其它网关（及媒体）使用。\"),s.a.createElement(\"p\",null,\" \",\"8.5 您使用本网关提供的任何服务均不视为我们向您转让任何知识产权。\"),s.a.createElement(\"p\",null,\"九、可分割性\"),s.a.createElement(\"p\",null,\"如本协议中的任何条款被任何有管辖权的法院认定为不可执行的，无效的或非法的，并不影响本协议的其余条款的效力。\"),s.a.createElement(\"p\",null,\"十、非代理关系\"),s.a.createElement(\"p\",null,\"本协议中的任何规定均不可被认为创造了、暗示了或以其他方式将我们视为您的代理人、受托人或其他代表人，本协议有其他规定的除外。\"),s.a.createElement(\"p\",null,\"十一、弃权\"),s.a.createElement(\"p\",null,\"我们或您任何一方对追究本协议约定的违约责任或其他责任的弃权并不能认定或解释为对其他违约责任的弃权；未行使任何权利或救济不得以任何方式被解释为对该等权利或救济的放弃。\"),s.a.createElement(\"p\",null,\"十二、标题\"),s.a.createElement(\"p\",null,\"所有标题仅供协议表述方便，并不用于扩大或限制该协议条款的内容或范围。\"),s.a.createElement(\"p\",null,\"十三、适用法律\"),s.a.createElement(\"p\",null,\"本协议全部内容均为根据新加坡共和国法律订立的合同，其成立、解释、内容及执行均适用新加坡共和国相关法律规定；任何因或与本协议约定的服务有关而产生的索赔或诉讼，都应依照新加坡共和国的法律进行管辖并加以解释和执行。为避免疑义，这一条款明确适用于任何针对我们的侵权索赔。任何针对我们或者是和我们有关的索赔或诉讼的管辖法院或诉讼地均在新加坡共和国。您无条件地获得在新加坡共和国法院进行诉讼和上诉的排他性的管辖权。您也无条件地同意与本协议款有关的争议或问题或产生的任何索赔请求和诉讼的发生地或法院均排他性得在新加坡共和国。不方便法院的原则不适用于根据本服务条款的选择的法院。\"),s.a.createElement(\"p\",null,\"十四、协议的生效和解释\"),s.a.createElement(\"p\",null,\"14.1 本协议于您点击本网关注册页面的同意注册并完成注册程序、获得本网关账号和密码时生效，对本网关和您均具有约束力。\"),s.a.createElement(\"p\",null,\"14.2 本协议的最终解释权归本网关所有。\"));default:return s.a.createElement(\"div\",{className:\"container\",ref:\"agreement\",style:{height:\"500px\",overflow:\"auto\",position:\"relative\"}},s.a.createElement(\"h2\",{style:{textAlign:\"center\"}},\"Service Agreement\"),s.a.createElement(\"p\",null,\"OBSIDIAN TECHNOLOGY CO. PTE. LTD. (hereinafter referred to as the 'Company') is a company incorporated under the laws in Singapore Republic, GDEX (hereinafter referred to as 'GDEX' or 'the Gateway') is a cryptocurrency gateway to Bitshares which is operated by the company. The main access point for GDEX is https://gdex.io, GDEX is a gateway that provide cryptocurrency deposit and withdraw service (hereinafter referred to as 'the Service') to/from Bitshares. For the convenience of wording in this Agreement, the Company and the Gateway are referred to as 'We' or other applicable forms of first person pronouns in this Agreement. All natural persons or other subjects who use the Service shall be users of the Gateway. For the convenience of wording in this Agreement, the users are referred to as 'You' or any other applicable forms of the second-person pronouns. For the convenience of wording in this Agreement, you and us are collectively referred to as 'both parties', and individually as 'one party'.\"),s.a.createElement(\"p\",null,\"Important reminder:\"),s.a.createElement(\"p\",null,\"We hereby remind you that:\"),s.a.createElement(\"p\",null,\"1. The digital assets themselves are not offered by any financial institution, corporation or the Gateway;\"),s.a.createElement(\"p\",null,\"2. The digital asset market is new and unconfirmed, and will not necessarily expand;\"),s.a.createElement(\"p\",null,\"3. Digital assets are primarily used by speculators, and are used relatively less on retail and commercial markets; digital asset transactions are highly risky, due to the fact that they are traded throughout 24-hour a day without limits on the rise or fall in price, and market makers and global government policies may cause major fluctuations in their prices;\"),s.a.createElement(\"p\",null,\"4. Digital asset transactions may be suspended or prohibited at any time due to the enactment or modification of national laws, regulations and regulatory documents. Digital assets trading is highly risky and therefore not suitable for the vast majority of people. You acknowledge and understand that investment in digital assets may result in partial or total loss of your investment and therefore you are advised to decide the amount of your investment on the basis of your loss-bearing capacity. You acknowledge and understand that digital assets may generate derivative risks. Therefore, if you have any doubt, you are advised to seek assistance from a financial adviser first. Furthermore, aside from the above-mentioned risks, there may also be unpredictable risks. Therefore, you are advised to carefully consider and use clear judgment to assess your financial position and the abovementioned risks before making any decisions on buying and selling digital assets; any and all losses arising therefrom will be borne by you and we shall not be held liable in any manner whatsoever.\"),s.a.createElement(\"p\",null,\"5. You understand that Bitshares is a decentralized exchange based on blockchain, the basic account service and the trade processing service are provided by Bitshares, there are also other institutions or single persons that issue assets and/or provide service on Bitshares. You understand that the Gateway is only used for you to deposit/withdraw cryptocurrency to/from Bitshares. The Gateway only undertake the due obligations for the availability of own issued assets (with 'GDEX.' as prefix of the name), do not undertake the due obligations for the account service and the trade processing service provided by Bitshares, do not undertake the due obligations for availability of the assets issued by other institutions or single persons.\",\" \"),s.a.createElement(\"p\",null,\"6. There are risk in both Internet and Bitshares, include but not limit to failure for software, hardware to connect to Internet, security risk for Bitshares accounting system. As the availability and reliability of Internet and Bitshares are not under our control, we do not undertake obligations for the loss caused by the risks mentioned above.\"),s.a.createElement(\"p\",null,\"7.it is prohibited to use the Gateway for money laundering, smuggling, bribery，if any user are found relevant to these actions, the Gateway will take various actions, include but not limited to terminating the Service to the user, informing relevant authority.\"))}}},{key:\"render\",value:function(){var e=this.props.locale;return this._getAgreement(e)}}]),t}();Rt.propTypes={locale:A.a.string};var qt=Object(i.a)(Rt,{listenTo:function(){return[W.a]},getProps:function(){return{settings:W.a.getState().settings}}}),Lt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Ut=new(a(2200))(\"-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCH+QtHPKcWxdL25xL4pCuu16tKh6yPx/TFnd/8\\ncSt2TC+sPuYsD0h/sy4VKNxhBb7F7U/TLXjMxNcSfPVPjPM3X2LvOlmU9LOEcJGrmlmOOiyO/kws\\nyKKOhR4UyZ1NghhfHjuyDBj6V8fCL+xBZTJWsh/X61Z0wLCwOzXcQCsNJwIDAQAB\\n-----END PUBLIC KEY-----\"),Vt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),n=e.viewSettings.get(e.provider+\"Action\",\"deposit\");return a.state={isAgreementVisible:!1,coins:null,activeCoinInfo:a._getActiveCoinInfo(e,{action:n}),action:n,down:!1,isAvailable:!0,user_info:null,isAgree:!1,agreeChecked:!0,agreeNotice:!1,locale:e.viewSettings.get(\"locale\"),intermediate:null,memo_rule:null},a.user_info_cache=new ft,a.showAgreement=a.showAgreement.bind(a),a.hideAgreement=a.hideAgreement.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Lt(t,[{key:\"showAgreement\",value:function(){this.setState({isAgreementVisible:!0})}},{key:\"hideAgreement\",value:function(){this.setState({isAgreementVisible:!1})}},{key:\"_getActiveCoinInfo\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_\"+e.provider+\"_\"+t.action,null),n=e.viewSettings.get(\"activeCoinId_\"+e.provider,null),s=null;s=\"deposit\"==t.action?\"BTC\":\"GDEX.BTC\";var i=a||s,o=n||1002;return this._getWithdrawRule(o),{name:i,id:o}}},{key:\"_transformCoin\",value:function(e){var t=[];try{e.filter(function(e){return 0!=e.status}).forEach(function(e){var a={};1==e.type?(a.innerAssetId=e.assetId,a.innerAssetName=e.assetName,a.innerSymbol=e.assetSymbol,a.outerAssetId=e.relationId,a.outerAssetName=e.relationSymbol,a.outerSymbol=e.relationSymbol,a.status=e.withdrawStatus,a.gateFee=e.withdrawFees,a.needMemo=e.needMemo,a.minTransactionAmount=e.minWithdrawAmount,a.type=e.type,a.relationPrecision=e.relationPrecision):2==e.type?(a.innerAssetId=e.relationId,a.innerAssetName=e.relationSymbol,a.innerSymbol=e.relationSymbol,a.outerAssetId=e.assetId,a.outerAssetName=e.assetName,a.outerSymbol=e.assetSymbol,a.status=e.depositStatus,a.gateFee=e.depositFees,a.needMemo=e.needMemo,a.minTransactionAmount=e.minDepositAmount,a.type=e.type,a.relationPrecision=e.relationPrecision):a=null,a&&t.push(a)})}catch(e){console.log(\"Transform coin failed: \",e)}return t}},{key:\"_getUserInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(e||(e=this.props.account.get(\"name\")),t||(t=this.state.isAgree),t){var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.GET_USER_INFO,t)}({userAccount:e,isAgree:t}),n=this;a.then(function(t){var a=t.user;n.setState({isAgree:!0,user_info:{user_id:a.uid,status:a.status}}),0==a.status&&a.agreeAgreement?n.user_info_cache.cacheUserInfo(e,a.uid,a.status):n.user_info_cache.delUserInfo(e)}),a.catch(function(e){console.log(\"Exception in fetching user info: \"+e)})}}},{key:\"_getCoins\",value:function(){var e=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return e.requestType||(e.requestType=0),e.assetType||(e.assetType=0),e.version||(e.version=\"1.1\"),pt(e,b.f.BASE+b.f.ASSET_LIST,t)}({userAccount:this.props.account.get(\"name\")}),t=this;e.then(function(e){var a=t._transformCoin(e.assets);t.setState({isAvailable:!0,coins:a})},function(e){console.log(\"fail\"+e)}),e.catch(function(e){console.log(e),t.setState({isAvailable:!1})})}},{key:\"_checkIsAgree\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;e||(e=this.props.account.get(\"name\"));var t=this.user_info_cache.getUserInfo(e);if(t)this.setState({user_info:t,isAgree:!0});else{var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.USER_AGREEMENT,t)}({userAccount:e}),n=this;a.then(function(t){t.agree?(n.setState({isAgree:!0}),n._getUserInfo(e,!0)):n.setState({isAgree:!1})},function(e){console.log(\"fail\"+e)}),a.catch(function(e){console.log(e),n.setState({isAvailable:!1})})}}},{key:\"componentWillMount\",value:function(){this._checkIsAgree(),this._getCoins()}},{key:\"_getWithdrawAssetId\",value:function(e){var t=1,a=\"innerSymbol\";return\"deposit\"==this.state.action&&(t=2,a=\"outerSymbol\"),this.state.coins.filter(function(n){return n.type==t&&n[a]==e})[0].innerAssetId}},{key:\"onSelectCoin\",value:function(e){var t=this.state.activeCoinInfo;t.name=e.target.value;var a=this._getWithdrawAssetId(e.target.value);t.id=a,this.setState({activeCoinInfo:t}),this._getWithdrawRule(a);var n={};n[\"activeCoin_\"+this.props.provider+\"_\"+this.state.action]=e.target.value,n[\"activeCoinId_\"+this.props.provider]=a,R.a.changeViewSetting(n)}},{key:\"_getWithdrawRule\",value:function(e){var t=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return pt(e,b.f.BASE+b.f.WITHDRAW_RULE,t)}({assetId:e}),a=this;t.then(function(e){var t=Ut.decryptPublic(e.transferToAccount,\"utf-8\");a.setState({intermediate:t,memo_rule:e.memoRule})},function(e){console.log(\"fail\"+e),a.setState({intermediate:null})}),t.catch(function(e){console.log(e),a.setState({intermediate:null})})}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoinInfo(this.props,{action:e});this.setState({action:e,activeCoinInfo:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},this.props.provider+\"Action\",e))}},{key:\"componentWillReceiveProps\",value:function(e){this.props.account!=e.account&&this._checkIsAgree(e.account.get(\"name\"))}},{key:\"_updateCheck\",value:function(){this.setState({agreeChecked:!this.state.agreeChecked}),this.setState({agreeNotice:!1})}},{key:\"_showUserAgreement\",value:function(){this.showAgreement()}},{key:\"_registerUser\",value:function(){this.state.agreeChecked?this._getUserInfo(null,!0):this.setState({agreeNotice:!0})}},{key:\"render\",value:function(){var e=this.props.account,t=this.state,a=t.coins,n=t.activeCoinInfo,i=t.action,o=t.isAvailable,r=t.user_info,l=t.isAgree,c=t.agreeChecked,p=t.agreeNotice,d=t.intermediate,m=t.memo_rule,h=\"https://support.gdex.io/\",_=\"602573197\",f=\"https://t.me/GDEXer\",y=s.a.createElement(\"div\",null,s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(u.a,{content:\"gateway.support_gdex\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"p\",null,\"Help:\",\" \",s.a.createElement(\"a\",{href:h,target:\"_blank\",rel:\"noopener noreferrer\"},h)),s.a.createElement(\"p\",null,\"QQ:\",\" \",s.a.createElement(\"a\",{target:\"_blank\",href:\"//shang.qq.com/wpa/qunwpa?idkey=5d192c325146762cf5a9256038fed9faef4fcace21a36882854354dd1d599f11\",rel:\"noopener noreferrer\"},_)),s.a.createElement(\"p\",null,\"Telegram:\",\" \",s.a.createElement(\"a\",{href:f,target:\"_blank\",rel:\"noopener noreferrer\"},f)));if(!l)return s.a.createElement(\"div\",null,s.a.createElement(\"span\",null,s.a.createElement(\"input\",{type:\"checkbox\",style:{marginRight:\"10px\"},checked:c,onChange:this._updateCheck.bind(this)}),s.a.createElement(u.a,{className:\"txtlabel\",content:\"gateway.agreement.hint\"}),s.a.createElement(\"a\",{onClick:this._showUserAgreement.bind(this)},\" \",s.a.createElement(u.a,{className:\"txtlabel\",content:\"gateway.agreement.name\"}))),p?s.a.createElement(\"div\",{className:\"has-error\",style:{paddingTop:10}},s.a.createElement(u.a,{className:\"txtlabel\",content:\"gateway.agreement.notice\"})):null,s.a.createElement(\"div\",{className:\"buttonGroup\"},s.a.createElement(\"span\",{style:{marginTop:\"20px\"},onClick:this._registerUser.bind(this),className:\" button\"},s.a.createElement(u.a,{className:\"txtlabel\",content:\"gateway.agreement.register\"}))),s.a.createElement(M.Modal,{footer:[s.a.createElement(M.Button,{type:\"primary\",key:\"close\",onClick:this.hideAgreement},j.a.translate(\"modal.close\"))],visible:this.state.isAgreementVisible,onCancel:this.hideAgreement},s.a.createElement(\"br\",null),s.a.createElement(\"div\",{className:\"grid-block vertical\"},s.a.createElement(qt,{onCancel:this.hideAgreement,locale:this.props.settings.get(\"locale\",\"en\")}))),y);if(!a&&o)return s.a.createElement(E.a,null);if(!o)return s.a.createElement(\"div\",null,s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.unavailable\",component:\"h4\"}));var g=null,w=null,v=null;\"deposit\"==i?(w=\"outerAssetId\",g=\"outerSymbol\",v=2):(w=\"innerAssetId\",g=\"innerSymbol\",v=1);var b=(a=a.filter(function(e){return e.type==v})).map(function(e){return s.a.createElement(\"option\",{value:e[g],key:e[g]},e[g])}).filter(function(e){return null!==e}),k=a.filter(function(e){return e[g]==n.name})[0],C=null;return k&&0==k.status?r?0!=r.status&&(C=s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.frozen\",account:e.get(\"name\"),component:\"h4\"}))):C=s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.user_unavailable\",component:\"h4\"})):C=s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.asset_unavailable\",asset:n.name,component:\"h4\"})),s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+i}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:n.name},b))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===i?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===i?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),C||s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(xt,{account:e,coin:k,issuer_account:d,user_id:r.user_id,action:this.state.action,gateway:\"gdex\",btsCoin:k.innerSymbol,memo_rule:m})),s.a.createElement(Pt,{userId:r.user_id,userAccount:e.get(\"name\"),assetId:k[w],assetName:k[g],compactView:!0,fullHeight:!0,recordType:\"deposit\"==i?1:2,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+this.state.action})})),y)}}]),t}(),Ht=Object(i.a)(Vt,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings,settings:W.a.getState().settings}}}),Jt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Gt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={trans_history:[]},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Jt(t,[{key:\"_history\",value:function(e,t){var a=this,n=\"\";n=\"deposit\"===t?b.j.BASE+b.j.DEPOSIT_HISTORY+\"?account=\"+e:b.j.BASE+b.j.WITHDRAW_HISTORY+\"?account=\"+e;var s={method:\"GET\",headers:new Headers({Accept:\"application/json\"}),mode:\"cors\",cache:\"default\"};fetch(n,s).then(function(e){if(e.ok)return e.json();this.LogError(e)}).then(function(e){return e}).then(function(e){return e}).then(function(e){a.setState({trans_history:e})})}},{key:\"componentWillMount\",value:function(){var e=this.props,t=e.account,a=e.action;this._history(t,a)}},{key:\"componentWillUpdate\",value:function(e,t){return e.action!==this.props.action&&(this._history(e.account,e.action),!0)}},{key:\"LogError\",value:function(e){console.error(\"服务器繁忙,请稍后重试; \\r\\nCode:\"+e.status)}},{key:\"render\",value:function(){var e=[];return this.state.trans_history.forEach(function(t,a){e.push(s.a.createElement(\"tr\",{key:a},s.a.createElement(\"td\",null,s.a.createElement(\"div\",{className:\"blocktrades-bridge\"},s.a.createElement(\"div\",{className:\"inline-block\"},s.a.createElement(\"div\",null,t.status)))),s.a.createElement(\"td\",null,s.a.createElement(\"div\",null,t.amount+t.inputCoinType)),s.a.createElement(\"td\",null,s.a.createElement(\"div\",null,s.a.createElement(\"a\",{href:\"https://www.cryptofresh.com/tx/\"+t.txid,target:\"_blank\",rel:\"noopener noreferrer\"},t.txid))),s.a.createElement(\"td\",null,t.createDate)))}),s.a.createElement(\"div\",null,s.a.createElement(\"div\",{className:\"block-content-header\"},s.a.createElement(\"span\",null,this.props.action?s.a.createElement(u.a,{content:\"gateway.recent_\"+this.props.action}):s.a.createElement(u.a,{content:\"account.recent\"}))),s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"thead\",null,e.length<=0?s.a.createElement(\"tr\",{key:\"no_recent\"},s.a.createElement(\"td\",{colSpan:\"2\"},s.a.createElement(u.a,{content:\"operation.no_recent\"}))):null,s.a.createElement(\"tr\",null,s.a.createElement(\"th\",null,\"状态\"),s.a.createElement(\"th\",null,\"deposit\"===this.props.action?\"充值数量\":\"提现数量\"),s.a.createElement(\"th\",null,\"流水号\"),s.a.createElement(\"th\",null,\"创建时间\"))),s.a.createElement(\"tbody\",null,e)))}}]),t}();Gt.propTypes={account:A.a.string,action:A.a.string};var Xt=Object(d.a)(Gt),zt=a(2281),Kt=a(569),Qt=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var Yt=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));a.deposit_address_cache=new Kt.a;var n={Winex:b.j.BASE};return a.state={isModalVisible:!1,receive_address:{},url:e.url||n[e.gateway]},a.addDepositAddress=a.addDepositAddress.bind(a),a._copy=a._copy.bind(a),document.addEventListener(\"copy\",a._copy),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),Qt(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_copy\",value:function(e){try{e.clipboardData.setData(\"text/plain\",this.state.clipboardText),e.preventDefault()}catch(e){console.error(e)}}},{key:\"_getDepositObject\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props;return{inputCoinType:e.deposit_coin_type,outputCoinType:e.receive_coin_type,outputAddress:e.account.get(\"name\"),url:this.state.url,stateCallback:this.addDepositAddress}}},{key:\"componentWillMount\",value:function(){}},{key:\"componentWillReceiveProps\",value:function(e){e.account!==this.props.account&&this.setState({receive_address:{}})}},{key:\"componentWillUnmount\",value:function(){document.removeEventListener(\"copy\",this._copy)}},{key:\"addDepositAddress\",value:function(e){var t=this.props.account.get(\"name\");this.deposit_address_cache.cacheInputAddress(this.props.gateway,t,this.props.deposit_coin_type,this.props.receive_coin_type,e.address,e.memo),this.setState({receive_address:e})}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"toClipboard\",value:function(e){try{this.setState({clipboardText:e},function(){document.execCommand(\"copy\")})}catch(e){console.error(e)}}},{key:\"render\",value:function(){var e=\"deposit\"===this.props.action,t=s.a.createElement(\"div\",{style:{display:\"none\",minHeight:150}});if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return t;var a=this.props.account.get(\"balances\"),n=this.props.gateFee;this.props.receive_asset.get(\"symbol\");if(this.props.deprecated_in_favor_of){var i=!1,o=a.get(this.props.receive_asset.get(\"id\"));if(o){var r=m.ChainStore.getObject(o);if(r)0!=r.get(\"balance\")&&(i=!0)}if(!i)return t}var l=this.state.receive_address;if(!Object.keys(l).length){var c=this.props.account.get(\"name\");l=this.deposit_address_cache.getCachedInputAddress(this.props.gateway,c,this.props.deposit_coin_type,this.props.receive_coin_type)}if(!l)return Object(v.l)(this._getDepositObject()),s.a.createElement(\"div\",{style:{margin:\"3rem\"}},s.a.createElement(E.a,{type:\"three-bounce\"}));var p=this.getWithdrawModalId(),d=null,h=null,_=\"\",f=void 0;if(this.props.deposit_account){d=s.a.createElement(\"span\",null,this.props.deposit_account),_=this.props.receive_coin_type+\":\"+this.props.account.get(\"name\"),h=s.a.createElement(\"span\",null,_);var b=this.props.deposit_coin_type+\":\"}else{l.memo?(f=l.memo,_=l.address,d=s.a.createElement(\"span\",null,l.address),h=s.a.createElement(\"span\",null,l.memo)):(_=l.address,d=s.a.createElement(\"span\",null,l.address));b=\"\"}if(!this.props.isAvailable||e&&!this.props.deposit_account&&!this.state.receive_address)return s.a.createElement(\"div\",null,s.a.createElement(u.a,{className:\"txtlabel cancel\",content:\"gateway.unavailable\",component:\"h4\"}));var k={name:\"Winex\",qq:\"623556771\",support:\"support@winex.pro\"},C=s.a.createElement(\"div\",null,s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"winex.gateway.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"span\",null,\"Mail：\"),s.a.createElement(\"a\",{href:(-1===k.support.indexOf(\"@\")?\"\":\"mailto:\")+k.support,target:\"_blank\",rel:\"noopener noreferrer\"},k.support),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"span\",null,\"QQ群：\"),s.a.createElement(\"a\",{target:\"_blank\",href:\"//shang.qq.com/wpa/qunwpa?idkey=5346c21c6da5f4990daf9b178e2c71a160e0d4cfd2bbb7bbae21eea80f44a11f\",rel:\"noopener noreferrer\"},\"623556771\")));return e?s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1})))))),C),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(\"p\",{style:{color:\"red\"}},s.a.createElement(u.a,{content:\"winex.gateway.deposit_warning\",asset:this.props.deposit_asset}))),s.a.createElement(\"div\",{style:{padding:\"10px 0\",fontSize:\"1.1rem\",fontWeight:\"bold\"}},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,l.address&&\"unknown\"!==l.address?s.a.createElement(gt.a,{size:120,value:l.address}):null)),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,l.address&&\"unknown\"!==l.address?l.address:s.a.createElement(u.a,{content:\"winex.gateway.click_getaddress\"}))),h?s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,\"memo: \",h)):null)),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},d?s.a.createElement(\"div\",{className:\"button\",onClick:this.toClipboard.bind(this,_)},\"Copy address\"):null,f?s.a.createElement(\"div\",{className:\"button\",onClick:this.toClipboard.bind(this,f)},\"Copy memo\"):null,s.a.createElement(\"button\",{className:\"button\",onClick:v.l.bind(null,this._getDepositObject())},s.a.createElement(u.a,{content:\"winex.gateway.get_deposit_address\"})))))):s.a.createElement(\"div\",{className:\"Blocktrades__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible,id:p,overlay:!0},s.a.createElement(zt.a,{hideModal:this.hideModal,showModal:this.showModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),url:this.state.url,output_coin_name:this.props.deposit_asset_name,gateFee:n,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,min_withdraw_amount:this.props.min_withdraw_amount,max_withdraw_amount:this.props.max_withdraw_amount,fee_type:this.props.fee_type,memo_prefix:b,modal_id:p,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})),C)}}]),t}();Yt.propTypes={url:A.a.string,gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired,min_withdraw_amount:A.a.any,max_withdraw_amount:A.a.any,fee_type:A.a.string},Yt.defaultProps={autosubscribe:!1};var Zt=Object(d.a)(Yt),$t=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var a=[],n=!0,s=!1,i=void 0;try{for(var o,r=e[Symbol.iterator]();!(n=(o=r.next()).done)&&(a.push(o.value),!t||a.length!==t);n=!0);}catch(e){s=!0,i=e}finally{try{!n&&r.return&&r.return()}finally{if(s)throw i}}return a}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),ea=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var ta=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),n=e.viewSettings.get(e.provider+\"Action\",\"deposit\");return a.state={coins:[],activeCoin:a._getActiveCoin(e,{action:n}),action:n},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),ea(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_Winex_\"+t.action,null),n=null;return\"deposit\"==t.action&&(n=\"HSR\"),\"withdraw\"==t.action&&(n=\"WIN.HSR\"),a||n}},{key:\"componentWillMount\",value:function(){this._getCoins()}},{key:\"componentWillReceiveProps\",value:function(e){e.provider===this.props.provider&&e.action===this.props.action||this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_\"+this.props.provider+\"_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},this.props.provider+\"Action\",e))}},{key:\"_getCoins\",value:function(){var e=this;Promise.all([Object(v.d)(b.j.BASE+b.j.COINS_LIST),Object(v.f)(b.j.BASE+b.j.TRADING_PAIRS),Object(v.g)(b.j.BASE+b.j.ACTIVE_WALLETS)]).then(function(t){var a=$t(t,3),n=a[0],s=a[1],i=a[2],o=e._getBackedCoins({allCoins:n,tradingPairs:s}).filter(function(e){return!!e.walletType});o.forEach(function(e){e.isAvailable=-1!==i.indexOf(e.walletType)}),e.setState({coins:o})}).catch(function(e){console.log(e)})}},{key:\"_getBackedCoins\",value:function(e){var t=e.allCoins,a=e.tradingPairs,n={};t.forEach(function(e){return n[e.coinType]=e});var s={};a.forEach(function(e){s[e.inputCoinType]||(s[e.inputCoinType]={}),s[e.inputCoinType][e.outputCoinType]=!0});var i=[];return t.forEach(function(e){if(e.backingCoinType&&n[e.backingCoinType]){var t=s[e.backingCoinType]&&s[e.backingCoinType][e.coinType],a=s[e.coinType]&&s[e.coinType][e.backingCoinType];i.push({name:n[e.backingCoinType].name,intermediateAccount:n[e.backingCoinType].intermediateAccount,gateFee:n[e.backingCoinType].gateFee,walletType:n[e.backingCoinType].walletType,backingCoinType:n[e.backingCoinType].walletSymbol,symbol:e.walletSymbol,supportsMemos:n[e.backingCoinType].supportsOutputMemos,depositAllowed:t,withdrawalAllowed:a,minWithdrawAmount:n[e.backingCoinType].minAmount,maxWithdrawAmount:n[e.backingCoinType].maxAmount,feeType:n[e.backingCoinType].gateFeeType})}}),i}},{key:\"render\",value:function(){var e=this.props,t=e.account,a=e.provider,n=this.state,i=n.activeCoin,o=n.action,r=n.coins;if(!r.length)return s.a.createElement(E.a,null);var l=r.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===o?e.depositAllowed:e.withdrawalAllowed)}),c=l.map(function(e){var t=\"deposit\"===o?e.backingCoinType.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),p=l.filter(function(e){return\"deposit\"===o?e.backingCoinType.toUpperCase()===i:e.symbol===i})[0];return p||(p=l[0]),s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+o}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:i},c))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===this.state.action?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===this.state.action?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),p?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(Zt,{key:a+\".\"+p.symbol,gateway:a,issuer_account:p.intermediateAccount,account:t,deposit_asset:p.backingCoinType.toUpperCase(),deposit_asset_name:p.name,deposit_coin_type:p.backingCoinType.toLowerCase(),deposit_account:p.depositAccount,deposit_wallet_type:p.walletType,gateFee:p.gateFee,receive_asset:p.symbol,receive_coin_type:p.symbol.toLowerCase(),supports_output_memos:p.supportsMemos,isAvailable:p.isAvailable,min_withdraw_amount:p.minWithdrawAmount,max_withdraw_amount:p.maxWithdrawAmount,fee_type:p.feeType,action:this.state.action})),s.a.createElement(Xt,{account:t.get(\"name\"),action:this.state.action})):null)}}]),t}(),aa=(Object(i.a)(ta,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),a(2282)),na=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var sa=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.current_xbtsx_address_cache_version_string=\"1\"}return na(e,[{key:\"getIndexForDepositKeyInExchange\",value:function(e,t,a){return[this.current_xbtsx_address_cache_version_string,e,t,a].reduce(function(e,t){return e.concat(\"[\",t,\"]\")},\"\")}},{key:\"getCachedInputAddress\",value:function(e,t,a,n){var s=Z.a.getWallet();if(!s)return null;s.deposit_keys=s.deposit_keys||{},s.deposit_keys[e]=s.deposit_keys[e]||{};var i=this.getIndexForDepositKeyInExchange(t,a,n);s.deposit_keys[e][i]=s.deposit_keys[e][i]||[];var o=s.deposit_keys[e][i].length;return o?s.deposit_keys[e][i][o-1]:null}},{key:\"cacheInputAddress\",value:function(e,t,a,n,s,i){var o=Z.a.getWallet();if(!o)return null;o.deposit_keys=o.deposit_keys||{},o.deposit_keys[e]=o.deposit_keys[e]||{};var r=this.getIndexForDepositKeyInExchange(t,a,n);o.deposit_keys[e][r]=o.deposit_keys[e][r]||[],o.deposit_keys[e][r].push({address:s,memo:i}),Z.a._updateWallet()}}]),e}(),ia=a(2107),oa=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var ra=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.deposit_address_cache=new sa,a.state={isModalVisible:!1,account_name:null,receive_address:null},a.addDepositAddress=a.addDepositAddress.bind(a),a.showModal=a.showModal.bind(a),a.hideModal=a.hideModal.bind(a),a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),oa(t,[{key:\"showModal\",value:function(){this.setState({isModalVisible:!0})}},{key:\"hideModal\",value:function(){this.setState({isModalVisible:!1})}},{key:\"_getDepositObject\",value:function(){return{walletType:this.props.deposit_wallet_type,inputCoinType:this.props.deposit_coin_type,outputCoinType:this.props.receive_coin_type,outputAddress:this.props.account.get(\"name\"),stateCallback:this.addDepositAddress}}},{key:\"addDepositAddress\",value:function(e){var t=this.props.account.get(\"name\");this.setState({account_name:t}),this.setState({receive_address:e})}},{key:\"getWithdrawModalId\",value:function(){return\"withdraw_asset_\"+this.props.issuer_account.get(\"name\")+\"_\"+this.props.receive_asset.get(\"symbol\")}},{key:\"onWithdraw\",value:function(){this.showModal()}},{key:\"render\",value:function(){var e=s.a.createElement(\"div\",{style:{display:\"none\",minHeight:150}});if(!this.props.account||!this.props.issuer_account||!this.props.receive_asset)return e;var t=this.props.account.get(\"balances\");if(this.props.deprecated_in_favor_of){var a=!1,n=t.get(this.props.receive_asset.get(\"id\"));if(n){var i=m.ChainStore.getObject(n);if(i)0!=i.get(\"balance\")&&(a=!0)}if(!a)return e}var o=null;if(this.state.account_name===this.props.account.get(\"name\")&&(o=this.state.receive_address),!o)this.props.account.get(\"name\");if(!o)return Object(ia.b)(this._getDepositObject()),e;var r=this.getWithdrawModalId(),c=null,p=null,d=\"\",h=\"sth:\"+o.address+\"?vendorField=\"+this.props.account.get(\"name\"),_=!1;\"STH\"===this.props.deposit_asset&&(_=!0);var f=void 0;if(this.props.deposit_account){c=s.a.createElement(\"span\",null,this.props.deposit_account),d=this.props.deposit_account,f=\"dex:\"+this.props.account.get(\"name\"),p=s.a.createElement(\"span\",null,f);var v=this.props.deposit_coin_type+\":\"}else{o.memo?(f=o.memo,d=o.address,c=s.a.createElement(\"span\",null,o.address),p=s.a.createElement(\"span\",null,o.memo)):(d=o.address,c=s.a.createElement(\"span\",null,o.address));v=\"\"}var b=l.a.format_number(this.props.min_amount/l.a.get_asset_precision(this.props.asset_precision),this.props.asset_precision,!1);return\"deposit\"===this.props.action?s.a.createElement(\"div\",{className:\"rudex__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_deposit\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.your_account\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1})))))),f?null:s.a.createElement(\"div\",{className:\"QR\"},s.a.createElement(gt.a,{size:128,value:d}))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.deposit_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.deposit_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(\"b\",null,s.a.createElement(u.a,{content:\"gateway.xbtsx.min_amount\",minAmount:b,symbol:this.props.deposit_coin_type}))),s.a.createElement(\"div\",{style:{padding:\"10px 0\",fontSize:\"1.1rem\"}},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{style:{textTransform:\"uppercase\"},content:\"gateway.address\"}),\":\",\" \",s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},s.a.createElement(\"b\",null,c)))),p?s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{style:{textTransform:\"uppercase\"},content:\"gateway.memo\"}),\":\",\" \",s.a.createElement(x,{replaceCopyText:j.a.translate(\"gateway.use_copy_button\")},s.a.createElement(\"b\",null,\" \",p,\" \")))):null)),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:10}},c?s.a.createElement(B.a,{text:d},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_address\"}))):null,f?s.a.createElement(B.a,{text:f},s.a.createElement(\"div\",{className:\"button\"},s.a.createElement(u.a,{content:\"gateway.copy_memo\"}))):null,_?s.a.createElement(\"a\",{className:\"button\",href:h},s.a.createElement(u.a,{content:\"gateway.deposit_from_wallet\"}),\" \",this.props.deposit_asset):null),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_amount\",minDeposit:b,coin:this.props.deposit_asset}),s.a.createElement(u.a,{className:\"has-error fz_14\",component:\"p\",content:\"gateway.min_deposit_warning_asset\",minDeposit:b,coin:this.props.deposit_asset})))):s.a.createElement(\"div\",{className:\"rudex__gateway grid-block no-padding no-margin\"},s.a.createElement(\"div\",{className:\"small-12 medium-5\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_summary\"}),s.a.createElement(\"div\",{className:\"small-12 medium-10\"},s.a.createElement(\"table\",{className:\"table\"},s.a.createElement(\"tbody\",null,s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_withdraw\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(g.a,{name:this.props.receive_asset.get(\"symbol\"),replace:!1}))),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.asset_to_receive\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},this.props.deposit_asset)),s.a.createElement(\"tr\",null,s.a.createElement(u.a,{component:\"td\",content:\"gateway.intermediate\"}),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(w.a,{account:this.props.issuer_account.get(\"id\")}))),s.a.createElement(\"tr\",null,s.a.createElement(\"td\",null,s.a.createElement(u.a,{content:\"gateway.balance\"}),\":\"),s.a.createElement(\"td\",{style:{fontWeight:\"bold\",color:\"#049cce\",textAlign:\"right\"}},s.a.createElement(y.a,{account:this.props.account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),replace:!1}))))))),s.a.createElement(\"div\",{className:\"small-12 medium-7\"},s.a.createElement(u.a,{component:\"h4\",content:\"gateway.withdraw_inst\"}),s.a.createElement(\"label\",{className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.withdraw_to\",asset:this.props.deposit_asset}),\":\"),s.a.createElement(\"div\",{className:\"button-group\",style:{paddingTop:20}},s.a.createElement(\"button\",{className:\"button success\",style:{fontSize:\"1.3rem\"},onClick:this.onWithdraw.bind(this)},s.a.createElement(u.a,{content:\"gateway.withdraw_now\"}),\" \"))),s.a.createElement(M.Modal,{onCancel:this.hideModal,title:j.a.translate(\"gateway.withdraw_coin\",{coin:this.props.deposit_asset_name,symbol:this.props.deposit_asset}),footer:null,visible:this.state.isModalVisible,id:r,overlay:!0},s.a.createElement(aa.a,{hideModal:this.hideModal,showModal:this.showModal,account:this.props.account.get(\"name\"),issuer:this.props.issuer_account.get(\"name\"),asset:this.props.receive_asset.get(\"symbol\"),output_coin_name:this.props.deposit_asset_name,output_coin_symbol:this.props.deposit_asset,output_coin_type:this.props.deposit_coin_type,output_wallet_type:this.props.deposit_wallet_type,output_supports_memos:this.props.supports_output_memos,memo_prefix:v,modal_id:r,min_amount:this.props.min_amount,withdraw_fee:this.props.withdraw_fee,asset_precision:this.props.asset_precision,balance:this.props.account.get(\"balances\").toJS()[this.props.receive_asset.get(\"id\")]})))}}]),t}();ra.propTypes={gateway:A.a.string,deposit_coin_type:A.a.string,deposit_asset_name:A.a.string,deposit_account:A.a.string,receive_coin_type:A.a.string,account:p.a.ChainAccount,issuer_account:p.a.ChainAccount,deposit_asset:A.a.string,deposit_wallet_type:A.a.string,receive_asset:p.a.ChainAsset,deprecated_in_favor_of:p.a.ChainAsset,deprecated_message:A.a.string,action:A.a.string,supports_output_memos:A.a.bool.isRequired,min_amount:A.a.number,deposit_fee:A.a.number,withdraw_fee:A.a.number,asset_precision:A.a.number};var la=Object(d.a)(ra,{keep_updating:!0}),ca=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();var ua=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={activeCoin:a._getActiveCoin(e,{action:\"deposit\"}),action:e.viewSettings.get(\"xbtsxAction\",\"deposit\")},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.a.Component),ca(t,[{key:\"_getActiveCoin\",value:function(e,t){var a=e.viewSettings.get(\"activeCoin_xbtsx_\"+t.action,null),n=null;return\"deposit\"==t.action&&(n=\"PPY\"),\"withdraw\"==t.action&&(n=\"PPY\"),a||n}},{key:\"componentWillReceiveProps\",value:function(e){e.provider!==this.props.provider&&this.setState({activeCoin:this._getActiveCoin(e,this.state.action)})}},{key:\"onSelectCoin\",value:function(e){this.setState({activeCoin:e.target.value});var t={};t[\"activeCoin_xbtsx_\"+this.state.action]=e.target.value,R.a.changeViewSetting(t)}},{key:\"changeAction\",value:function(e){var t=this._getActiveCoin(this.props,{action:e});this.setState({action:e,activeCoin:t}),R.a.changeViewSetting(function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}({},\"xbtsxAction\",e))}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.coins,n=t.account,i=this.state,o=i.activeCoin,r=i.action;if(!a.length)return s.a.createElement(E.a,null);var l=a.filter(function(e){return!(!e||!e.symbol)&&(\"deposit\"===r?e.depositAllowed:e.withdrawalAllowed)}),c=l.map(function(e){var t=\"deposit\"===r?e.backingCoin.toUpperCase():e.symbol;return s.a.createElement(\"option\",{value:t,key:e.symbol},t)}).filter(function(e){return null!==e}),p=l.filter(function(e){return\"deposit\"===r?e.backingCoin.toUpperCase()===o:e.symbol===o})[0];p||(p=l[0]);var d=\"deposit\"===this.state.action;return s.a.createElement(\"div\",{style:this.props.style},s.a.createElement(\"div\",{className:\"grid-block no-margin vertical medium-horizontal no-padding\"},s.a.createElement(\"div\",{className:\"medium-4\"},s.a.createElement(\"div\",null,s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.choose_\"+r}),\":\",\" \"),s.a.createElement(\"select\",{className:\"external-coin-types bts-select\",onChange:this.onSelectCoin.bind(this),value:o},c))),s.a.createElement(\"div\",{className:\"medium-6 medium-offset-1\"},s.a.createElement(\"label\",{style:{minHeight:\"2rem\"},className:\"left-label\"},s.a.createElement(u.a,{content:\"gateway.gateway_text\"}),\":\"),s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{className:\"deposit\"===r?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"deposit\")},s.a.createElement(u.a,{content:\"gateway.deposit\"}))),s.a.createElement(\"li\",{className:\"withdraw\"===r?\"is-active\":\"\"},s.a.createElement(\"a\",{onClick:this.changeAction.bind(this,\"withdraw\")},s.a.createElement(u.a,{content:\"gateway.withdraw\"}))))))),p?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{marginBottom:15}},s.a.createElement(la,{key:\"\"+p.symbol,gateway:p.gatewayWallet,issuer_account:p.issuer,account:n,deposit_asset:p.backingCoin.toUpperCase(),deposit_asset_name:p.name,deposit_coin_type:p.backingCoin.toLowerCase(),deposit_account:p.gatewayWallet,deposit_wallet_type:p.walletType,receive_asset:p.symbol,receive_coin_type:p.symbol.toLowerCase(),supports_output_memos:p.memoSupport,min_amount:p.minAmount,asset_precision:p.precision,action:this.state.action}),s.a.createElement(\"label\",{className:\"left-label\"},\"Support\"),s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.xbtsx.support_block\"}),s.a.createElement(\"br\",null),s.a.createElement(\"br\",null),s.a.createElement(\"a\",{href:\"https://t.me/xbtsio\",target:\"_blank\",rel:\"noopener noreferrer\"},\"https://t.me/xbtsio\"))),p&&p.symbol?s.a.createElement(q.b,{asset:p.symbol,fromAccount:d?p.issuerId:this.props.account.get(\"id\"),to:d?this.props.account.get(\"id\"):p.issuerId},function(t){var a=t.asset,n=t.to,i=t.fromAccount;return s.a.createElement(q.a,{accountsList:U.a.List([e.props.account.get(\"id\")]),limit:10,compactView:!0,fullHeight:!0,filter:\"transfer\",title:s.a.createElement(u.a,{content:\"gateway.recent_\"+e.state.action}),customFilter:{fields:[\"to\",\"from\",\"asset_id\"],values:{to:n.get(\"id\"),from:i.get(\"id\"),asset_id:a.get(\"id\")}}})}):null):null)}}]),t}(),pa=Object(i.a)(ua,{listenTo:function(){return[W.a]},getProps:function(){return{viewSettings:W.a.getState().viewSettings}}}),da=a(588),ma=a(585),ha=a(38),_a=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();function fa(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function ya(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function ga(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var wa=function(e){function t(e){fa(this,t);var a=ya(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.state={olService:e.viewSettings.get(\"olService\",\"gateway\"),rudexService:e.viewSettings.get(\"rudexService\",\"gateway\"),bitsparkService:e.viewSettings.get(\"bitsparkService\",\"gateway\"),xbtsxService:e.viewSettings.get(\"xbtsxService\",\"gateway\"),btService:e.viewSettings.get(\"btService\",\"bridge\"),citadelService:e.viewSettings.get(\"citadelService\",\"bridge\"),metaService:e.viewSettings.get(\"metaService\",\"bridge\"),activeService:e.viewSettings.get(\"activeService\",0)},a}return ga(t,s.a.Component),_a(t,[{key:\"shouldComponentUpdate\",value:function(e,t){return e.account!==this.props.account||e.servicesDown!==this.props.servicesDown||!l.a.are_equal_shallow(e.blockTradesBackedCoins,this.props.blockTradesBackedCoins)||!l.a.are_equal_shallow(e.openLedgerBackedCoins,this.props.openLedgerBackedCoins)||!l.a.are_equal_shallow(e.citadelBackedCoins,this.props.citadelBackedCoins)||t.olService!==this.state.olService||t.rudexService!==this.state.rudexService||t.bitsparkService!==this.state.bitsparkService||t.xbtsxService!==this.state.xbtsxService||t.btService!==this.state.btService||t.citadelService!==this.state.citadelService||t.metaService!==this.state.metaService||t.activeService!==this.state.activeService}},{key:\"componentWillMount\",value:function(){o.a.getFinalFeeAsset(this.props.account,\"transfer\")}},{key:\"toggleOLService\",value:function(e){this.setState({olService:e}),R.a.changeViewSetting({olService:e})}},{key:\"toggleRuDEXService\",value:function(e){this.setState({rudexService:e}),R.a.changeViewSetting({rudexService:e})}},{key:\"toggleXbtsxService\",value:function(e){this.setState({xbtsxService:e}),R.a.changeViewSetting({xbtsxService:e})}},{key:\"toggleBitSparkService\",value:function(e){this.setState({bitsparkService:e}),R.a.changeViewSetting({bitsparkService:e})}},{key:\"toggleCTService\",value:function(e){this.setState({btService:e}),R.a.changeViewSetting({btService:e})}},{key:\"toggleCitadelService\",value:function(e){this.setState({citadelService:e}),R.a.changeViewSetting({citadelService:e})}},{key:\"toggleMetaService\",value:function(e){this.setState({metaService:e}),R.a.changeViewSetting({metaService:e})}},{key:\"onSetService\",value:function(e){this.setState({activeService:parseInt(e.target.value)}),R.a.changeViewSetting({activeService:parseInt(e.target.value)})}},{key:\"renderServices\",value:function(e,t,a,n){var i=[],o=this.props.account,r=this.state,l=r.olService,c=r.btService,p=r.rudexService,d=r.bitsparkService,m=r.xbtsxService;r.citadelService;return i.push({name:\"Openledger (OPEN.X)\",template:s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{className:\"service-selector\",style:{marginBottom:\"2rem\"}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{onClick:this.toggleOLService.bind(this,\"gateway\"),className:\"gateway\"===l?\"is-active\":\"\"},s.a.createElement(\"a\",null,s.a.createElement(u.a,{content:\"gateway.gateway\"}))),s.a.createElement(\"li\",{onClick:this.toggleOLService.bind(this,\"fiat\"),className:\"fiat\"===l?\"is-active\":\"\"},s.a.createElement(u.a,{component:\"a\",content:\"gateway.fiat\"})))),\"gateway\"===l&&e.length?s.a.createElement(Y,{account:o,coins:e,provider:\"openledger\"}):null,\"fiat\"===l?s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{paddingBottom:15}},s.a.createElement(u.a,{component:\"h5\",content:\"gateway.fiat_text\",unsafe:!0})),s.a.createElement(ye,{rpc_url:b.g.RPC_URL,account:o,issuer_account:\"openledger-fiat\"}),s.a.createElement(ve,{rpc_url:b.g.RPC_URL,account:o})):null)}),i.push({name:\"RuDEX (RUDEX.X)\",template:s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{className:\"service-selector\",style:{marginBottom:\"2rem\"}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{onClick:this.toggleRuDEXService.bind(this,\"gateway\"),className:\"gateway\"===p?\"is-active\":\"\"},s.a.createElement(\"a\",null,s.a.createElement(u.a,{content:\"gateway.gateway\"}))),s.a.createElement(\"li\",{onClick:this.toggleRuDEXService.bind(this,\"fiat\"),className:\"fiat\"===p?\"is-active\":\"\"},s.a.createElement(\"a\",null,\"Fiat\")))),\"gateway\"===p&&t.length?s.a.createElement(ze,{account:o,coins:t}):null,\"fiat\"===p?s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.rudex.coming_soon\"})):null)}),i.push({name:\"BitSpark (SPARKDEX.X)\",template:s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{className:\"service-selector\",style:{marginBottom:\"2rem\"}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{onClick:this.toggleBitSparkService.bind(this,\"gateway\"),className:\"gateway\"===d?\"is-active\":\"\"},s.a.createElement(\"a\",null,s.a.createElement(u.a,{content:\"gateway.gateway\"}))))),\"gateway\"===d&&a.length?s.a.createElement(ot,{account:o,coins:a,provider:\"bitspark\"}):null)}),i.push({name:\"XCTS (XCTSX.X)\",template:s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{className:\"service-selector\",style:{marginBottom:\"2rem\"}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{onClick:this.toggleXbtsxService.bind(this,\"gateway\"),className:\"gateway\"===m?\"is-active\":\"\"},s.a.createElement(\"a\",null,s.a.createElement(u.a,{content:\"gateway.gateway\"}))),s.a.createElement(\"li\",{onClick:this.toggleXbtsxService.bind(this,\"fiat\"),className:\"fiat\"===m?\"is-active\":\"\"},s.a.createElement(\"a\",null,\"Fiat\")))),\"gateway\"===m&&n.length?s.a.createElement(pa,{account:o,coins:n}):null,\"fiat\"===m?s.a.createElement(\"div\",null,s.a.createElement(u.a,{content:\"gateway.xbtsx.coming_soon\"})):null)}),i.push({name:\"BlockTrades\",template:s.a.createElement(\"div\",null,s.a.createElement(\"div\",{className:\"content-block\"},s.a.createElement(\"div\",{className:\"service-selector\",style:{marginBottom:\"2rem\"}},s.a.createElement(\"ul\",{className:\"button-group segmented no-margin\"},s.a.createElement(\"li\",{onClick:this.toggleCTService.bind(this,\"bridge\"),className:\"bridge\"===c?\"is-active\":\"\"},s.a.createElement(\"a\",null,s.a.createElement(u.a,{content:\"gateway.bridge\"}))))),s.a.createElement(be.a,{gateway:\"blocktrades\",issuer_account:\"blocktrades\",account:o,initial_deposit_input_coin_type:\"btc\",initial_deposit_output_coin_type:\"bts\",initial_deposit_estimated_input_amount:\"1.0\",initial_withdraw_input_coin_type:\"bts\",initial_withdraw_output_coin_type:\"btc\",initial_withdraw_estimated_input_amount:\"100000\",initial_conversion_input_coin_type:\"bts\",initial_conversion_output_coin_type:\"bitbtc\",initial_conversion_estimated_input_amount:\"1000\"})),s.a.createElement(\"div\",{className:\"content-block\"}))}),i.push({name:\"BitKapital\",template:s.a.createElement(Re.a,{viewSettings:this.props.viewSettings,account:o})}),i.push({name:\"GDEX\",template:s.a.createElement(\"div\",null,s.a.createElement(Ht,{account:o,provider:\"gdex\"}))}),i}},{key:\"render\",value:function(){var e=this,t=this.props,a=t.account,n=t.servicesDown,i=this.state.activeService,o=this.props.openLedgerBackedCoins.map(function(e){return e}).sort(function(e,t){return e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0}),r=this.props.rudexBackedCoins.map(function(e){return e}).sort(function(e,t){return e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0}),l=this.props.bitsparkBackedCoins.map(function(e){return e}).sort(function(e,t){return e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0}),c=this.props.xbtsxBackedCoins.map(function(e){return e}).sort(function(e,t){return e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0}),p=this.renderServices(o,r,l,c),d=p.map(function(e,t){return s.a.createElement(\"option\",{key:t,value:t},e.name)}),m=[\"Winex\",\"GDEX\",\"OPEN\",\"RUDEX\",\"SPARKDEX\",\"TRADE\",\"BITKAPITAL\",\"XCTSX\",\"CITADEL\"][i],h=n.get(m);return s.a.createElement(\"div\",{className:this.props.contained?\"grid-content\":\"grid-container\"},s.a.createElement(\"div\",{className:this.props.contained?\"\":\"grid-content\",style:{paddingTop:\"2rem\"}},s.a.createElement(\"div\",{className:\"grid-block vertical medium-horizontal no-margin no-padding\"},s.a.createElement(\"div\",{style:{paddingBottom:\"1rem\"}},s.a.createElement(da.a,{ref:\"deposit_modal\",modalId:\"deposit_modal_new\",account:this.props.currentAccount,backedCoins:this.props.backedCoins}),s.a.createElement(ma.a,{ref:\"withdraw_modal\",modalId:\"withdraw_modal_new\",backedCoins:this.props.backedCoins}),s.a.createElement(ha.a,{string:\"gateway.phase_out_warning\",keys:[{arg:\"deposit_modal_link\",value:s.a.createElement(\"a\",{onClick:function(){e.refs.deposit_modal&&e.refs.deposit_modal.show()}},s.a.createElement(u.a,{content:\"modal.deposit.submit\"}))},{arg:\"withdraw_modal_link\",value:s.a.createElement(\"a\",{onClick:function(){e.refs.withdraw_modal&&e.refs.withdraw_modal.show()}},s.a.createElement(u.a,{content:\"modal.withdraw.submit\"}))}]}))),s.a.createElement(u.a,{content:\"gateway.title\",component:\"h2\"}),s.a.createElement(\"div\",{className:\"grid-block vertical medium-horizontal no-margin no-padding\"},s.a.createElement(\"div\",{className:\"medium-6 show-for-medium\"},s.a.createElement(Fe.a,{path:\"components/DepositWithdraw\",section:\"deposit-short\"})),s.a.createElement(\"div\",{className:\"medium-5 medium-offset-1\"},s.a.createElement(Fe.a,{account:a.get(\"name\"),path:\"components/DepositWithdraw\",section:\"receive\"}))),s.a.createElement(\"div\",null,s.a.createElement(\"div\",{className:\"grid-block vertical medium-horizontal no-margin no-padding\"},s.a.createElement(\"div\",{className:\"medium-6 small-order-2 medium-order-1\"},s.a.createElement(u.a,{component:\"label\",className:\"left-label\",content:\"gateway.service\"}),s.a.createElement(\"select\",{onChange:this.onSetService.bind(this),className:\"bts-select\",value:i},d),h?s.a.createElement(u.a,{style:{color:\"red\",marginBottom:\"1em\",display:\"block\"},content:\"gateway.unavailable_\"+m}):null),s.a.createElement(\"div\",{className:\"medium-5 medium-offset-1 small-order-1 medium-order-2\",style:{paddingBottom:20}},s.a.createElement(u.a,{component:\"label\",className:\"left-label\",content:\"gateway.your_account\"}),s.a.createElement(\"div\",{className:\"inline-label\"},s.a.createElement(Qe.a,{size:{height:40,width:40},account:a.get(\"name\"),custom_image:null}),s.a.createElement(\"input\",{type:\"text\",value:a.get(\"name\"),placeholder:null,disabled:!0,onChange:function(){},onKeyDown:function(){},tabIndex:1}))))),s.a.createElement(\"div\",{className:\"grid-content no-padding\",style:{paddingTop:15}},h?null:i&&p[i]?p[i].template:p[0].template)))}}]),t}();wa.propTypes={account:p.a.ChainAccount.isRequired,contained:A.a.bool},wa.defaultProps={contained:!1},wa=Object(d.a)(wa);var va=function(e){function t(){return fa(this,t),ya(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return ga(t,s.a.Component),_a(t,[{key:\"componentWillMount\",value:function(){Object(r.g)()}},{key:\"render\",value:function(){return s.a.createElement(wa,this.props)}}]),t}();t.default=Object(i.a)(va,{listenTo:function(){return[We.a,W.a,Ke.a]},getProps:function(){return{currentAccount:We.a.getState().currentAccount||We.a.getState().passwordAccount,account:We.a.getState().currentAccount,viewSettings:W.a.getState().viewSettings,backedCoins:Ke.a.getState().backedCoins,openLedgerBackedCoins:Ke.a.getState().backedCoins.get(\"OPEN\",[]),rudexBackedCoins:Ke.a.getState().backedCoins.get(\"RUDEX\",[]),bitsparkBackedCoins:Ke.a.getState().backedCoins.get(\"SPARKDEX\",[]),blockTradesBackedCoins:Ke.a.getState().backedCoins.get(\"TRADE\",[]),citadelBackedCoins:Ke.a.getState().backedCoins.get(\"CITADEL\",[]),winexBackedCoins:Ke.a.getState().backedCoins.get(\"WIN\",[]),xbtsxBackedCoins:Ke.a.getState().backedCoins.get(\"XCTSX\",[]),servicesDown:Ke.a.getState().down||{}}}})}}]);","extractedComments":[]}